/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeGitCommitsInPageRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeGitCommitsInPageRequest{}

// DescribeGitCommitsInPageRequest struct for DescribeGitCommitsInPageRequest
type DescribeGitCommitsInPageRequest struct {
	// 仓库id
	DepotId int64 `json:"DepotId"`
	// 仓库路径，DepotId与DepotPath二选一即可
	DepotPath *string `json:"DepotPath,omitempty"`
	// 查询截止日志
	EndDate *string `json:"EndDate,omitempty"`
	// 提交信息中的关键词
	KeyWord *string `json:"KeyWord,omitempty"`
	// 分页页码
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 分页页距
	PageSize *int64 `json:"PageSize,omitempty"`
	// 文件路径
	Path *string `json:"Path,omitempty"`
	// 分支名称
	Ref string `json:"Ref"`
	// 查询起始日期
	StartDate *string `json:"StartDate,omitempty"`
}

type _DescribeGitCommitsInPageRequest DescribeGitCommitsInPageRequest

// NewDescribeGitCommitsInPageRequest instantiates a new DescribeGitCommitsInPageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeGitCommitsInPageRequest(depotId int64, ref string) *DescribeGitCommitsInPageRequest {
	this := DescribeGitCommitsInPageRequest{}
	this.DepotId = depotId
	this.Ref = ref
	return &this
}

// NewDescribeGitCommitsInPageRequestWithDefaults instantiates a new DescribeGitCommitsInPageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeGitCommitsInPageRequestWithDefaults() *DescribeGitCommitsInPageRequest {
	this := DescribeGitCommitsInPageRequest{}
	return &this
}

// GetDepotId returns the DepotId field value
func (o *DescribeGitCommitsInPageRequest) GetDepotId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DepotId
}

// GetDepotIdOk returns a tuple with the DepotId field value
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetDepotIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotId, true
}

// SetDepotId sets field value
func (o *DescribeGitCommitsInPageRequest) SetDepotId(v int64) {
	o.DepotId = v
}

// GetDepotPath returns the DepotPath field value if set, zero value otherwise.
func (o *DescribeGitCommitsInPageRequest) GetDepotPath() string {
	if o == nil || utils.IsNil(o.DepotPath) {
		var ret string
		return ret
	}
	return *o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetDepotPathOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DepotPath) {
		return nil, false
	}
	return o.DepotPath, true
}

// HasDepotPath returns a boolean if a field has been set.
func (o *DescribeGitCommitsInPageRequest) HasDepotPath() bool {
	if o != nil && !utils.IsNil(o.DepotPath) {
		return true
	}

	return false
}

// SetDepotPath gets a reference to the given string and assigns it to the DepotPath field.
func (o *DescribeGitCommitsInPageRequest) SetDepotPath(v string) {
	o.DepotPath = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DescribeGitCommitsInPageRequest) GetEndDate() string {
	if o == nil || utils.IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DescribeGitCommitsInPageRequest) HasEndDate() bool {
	if o != nil && !utils.IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *DescribeGitCommitsInPageRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetKeyWord returns the KeyWord field value if set, zero value otherwise.
func (o *DescribeGitCommitsInPageRequest) GetKeyWord() string {
	if o == nil || utils.IsNil(o.KeyWord) {
		var ret string
		return ret
	}
	return *o.KeyWord
}

// GetKeyWordOk returns a tuple with the KeyWord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetKeyWordOk() (*string, bool) {
	if o == nil || utils.IsNil(o.KeyWord) {
		return nil, false
	}
	return o.KeyWord, true
}

// HasKeyWord returns a boolean if a field has been set.
func (o *DescribeGitCommitsInPageRequest) HasKeyWord() bool {
	if o != nil && !utils.IsNil(o.KeyWord) {
		return true
	}

	return false
}

// SetKeyWord gets a reference to the given string and assigns it to the KeyWord field.
func (o *DescribeGitCommitsInPageRequest) SetKeyWord(v string) {
	o.KeyWord = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeGitCommitsInPageRequest) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeGitCommitsInPageRequest) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *DescribeGitCommitsInPageRequest) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeGitCommitsInPageRequest) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeGitCommitsInPageRequest) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *DescribeGitCommitsInPageRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *DescribeGitCommitsInPageRequest) GetPath() string {
	if o == nil || utils.IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetPathOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *DescribeGitCommitsInPageRequest) HasPath() bool {
	if o != nil && !utils.IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *DescribeGitCommitsInPageRequest) SetPath(v string) {
	o.Path = &v
}

// GetRef returns the Ref field value
func (o *DescribeGitCommitsInPageRequest) GetRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ref
}

// GetRefOk returns a tuple with the Ref field value
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ref, true
}

// SetRef sets field value
func (o *DescribeGitCommitsInPageRequest) SetRef(v string) {
	o.Ref = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *DescribeGitCommitsInPageRequest) GetStartDate() string {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitCommitsInPageRequest) GetStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *DescribeGitCommitsInPageRequest) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *DescribeGitCommitsInPageRequest) SetStartDate(v string) {
	o.StartDate = &v
}

func (o DescribeGitCommitsInPageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeGitCommitsInPageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotId"] = o.DepotId
	if !utils.IsNil(o.DepotPath) {
		toSerialize["DepotPath"] = o.DepotPath
	}
	if !utils.IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if !utils.IsNil(o.KeyWord) {
		toSerialize["KeyWord"] = o.KeyWord
	}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	toSerialize["Ref"] = o.Ref
	if !utils.IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	return toSerialize, nil
}

func (o *DescribeGitCommitsInPageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotId",
		"Ref",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeGitCommitsInPageRequest := _DescribeGitCommitsInPageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeGitCommitsInPageRequest)

	if err != nil {
		return err
	}

	*o = DescribeGitCommitsInPageRequest(varDescribeGitCommitsInPageRequest)

	return err
}

type NullableDescribeGitCommitsInPageRequest struct {
	value *DescribeGitCommitsInPageRequest
	isSet bool
}

func (v NullableDescribeGitCommitsInPageRequest) Get() *DescribeGitCommitsInPageRequest {
	return v.value
}

func (v *NullableDescribeGitCommitsInPageRequest) Set(val *DescribeGitCommitsInPageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeGitCommitsInPageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeGitCommitsInPageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeGitCommitsInPageRequest(val *DescribeGitCommitsInPageRequest) *NullableDescribeGitCommitsInPageRequest {
	return &NullableDescribeGitCommitsInPageRequest{value: val, isSet: true}
}

func (v NullableDescribeGitCommitsInPageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeGitCommitsInPageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


