/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateReportRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateReportRequest{}

// CreateReportRequest struct for CreateReportRequest
type CreateReportRequest struct {
	// 附件 ID 数组：来自“生成附件预上传信息”接口
	AttachmentIds []int32 `json:"AttachmentIds,omitempty"`
	// 测试报告标题
	Name string `json:"Name"`
	// 项目名称
	ProjectName string `json:"ProjectName"`
	// 测试计划 ID 数组
	RunIds []int32 `json:"RunIds"`
}

type _CreateReportRequest CreateReportRequest

// NewCreateReportRequest instantiates a new CreateReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateReportRequest(name string, projectName string, runIds []int32) *CreateReportRequest {
	this := CreateReportRequest{}
	this.Name = name
	this.ProjectName = projectName
	this.RunIds = runIds
	return &this
}

// NewCreateReportRequestWithDefaults instantiates a new CreateReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateReportRequestWithDefaults() *CreateReportRequest {
	this := CreateReportRequest{}
	return &this
}

// GetAttachmentIds returns the AttachmentIds field value if set, zero value otherwise.
func (o *CreateReportRequest) GetAttachmentIds() []int32 {
	if o == nil || utils.IsNil(o.AttachmentIds) {
		var ret []int32
		return ret
	}
	return o.AttachmentIds
}

// GetAttachmentIdsOk returns a tuple with the AttachmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReportRequest) GetAttachmentIdsOk() ([]int32, bool) {
	if o == nil || utils.IsNil(o.AttachmentIds) {
		return nil, false
	}
	return o.AttachmentIds, true
}

// HasAttachmentIds returns a boolean if a field has been set.
func (o *CreateReportRequest) HasAttachmentIds() bool {
	if o != nil && !utils.IsNil(o.AttachmentIds) {
		return true
	}

	return false
}

// SetAttachmentIds gets a reference to the given []int32 and assigns it to the AttachmentIds field.
func (o *CreateReportRequest) SetAttachmentIds(v []int32) {
	o.AttachmentIds = v
}

// GetName returns the Name field value
func (o *CreateReportRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateReportRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateReportRequest) SetName(v string) {
	o.Name = v
}

// GetProjectName returns the ProjectName field value
func (o *CreateReportRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *CreateReportRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *CreateReportRequest) SetProjectName(v string) {
	o.ProjectName = v
}

// GetRunIds returns the RunIds field value
func (o *CreateReportRequest) GetRunIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.RunIds
}

// GetRunIdsOk returns a tuple with the RunIds field value
// and a boolean to check if the value has been set.
func (o *CreateReportRequest) GetRunIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunIds, true
}

// SetRunIds sets field value
func (o *CreateReportRequest) SetRunIds(v []int32) {
	o.RunIds = v
}

func (o CreateReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AttachmentIds) {
		toSerialize["AttachmentIds"] = o.AttachmentIds
	}
	toSerialize["Name"] = o.Name
	toSerialize["ProjectName"] = o.ProjectName
	toSerialize["RunIds"] = o.RunIds
	return toSerialize, nil
}

func (o *CreateReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Name",
		"ProjectName",
		"RunIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateReportRequest := _CreateReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateReportRequest)

	if err != nil {
		return err
	}

	*o = CreateReportRequest(varCreateReportRequest)

	return err
}

type NullableCreateReportRequest struct {
	value *CreateReportRequest
	isSet bool
}

func (v NullableCreateReportRequest) Get() *CreateReportRequest {
	return v.value
}

func (v *NullableCreateReportRequest) Set(val *CreateReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateReportRequest(val *CreateReportRequest) *NullableCreateReportRequest {
	return &NullableCreateReportRequest{value: val, isSet: true}
}

func (v NullableCreateReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


