/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ProtectedBranchMember type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ProtectedBranchMember{}

// ProtectedBranchMember 保护分支用户信息
type ProtectedBranchMember struct {
	// 成员global_key
	GlobalKey *string `json:"GlobalKey,omitempty"`
	// 是否允许强制推送
	HasPushAccess *bool `json:"HasPushAccess,omitempty"`
	// 是否允许合并修改分支
	HasUpdateAccess *bool `json:"HasUpdateAccess,omitempty"`
	// 成员姓名
	Name *string `json:"Name,omitempty"`
}

// NewProtectedBranchMember instantiates a new ProtectedBranchMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedBranchMember() *ProtectedBranchMember {
	this := ProtectedBranchMember{}
	var globalKey string = ""
	this.GlobalKey = &globalKey
	var hasPushAccess bool = false
	this.HasPushAccess = &hasPushAccess
	var hasUpdateAccess bool = false
	this.HasUpdateAccess = &hasUpdateAccess
	var name string = ""
	this.Name = &name
	return &this
}

// NewProtectedBranchMemberWithDefaults instantiates a new ProtectedBranchMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedBranchMemberWithDefaults() *ProtectedBranchMember {
	this := ProtectedBranchMember{}
	var globalKey string = ""
	this.GlobalKey = &globalKey
	var hasPushAccess bool = false
	this.HasPushAccess = &hasPushAccess
	var hasUpdateAccess bool = false
	this.HasUpdateAccess = &hasUpdateAccess
	var name string = ""
	this.Name = &name
	return &this
}

// GetGlobalKey returns the GlobalKey field value if set, zero value otherwise.
func (o *ProtectedBranchMember) GetGlobalKey() string {
	if o == nil || utils.IsNil(o.GlobalKey) {
		var ret string
		return ret
	}
	return *o.GlobalKey
}

// GetGlobalKeyOk returns a tuple with the GlobalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchMember) GetGlobalKeyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.GlobalKey) {
		return nil, false
	}
	return o.GlobalKey, true
}

// HasGlobalKey returns a boolean if a field has been set.
func (o *ProtectedBranchMember) HasGlobalKey() bool {
	if o != nil && !utils.IsNil(o.GlobalKey) {
		return true
	}

	return false
}

// SetGlobalKey gets a reference to the given string and assigns it to the GlobalKey field.
func (o *ProtectedBranchMember) SetGlobalKey(v string) {
	o.GlobalKey = &v
}

// GetHasPushAccess returns the HasPushAccess field value if set, zero value otherwise.
func (o *ProtectedBranchMember) GetHasPushAccess() bool {
	if o == nil || utils.IsNil(o.HasPushAccess) {
		var ret bool
		return ret
	}
	return *o.HasPushAccess
}

// GetHasPushAccessOk returns a tuple with the HasPushAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchMember) GetHasPushAccessOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.HasPushAccess) {
		return nil, false
	}
	return o.HasPushAccess, true
}

// HasHasPushAccess returns a boolean if a field has been set.
func (o *ProtectedBranchMember) HasHasPushAccess() bool {
	if o != nil && !utils.IsNil(o.HasPushAccess) {
		return true
	}

	return false
}

// SetHasPushAccess gets a reference to the given bool and assigns it to the HasPushAccess field.
func (o *ProtectedBranchMember) SetHasPushAccess(v bool) {
	o.HasPushAccess = &v
}

// GetHasUpdateAccess returns the HasUpdateAccess field value if set, zero value otherwise.
func (o *ProtectedBranchMember) GetHasUpdateAccess() bool {
	if o == nil || utils.IsNil(o.HasUpdateAccess) {
		var ret bool
		return ret
	}
	return *o.HasUpdateAccess
}

// GetHasUpdateAccessOk returns a tuple with the HasUpdateAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchMember) GetHasUpdateAccessOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.HasUpdateAccess) {
		return nil, false
	}
	return o.HasUpdateAccess, true
}

// HasHasUpdateAccess returns a boolean if a field has been set.
func (o *ProtectedBranchMember) HasHasUpdateAccess() bool {
	if o != nil && !utils.IsNil(o.HasUpdateAccess) {
		return true
	}

	return false
}

// SetHasUpdateAccess gets a reference to the given bool and assigns it to the HasUpdateAccess field.
func (o *ProtectedBranchMember) SetHasUpdateAccess(v bool) {
	o.HasUpdateAccess = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProtectedBranchMember) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchMember) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProtectedBranchMember) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProtectedBranchMember) SetName(v string) {
	o.Name = &v
}

func (o ProtectedBranchMember) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectedBranchMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.GlobalKey) {
		toSerialize["GlobalKey"] = o.GlobalKey
	}
	if !utils.IsNil(o.HasPushAccess) {
		toSerialize["HasPushAccess"] = o.HasPushAccess
	}
	if !utils.IsNil(o.HasUpdateAccess) {
		toSerialize["HasUpdateAccess"] = o.HasUpdateAccess
	}
	if !utils.IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	return toSerialize, nil
}

type NullableProtectedBranchMember struct {
	value *ProtectedBranchMember
	isSet bool
}

func (v NullableProtectedBranchMember) Get() *ProtectedBranchMember {
	return v.value
}

func (v *NullableProtectedBranchMember) Set(val *ProtectedBranchMember) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedBranchMember) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedBranchMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedBranchMember(val *ProtectedBranchMember) *NullableProtectedBranchMember {
	return &NullableProtectedBranchMember{value: val, isSet: true}
}

func (v NullableProtectedBranchMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedBranchMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


