/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"
	"github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeProjectDepotInfoListRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeProjectDepotInfoListRequest{}

// DescribeProjectDepotInfoListRequest struct for DescribeProjectDepotInfoListRequest
type DescribeProjectDepotInfoListRequest struct {
	// 页号
	PageNumber *string `json:"PageNumber"`
	// 每页的个数
	PageSize *string `json:"PageSize"`
	// 项目id
	ProjectId int64 `json:"ProjectId"`
}

type _DescribeProjectDepotInfoListRequest DescribeProjectDepotInfoListRequest

// NewDescribeProjectDepotInfoListRequest instantiates a new DescribeProjectDepotInfoListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeProjectDepotInfoListRequest(projectId int64) *DescribeProjectDepotInfoListRequest {
	this := DescribeProjectDepotInfoListRequest{}
	this.ProjectId = projectId
	return &this
}

// NewDescribeProjectDepotInfoListRequestWithDefaults instantiates a new DescribeProjectDepotInfoListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeProjectDepotInfoListRequestWithDefaults() *DescribeProjectDepotInfoListRequest {
	this := DescribeProjectDepotInfoListRequest{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeProjectDepotInfoListRequest) GetPageNumber() string {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret string = "1"
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectDepotInfoListRequest) GetPageNumberOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeProjectDepotInfoListRequest) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given string and assigns it to the PageNumber field.
func (o *DescribeProjectDepotInfoListRequest) SetPageNumber(v string) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeProjectDepotInfoListRequest) GetPageSize() string {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret string = "10"
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectDepotInfoListRequest) GetPageSizeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeProjectDepotInfoListRequest) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given string and assigns it to the PageSize field.
func (o *DescribeProjectDepotInfoListRequest) SetPageSize(v string) {
	o.PageSize = &v
}

// GetProjectId returns the ProjectId field value
func (o *DescribeProjectDepotInfoListRequest) GetProjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DescribeProjectDepotInfoListRequest) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DescribeProjectDepotInfoListRequest) SetProjectId(v int64) {
	o.ProjectId = v
}

func (o DescribeProjectDepotInfoListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeProjectDepotInfoListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	toSerialize["ProjectId"] = o.ProjectId
	return toSerialize, nil
}

func (o *DescribeProjectDepotInfoListRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ProjectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeProjectDepotInfoListRequest := _DescribeProjectDepotInfoListRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeProjectDepotInfoListRequest)

	if err != nil {
		return err
	}

	*o = DescribeProjectDepotInfoListRequest(varDescribeProjectDepotInfoListRequest)

	return err
}

type NullableDescribeProjectDepotInfoListRequest struct {
	value *DescribeProjectDepotInfoListRequest
	isSet bool
}

func (v NullableDescribeProjectDepotInfoListRequest) Get() *DescribeProjectDepotInfoListRequest {
	return v.value
}

func (v *NullableDescribeProjectDepotInfoListRequest) Set(val *DescribeProjectDepotInfoListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeProjectDepotInfoListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeProjectDepotInfoListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeProjectDepotInfoListRequest(val *DescribeProjectDepotInfoListRequest) *NullableDescribeProjectDepotInfoListRequest {
	return &NullableDescribeProjectDepotInfoListRequest{value: val, isSet: true}
}

func (v NullableDescribeProjectDepotInfoListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeProjectDepotInfoListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


