/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ModifyWikiRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ModifyWikiRequest{}

// ModifyWikiRequest struct for ModifyWikiRequest
type ModifyWikiRequest struct {
	// 内容
	Content string `json:"Content"`
	// wiki编号
	Iid int64 `json:"Iid"`
	// 备注
	Msg *string `json:"Msg,omitempty"`
	// 项目名称
	ProjectName string `json:"ProjectName"`
	// 标题
	Title string `json:"Title"`
}

type _ModifyWikiRequest ModifyWikiRequest

// NewModifyWikiRequest instantiates a new ModifyWikiRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyWikiRequest(content string, iid int64, projectName string, title string) *ModifyWikiRequest {
	this := ModifyWikiRequest{}
	this.Content = content
	this.Iid = iid
	this.ProjectName = projectName
	this.Title = title
	return &this
}

// NewModifyWikiRequestWithDefaults instantiates a new ModifyWikiRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyWikiRequestWithDefaults() *ModifyWikiRequest {
	this := ModifyWikiRequest{}
	return &this
}

// GetContent returns the Content field value
func (o *ModifyWikiRequest) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ModifyWikiRequest) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ModifyWikiRequest) SetContent(v string) {
	o.Content = v
}

// GetIid returns the Iid field value
func (o *ModifyWikiRequest) GetIid() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Iid
}

// GetIidOk returns a tuple with the Iid field value
// and a boolean to check if the value has been set.
func (o *ModifyWikiRequest) GetIidOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Iid, true
}

// SetIid sets field value
func (o *ModifyWikiRequest) SetIid(v int64) {
	o.Iid = v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *ModifyWikiRequest) GetMsg() string {
	if o == nil || utils.IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyWikiRequest) GetMsgOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *ModifyWikiRequest) HasMsg() bool {
	if o != nil && !utils.IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *ModifyWikiRequest) SetMsg(v string) {
	o.Msg = &v
}

// GetProjectName returns the ProjectName field value
func (o *ModifyWikiRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *ModifyWikiRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *ModifyWikiRequest) SetProjectName(v string) {
	o.ProjectName = v
}

// GetTitle returns the Title field value
func (o *ModifyWikiRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ModifyWikiRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ModifyWikiRequest) SetTitle(v string) {
	o.Title = v
}

func (o ModifyWikiRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyWikiRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Content"] = o.Content
	toSerialize["Iid"] = o.Iid
	if !utils.IsNil(o.Msg) {
		toSerialize["Msg"] = o.Msg
	}
	toSerialize["ProjectName"] = o.ProjectName
	toSerialize["Title"] = o.Title
	return toSerialize, nil
}

func (o *ModifyWikiRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Content",
		"Iid",
		"ProjectName",
		"Title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyWikiRequest := _ModifyWikiRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyWikiRequest)

	if err != nil {
		return err
	}

	*o = ModifyWikiRequest(varModifyWikiRequest)

	return err
}

type NullableModifyWikiRequest struct {
	value *ModifyWikiRequest
	isSet bool
}

func (v NullableModifyWikiRequest) Get() *ModifyWikiRequest {
	return v.value
}

func (v *NullableModifyWikiRequest) Set(val *ModifyWikiRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyWikiRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyWikiRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyWikiRequest(val *ModifyWikiRequest) *NullableModifyWikiRequest {
	return &NullableModifyWikiRequest{value: val, isSet: true}
}

func (v NullableModifyWikiRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyWikiRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


