/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the SetGrantToResourceRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &SetGrantToResourceRequest{}

// SetGrantToResourceRequest struct for SetGrantToResourceRequest
type SetGrantToResourceRequest struct {
	// 授权信息
	Grants []GrantInfo `json:"Grants"`
	Resource ResourceInfo `json:"Resource"`
}

type _SetGrantToResourceRequest SetGrantToResourceRequest

// NewSetGrantToResourceRequest instantiates a new SetGrantToResourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetGrantToResourceRequest(grants []GrantInfo, resource ResourceInfo) *SetGrantToResourceRequest {
	this := SetGrantToResourceRequest{}
	this.Grants = grants
	this.Resource = resource
	return &this
}

// NewSetGrantToResourceRequestWithDefaults instantiates a new SetGrantToResourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetGrantToResourceRequestWithDefaults() *SetGrantToResourceRequest {
	this := SetGrantToResourceRequest{}
	return &this
}

// GetGrants returns the Grants field value
func (o *SetGrantToResourceRequest) GetGrants() []GrantInfo {
	if o == nil {
		var ret []GrantInfo
		return ret
	}

	return o.Grants
}

// GetGrantsOk returns a tuple with the Grants field value
// and a boolean to check if the value has been set.
func (o *SetGrantToResourceRequest) GetGrantsOk() ([]GrantInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grants, true
}

// SetGrants sets field value
func (o *SetGrantToResourceRequest) SetGrants(v []GrantInfo) {
	o.Grants = v
}

// GetResource returns the Resource field value
func (o *SetGrantToResourceRequest) GetResource() ResourceInfo {
	if o == nil {
		var ret ResourceInfo
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *SetGrantToResourceRequest) GetResourceOk() (*ResourceInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *SetGrantToResourceRequest) SetResource(v ResourceInfo) {
	o.Resource = v
}

func (o SetGrantToResourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetGrantToResourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Grants"] = o.Grants
	toSerialize["Resource"] = o.Resource
	return toSerialize, nil
}

func (o *SetGrantToResourceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Grants",
		"Resource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetGrantToResourceRequest := _SetGrantToResourceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetGrantToResourceRequest)

	if err != nil {
		return err
	}

	*o = SetGrantToResourceRequest(varSetGrantToResourceRequest)

	return err
}

type NullableSetGrantToResourceRequest struct {
	value *SetGrantToResourceRequest
	isSet bool
}

func (v NullableSetGrantToResourceRequest) Get() *SetGrantToResourceRequest {
	return v.value
}

func (v *NullableSetGrantToResourceRequest) Set(val *SetGrantToResourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetGrantToResourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetGrantToResourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetGrantToResourceRequest(val *SetGrantToResourceRequest) *NullableSetGrantToResourceRequest {
	return &NullableSetGrantToResourceRequest{value: val, isSet: true}
}

func (v NullableSetGrantToResourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetGrantToResourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


