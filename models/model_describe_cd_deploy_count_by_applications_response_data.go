/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeCdDeployCountByApplicationsResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeCdDeployCountByApplicationsResponseData{}

// DescribeCdDeployCountByApplicationsResponseData DescribeCdDeployCountByApplicationsResponseData 结构
type DescribeCdDeployCountByApplicationsResponseData struct {
	// 各应用发布次数详情
	Details []CdDeployCountDetail `json:"Details,omitempty"`
	// 结束时间
	EndDate *string `json:"EndDate,omitempty"`
	// 开始时间
	StartDate *string `json:"StartDate,omitempty"`
	Total *CdDeployCount `json:"Total,omitempty"`
}

// NewDescribeCdDeployCountByApplicationsResponseData instantiates a new DescribeCdDeployCountByApplicationsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCdDeployCountByApplicationsResponseData() *DescribeCdDeployCountByApplicationsResponseData {
	this := DescribeCdDeployCountByApplicationsResponseData{}
	var endDate string = ""
	this.EndDate = &endDate
	var startDate string = ""
	this.StartDate = &startDate
	return &this
}

// NewDescribeCdDeployCountByApplicationsResponseDataWithDefaults instantiates a new DescribeCdDeployCountByApplicationsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCdDeployCountByApplicationsResponseDataWithDefaults() *DescribeCdDeployCountByApplicationsResponseData {
	this := DescribeCdDeployCountByApplicationsResponseData{}
	var endDate string = ""
	this.EndDate = &endDate
	var startDate string = ""
	this.StartDate = &startDate
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetDetails() []CdDeployCountDetail {
	if o == nil || utils.IsNil(o.Details) {
		var ret []CdDeployCountDetail
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetDetailsOk() ([]CdDeployCountDetail, bool) {
	if o == nil || utils.IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) HasDetails() bool {
	if o != nil && !utils.IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []CdDeployCountDetail and assigns it to the Details field.
func (o *DescribeCdDeployCountByApplicationsResponseData) SetDetails(v []CdDeployCountDetail) {
	o.Details = v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetEndDate() string {
	if o == nil || utils.IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) HasEndDate() bool {
	if o != nil && !utils.IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *DescribeCdDeployCountByApplicationsResponseData) SetEndDate(v string) {
	o.EndDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetStartDate() string {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *DescribeCdDeployCountByApplicationsResponseData) SetStartDate(v string) {
	o.StartDate = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetTotal() CdDeployCount {
	if o == nil || utils.IsNil(o.Total) {
		var ret CdDeployCount
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) GetTotalOk() (*CdDeployCount, bool) {
	if o == nil || utils.IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *DescribeCdDeployCountByApplicationsResponseData) HasTotal() bool {
	if o != nil && !utils.IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given CdDeployCount and assigns it to the Total field.
func (o *DescribeCdDeployCountByApplicationsResponseData) SetTotal(v CdDeployCount) {
	o.Total = &v
}

func (o DescribeCdDeployCountByApplicationsResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCdDeployCountByApplicationsResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Details) {
		toSerialize["Details"] = o.Details
	}
	if !utils.IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if !utils.IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !utils.IsNil(o.Total) {
		toSerialize["Total"] = o.Total
	}
	return toSerialize, nil
}

type NullableDescribeCdDeployCountByApplicationsResponseData struct {
	value *DescribeCdDeployCountByApplicationsResponseData
	isSet bool
}

func (v NullableDescribeCdDeployCountByApplicationsResponseData) Get() *DescribeCdDeployCountByApplicationsResponseData {
	return v.value
}

func (v *NullableDescribeCdDeployCountByApplicationsResponseData) Set(val *DescribeCdDeployCountByApplicationsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCdDeployCountByApplicationsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCdDeployCountByApplicationsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCdDeployCountByApplicationsResponseData(val *DescribeCdDeployCountByApplicationsResponseData) *NullableDescribeCdDeployCountByApplicationsResponseData {
	return &NullableDescribeCdDeployCountByApplicationsResponseData{value: val, isSet: true}
}

func (v NullableDescribeCdDeployCountByApplicationsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCdDeployCountByApplicationsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


