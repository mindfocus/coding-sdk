/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CdDeployTrendTotal type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CdDeployTrendTotal{}

// CdDeployTrendTotal CdDeployTrendTotal 结构
type CdDeployTrendTotal struct {
	// 应用发布趋势统计
	CdDeployTrend []CdDeployTrend `json:"CdDeployTrend,omitempty"`
	// 成功发布次数
	SuccessCount *int64 `json:"SuccessCount,omitempty"`
	// 发布总次数
	TotalCount *int64 `json:"TotalCount,omitempty"`
}

// NewCdDeployTrendTotal instantiates a new CdDeployTrendTotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdDeployTrendTotal() *CdDeployTrendTotal {
	this := CdDeployTrendTotal{}
	return &this
}

// NewCdDeployTrendTotalWithDefaults instantiates a new CdDeployTrendTotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdDeployTrendTotalWithDefaults() *CdDeployTrendTotal {
	this := CdDeployTrendTotal{}
	return &this
}

// GetCdDeployTrend returns the CdDeployTrend field value if set, zero value otherwise.
func (o *CdDeployTrendTotal) GetCdDeployTrend() []CdDeployTrend {
	if o == nil || utils.IsNil(o.CdDeployTrend) {
		var ret []CdDeployTrend
		return ret
	}
	return o.CdDeployTrend
}

// GetCdDeployTrendOk returns a tuple with the CdDeployTrend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdDeployTrendTotal) GetCdDeployTrendOk() ([]CdDeployTrend, bool) {
	if o == nil || utils.IsNil(o.CdDeployTrend) {
		return nil, false
	}
	return o.CdDeployTrend, true
}

// HasCdDeployTrend returns a boolean if a field has been set.
func (o *CdDeployTrendTotal) HasCdDeployTrend() bool {
	if o != nil && !utils.IsNil(o.CdDeployTrend) {
		return true
	}

	return false
}

// SetCdDeployTrend gets a reference to the given []CdDeployTrend and assigns it to the CdDeployTrend field.
func (o *CdDeployTrendTotal) SetCdDeployTrend(v []CdDeployTrend) {
	o.CdDeployTrend = v
}

// GetSuccessCount returns the SuccessCount field value if set, zero value otherwise.
func (o *CdDeployTrendTotal) GetSuccessCount() int64 {
	if o == nil || utils.IsNil(o.SuccessCount) {
		var ret int64
		return ret
	}
	return *o.SuccessCount
}

// GetSuccessCountOk returns a tuple with the SuccessCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdDeployTrendTotal) GetSuccessCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.SuccessCount) {
		return nil, false
	}
	return o.SuccessCount, true
}

// HasSuccessCount returns a boolean if a field has been set.
func (o *CdDeployTrendTotal) HasSuccessCount() bool {
	if o != nil && !utils.IsNil(o.SuccessCount) {
		return true
	}

	return false
}

// SetSuccessCount gets a reference to the given int64 and assigns it to the SuccessCount field.
func (o *CdDeployTrendTotal) SetSuccessCount(v int64) {
	o.SuccessCount = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *CdDeployTrendTotal) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdDeployTrendTotal) GetTotalCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *CdDeployTrendTotal) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *CdDeployTrendTotal) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o CdDeployTrendTotal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdDeployTrendTotal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CdDeployTrend) {
		toSerialize["CdDeployTrend"] = o.CdDeployTrend
	}
	if !utils.IsNil(o.SuccessCount) {
		toSerialize["SuccessCount"] = o.SuccessCount
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableCdDeployTrendTotal struct {
	value *CdDeployTrendTotal
	isSet bool
}

func (v NullableCdDeployTrendTotal) Get() *CdDeployTrendTotal {
	return v.value
}

func (v *NullableCdDeployTrendTotal) Set(val *CdDeployTrendTotal) {
	v.value = val
	v.isSet = true
}

func (v NullableCdDeployTrendTotal) IsSet() bool {
	return v.isSet
}

func (v *NullableCdDeployTrendTotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdDeployTrendTotal(val *CdDeployTrendTotal) *NullableCdDeployTrendTotal {
	return &NullableCdDeployTrendTotal{value: val, isSet: true}
}

func (v NullableCdDeployTrendTotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdDeployTrendTotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


