/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ModifyDepartmentMemberRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ModifyDepartmentMemberRequest{}

// ModifyDepartmentMemberRequest struct for ModifyDepartmentMemberRequest
type ModifyDepartmentMemberRequest struct {
	// 部门ID信息
	DepartmentIds []int64 `json:"DepartmentIds"`
	// 用户refIds
	RefIds []int64 `json:"RefIds"`
}

type _ModifyDepartmentMemberRequest ModifyDepartmentMemberRequest

// NewModifyDepartmentMemberRequest instantiates a new ModifyDepartmentMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyDepartmentMemberRequest(departmentIds []int64, refIds []int64) *ModifyDepartmentMemberRequest {
	this := ModifyDepartmentMemberRequest{}
	this.DepartmentIds = departmentIds
	this.RefIds = refIds
	return &this
}

// NewModifyDepartmentMemberRequestWithDefaults instantiates a new ModifyDepartmentMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyDepartmentMemberRequestWithDefaults() *ModifyDepartmentMemberRequest {
	this := ModifyDepartmentMemberRequest{}
	return &this
}

// GetDepartmentIds returns the DepartmentIds field value
func (o *ModifyDepartmentMemberRequest) GetDepartmentIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.DepartmentIds
}

// GetDepartmentIdsOk returns a tuple with the DepartmentIds field value
// and a boolean to check if the value has been set.
func (o *ModifyDepartmentMemberRequest) GetDepartmentIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DepartmentIds, true
}

// SetDepartmentIds sets field value
func (o *ModifyDepartmentMemberRequest) SetDepartmentIds(v []int64) {
	o.DepartmentIds = v
}

// GetRefIds returns the RefIds field value
func (o *ModifyDepartmentMemberRequest) GetRefIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.RefIds
}

// GetRefIdsOk returns a tuple with the RefIds field value
// and a boolean to check if the value has been set.
func (o *ModifyDepartmentMemberRequest) GetRefIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefIds, true
}

// SetRefIds sets field value
func (o *ModifyDepartmentMemberRequest) SetRefIds(v []int64) {
	o.RefIds = v
}

func (o ModifyDepartmentMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyDepartmentMemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepartmentIds"] = o.DepartmentIds
	toSerialize["RefIds"] = o.RefIds
	return toSerialize, nil
}

func (o *ModifyDepartmentMemberRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepartmentIds",
		"RefIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyDepartmentMemberRequest := _ModifyDepartmentMemberRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyDepartmentMemberRequest)

	if err != nil {
		return err
	}

	*o = ModifyDepartmentMemberRequest(varModifyDepartmentMemberRequest)

	return err
}

type NullableModifyDepartmentMemberRequest struct {
	value *ModifyDepartmentMemberRequest
	isSet bool
}

func (v NullableModifyDepartmentMemberRequest) Get() *ModifyDepartmentMemberRequest {
	return v.value
}

func (v *NullableModifyDepartmentMemberRequest) Set(val *ModifyDepartmentMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyDepartmentMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyDepartmentMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyDepartmentMemberRequest(val *ModifyDepartmentMemberRequest) *NullableModifyDepartmentMemberRequest {
	return &NullableModifyDepartmentMemberRequest{value: val, isSet: true}
}

func (v NullableModifyDepartmentMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyDepartmentMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


