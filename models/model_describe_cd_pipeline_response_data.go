/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeCdPipelineResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeCdPipelineResponseData{}

// DescribeCdPipelineResponseData DescribeCdPipelineResponseData 结构
type DescribeCdPipelineResponseData struct {
	// 应用名
	Application *string `json:"Application,omitempty"`
	// 部署流程 ID
	PipelineConfigId *string `json:"PipelineConfigId,omitempty"`
	// 部署流程执行记录 JSON
	PipelineExecutionJsonContent *string `json:"PipelineExecutionJsonContent,omitempty"`
	// 部署流程执行状态
	PipelineExecutionStatus *string `json:"PipelineExecutionStatus,omitempty"`
	// 部署流程名称
	PipelineName *string `json:"PipelineName,omitempty"`
}

// NewDescribeCdPipelineResponseData instantiates a new DescribeCdPipelineResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCdPipelineResponseData() *DescribeCdPipelineResponseData {
	this := DescribeCdPipelineResponseData{}
	var application string = ""
	this.Application = &application
	var pipelineConfigId string = ""
	this.PipelineConfigId = &pipelineConfigId
	var pipelineExecutionJsonContent string = ""
	this.PipelineExecutionJsonContent = &pipelineExecutionJsonContent
	var pipelineExecutionStatus string = ""
	this.PipelineExecutionStatus = &pipelineExecutionStatus
	var pipelineName string = ""
	this.PipelineName = &pipelineName
	return &this
}

// NewDescribeCdPipelineResponseDataWithDefaults instantiates a new DescribeCdPipelineResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCdPipelineResponseDataWithDefaults() *DescribeCdPipelineResponseData {
	this := DescribeCdPipelineResponseData{}
	var application string = ""
	this.Application = &application
	var pipelineConfigId string = ""
	this.PipelineConfigId = &pipelineConfigId
	var pipelineExecutionJsonContent string = ""
	this.PipelineExecutionJsonContent = &pipelineExecutionJsonContent
	var pipelineExecutionStatus string = ""
	this.PipelineExecutionStatus = &pipelineExecutionStatus
	var pipelineName string = ""
	this.PipelineName = &pipelineName
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *DescribeCdPipelineResponseData) GetApplication() string {
	if o == nil || utils.IsNil(o.Application) {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdPipelineResponseData) GetApplicationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *DescribeCdPipelineResponseData) HasApplication() bool {
	if o != nil && !utils.IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *DescribeCdPipelineResponseData) SetApplication(v string) {
	o.Application = &v
}

// GetPipelineConfigId returns the PipelineConfigId field value if set, zero value otherwise.
func (o *DescribeCdPipelineResponseData) GetPipelineConfigId() string {
	if o == nil || utils.IsNil(o.PipelineConfigId) {
		var ret string
		return ret
	}
	return *o.PipelineConfigId
}

// GetPipelineConfigIdOk returns a tuple with the PipelineConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdPipelineResponseData) GetPipelineConfigIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PipelineConfigId) {
		return nil, false
	}
	return o.PipelineConfigId, true
}

// HasPipelineConfigId returns a boolean if a field has been set.
func (o *DescribeCdPipelineResponseData) HasPipelineConfigId() bool {
	if o != nil && !utils.IsNil(o.PipelineConfigId) {
		return true
	}

	return false
}

// SetPipelineConfigId gets a reference to the given string and assigns it to the PipelineConfigId field.
func (o *DescribeCdPipelineResponseData) SetPipelineConfigId(v string) {
	o.PipelineConfigId = &v
}

// GetPipelineExecutionJsonContent returns the PipelineExecutionJsonContent field value if set, zero value otherwise.
func (o *DescribeCdPipelineResponseData) GetPipelineExecutionJsonContent() string {
	if o == nil || utils.IsNil(o.PipelineExecutionJsonContent) {
		var ret string
		return ret
	}
	return *o.PipelineExecutionJsonContent
}

// GetPipelineExecutionJsonContentOk returns a tuple with the PipelineExecutionJsonContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdPipelineResponseData) GetPipelineExecutionJsonContentOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PipelineExecutionJsonContent) {
		return nil, false
	}
	return o.PipelineExecutionJsonContent, true
}

// HasPipelineExecutionJsonContent returns a boolean if a field has been set.
func (o *DescribeCdPipelineResponseData) HasPipelineExecutionJsonContent() bool {
	if o != nil && !utils.IsNil(o.PipelineExecutionJsonContent) {
		return true
	}

	return false
}

// SetPipelineExecutionJsonContent gets a reference to the given string and assigns it to the PipelineExecutionJsonContent field.
func (o *DescribeCdPipelineResponseData) SetPipelineExecutionJsonContent(v string) {
	o.PipelineExecutionJsonContent = &v
}

// GetPipelineExecutionStatus returns the PipelineExecutionStatus field value if set, zero value otherwise.
func (o *DescribeCdPipelineResponseData) GetPipelineExecutionStatus() string {
	if o == nil || utils.IsNil(o.PipelineExecutionStatus) {
		var ret string
		return ret
	}
	return *o.PipelineExecutionStatus
}

// GetPipelineExecutionStatusOk returns a tuple with the PipelineExecutionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdPipelineResponseData) GetPipelineExecutionStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PipelineExecutionStatus) {
		return nil, false
	}
	return o.PipelineExecutionStatus, true
}

// HasPipelineExecutionStatus returns a boolean if a field has been set.
func (o *DescribeCdPipelineResponseData) HasPipelineExecutionStatus() bool {
	if o != nil && !utils.IsNil(o.PipelineExecutionStatus) {
		return true
	}

	return false
}

// SetPipelineExecutionStatus gets a reference to the given string and assigns it to the PipelineExecutionStatus field.
func (o *DescribeCdPipelineResponseData) SetPipelineExecutionStatus(v string) {
	o.PipelineExecutionStatus = &v
}

// GetPipelineName returns the PipelineName field value if set, zero value otherwise.
func (o *DescribeCdPipelineResponseData) GetPipelineName() string {
	if o == nil || utils.IsNil(o.PipelineName) {
		var ret string
		return ret
	}
	return *o.PipelineName
}

// GetPipelineNameOk returns a tuple with the PipelineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdPipelineResponseData) GetPipelineNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PipelineName) {
		return nil, false
	}
	return o.PipelineName, true
}

// HasPipelineName returns a boolean if a field has been set.
func (o *DescribeCdPipelineResponseData) HasPipelineName() bool {
	if o != nil && !utils.IsNil(o.PipelineName) {
		return true
	}

	return false
}

// SetPipelineName gets a reference to the given string and assigns it to the PipelineName field.
func (o *DescribeCdPipelineResponseData) SetPipelineName(v string) {
	o.PipelineName = &v
}

func (o DescribeCdPipelineResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCdPipelineResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Application) {
		toSerialize["Application"] = o.Application
	}
	if !utils.IsNil(o.PipelineConfigId) {
		toSerialize["PipelineConfigId"] = o.PipelineConfigId
	}
	if !utils.IsNil(o.PipelineExecutionJsonContent) {
		toSerialize["PipelineExecutionJsonContent"] = o.PipelineExecutionJsonContent
	}
	if !utils.IsNil(o.PipelineExecutionStatus) {
		toSerialize["PipelineExecutionStatus"] = o.PipelineExecutionStatus
	}
	if !utils.IsNil(o.PipelineName) {
		toSerialize["PipelineName"] = o.PipelineName
	}
	return toSerialize, nil
}

type NullableDescribeCdPipelineResponseData struct {
	value *DescribeCdPipelineResponseData
	isSet bool
}

func (v NullableDescribeCdPipelineResponseData) Get() *DescribeCdPipelineResponseData {
	return v.value
}

func (v *NullableDescribeCdPipelineResponseData) Set(val *DescribeCdPipelineResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCdPipelineResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCdPipelineResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCdPipelineResponseData(val *DescribeCdPipelineResponseData) *NullableDescribeCdPipelineResponseData {
	return &NullableDescribeCdPipelineResponseData{value: val, isSet: true}
}

func (v NullableDescribeCdPipelineResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCdPipelineResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


