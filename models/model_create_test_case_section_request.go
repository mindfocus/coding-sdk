/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateTestCaseSectionRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateTestCaseSectionRequest{}

// CreateTestCaseSectionRequest struct for CreateTestCaseSectionRequest
type CreateTestCaseSectionRequest struct {
	// 分组名称
	Name string `json:"Name"`
	// 父级 ID，默认 0
	ParentId *int32 `json:"ParentId,omitempty"`
	// 项目名称
	ProjectName string `json:"ProjectName"`
}

type _CreateTestCaseSectionRequest CreateTestCaseSectionRequest

// NewCreateTestCaseSectionRequest instantiates a new CreateTestCaseSectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTestCaseSectionRequest(name string, projectName string) *CreateTestCaseSectionRequest {
	this := CreateTestCaseSectionRequest{}
	this.Name = name
	this.ProjectName = projectName
	return &this
}

// NewCreateTestCaseSectionRequestWithDefaults instantiates a new CreateTestCaseSectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTestCaseSectionRequestWithDefaults() *CreateTestCaseSectionRequest {
	this := CreateTestCaseSectionRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateTestCaseSectionRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTestCaseSectionRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTestCaseSectionRequest) SetName(v string) {
	o.Name = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateTestCaseSectionRequest) GetParentId() int32 {
	if o == nil || utils.IsNil(o.ParentId) {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseSectionRequest) GetParentIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateTestCaseSectionRequest) HasParentId() bool {
	if o != nil && !utils.IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *CreateTestCaseSectionRequest) SetParentId(v int32) {
	o.ParentId = &v
}

// GetProjectName returns the ProjectName field value
func (o *CreateTestCaseSectionRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *CreateTestCaseSectionRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *CreateTestCaseSectionRequest) SetProjectName(v string) {
	o.ProjectName = v
}

func (o CreateTestCaseSectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTestCaseSectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Name"] = o.Name
	if !utils.IsNil(o.ParentId) {
		toSerialize["ParentId"] = o.ParentId
	}
	toSerialize["ProjectName"] = o.ProjectName
	return toSerialize, nil
}

func (o *CreateTestCaseSectionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Name",
		"ProjectName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTestCaseSectionRequest := _CreateTestCaseSectionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTestCaseSectionRequest)

	if err != nil {
		return err
	}

	*o = CreateTestCaseSectionRequest(varCreateTestCaseSectionRequest)

	return err
}

type NullableCreateTestCaseSectionRequest struct {
	value *CreateTestCaseSectionRequest
	isSet bool
}

func (v NullableCreateTestCaseSectionRequest) Get() *CreateTestCaseSectionRequest {
	return v.value
}

func (v *NullableCreateTestCaseSectionRequest) Set(val *CreateTestCaseSectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTestCaseSectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTestCaseSectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTestCaseSectionRequest(val *CreateTestCaseSectionRequest) *NullableCreateTestCaseSectionRequest {
	return &NullableCreateTestCaseSectionRequest{value: val, isSet: true}
}

func (v NullableCreateTestCaseSectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTestCaseSectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


