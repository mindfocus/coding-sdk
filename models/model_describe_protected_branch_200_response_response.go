/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeProtectedBranch200ResponseResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeProtectedBranch200ResponseResponse{}

// DescribeProtectedBranch200ResponseResponse 公共返回体
type DescribeProtectedBranch200ResponseResponse struct {
	ProtectedBranch *ProtectedBranch `json:"ProtectedBranch,omitempty"`
	// 请求id
	RequestId *string `json:"RequestId,omitempty"`
}

// NewDescribeProtectedBranch200ResponseResponse instantiates a new DescribeProtectedBranch200ResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeProtectedBranch200ResponseResponse() *DescribeProtectedBranch200ResponseResponse {
	this := DescribeProtectedBranch200ResponseResponse{}
	var requestId string = "xxxxx"
	this.RequestId = &requestId
	return &this
}

// NewDescribeProtectedBranch200ResponseResponseWithDefaults instantiates a new DescribeProtectedBranch200ResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeProtectedBranch200ResponseResponseWithDefaults() *DescribeProtectedBranch200ResponseResponse {
	this := DescribeProtectedBranch200ResponseResponse{}
	var requestId string = "xxxxx"
	this.RequestId = &requestId
	return &this
}

// GetProtectedBranch returns the ProtectedBranch field value if set, zero value otherwise.
func (o *DescribeProtectedBranch200ResponseResponse) GetProtectedBranch() ProtectedBranch {
	if o == nil || utils.IsNil(o.ProtectedBranch) {
		var ret ProtectedBranch
		return ret
	}
	return *o.ProtectedBranch
}

// GetProtectedBranchOk returns a tuple with the ProtectedBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProtectedBranch200ResponseResponse) GetProtectedBranchOk() (*ProtectedBranch, bool) {
	if o == nil || utils.IsNil(o.ProtectedBranch) {
		return nil, false
	}
	return o.ProtectedBranch, true
}

// HasProtectedBranch returns a boolean if a field has been set.
func (o *DescribeProtectedBranch200ResponseResponse) HasProtectedBranch() bool {
	if o != nil && !utils.IsNil(o.ProtectedBranch) {
		return true
	}

	return false
}

// SetProtectedBranch gets a reference to the given ProtectedBranch and assigns it to the ProtectedBranch field.
func (o *DescribeProtectedBranch200ResponseResponse) SetProtectedBranch(v ProtectedBranch) {
	o.ProtectedBranch = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *DescribeProtectedBranch200ResponseResponse) GetRequestId() string {
	if o == nil || utils.IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProtectedBranch200ResponseResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *DescribeProtectedBranch200ResponseResponse) HasRequestId() bool {
	if o != nil && !utils.IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *DescribeProtectedBranch200ResponseResponse) SetRequestId(v string) {
	o.RequestId = &v
}

func (o DescribeProtectedBranch200ResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeProtectedBranch200ResponseResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.ProtectedBranch) {
		toSerialize["ProtectedBranch"] = o.ProtectedBranch
	}
	if !utils.IsNil(o.RequestId) {
		toSerialize["RequestId"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableDescribeProtectedBranch200ResponseResponse struct {
	value *DescribeProtectedBranch200ResponseResponse
	isSet bool
}

func (v NullableDescribeProtectedBranch200ResponseResponse) Get() *DescribeProtectedBranch200ResponseResponse {
	return v.value
}

func (v *NullableDescribeProtectedBranch200ResponseResponse) Set(val *DescribeProtectedBranch200ResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeProtectedBranch200ResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeProtectedBranch200ResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeProtectedBranch200ResponseResponse(val *DescribeProtectedBranch200ResponseResponse) *NullableDescribeProtectedBranch200ResponseResponse {
	return &NullableDescribeProtectedBranch200ResponseResponse{value: val, isSet: true}
}

func (v NullableDescribeProtectedBranch200ResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeProtectedBranch200ResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


