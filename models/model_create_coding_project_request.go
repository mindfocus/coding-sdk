/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateCodingProjectRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateCodingProjectRequest{}

// CreateCodingProjectRequest struct for CreateCodingProjectRequest
type CreateCodingProjectRequest struct {
	// 项目描述
	Description string `json:"Description,omitempty"`
	// 项目名称
	DisplayName string `json:"DisplayName"`
	// 项目图标
	Icon *string `json:"Icon,omitempty"`
	// 项目标识
	Name string `json:"Name"`
	// 项目模版 CODE_HOST 代码托管项目， PROJECT_MANAGE 项目管理项目， DEV_OPS DevOps项目， DEMO_BEGIN 范例项目
	ProjectTemplate string `json:"ProjectTemplate"`
	// 0： 不公开 1：公开源代码
	Shared int32 `json:"Shared"`
}

type _CreateCodingProjectRequest CreateCodingProjectRequest

// NewCreateCodingProjectRequest instantiates a new CreateCodingProjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCodingProjectRequest(displayName string, name string, projectTemplate string, shared int32) *CreateCodingProjectRequest {
	this := CreateCodingProjectRequest{}
	this.DisplayName = displayName
	this.Name = name
	this.ProjectTemplate = projectTemplate
	this.Shared = shared
	return &this
}

// NewCreateCodingProjectRequestWithDefaults instantiates a new CreateCodingProjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCodingProjectRequestWithDefaults() *CreateCodingProjectRequest {
	this := CreateCodingProjectRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateCodingProjectRequest) GetDescription() string {
	if o == nil || utils.IsNil(o.Description) {
		var ret string
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCodingProjectRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Description) {
		return nil, false
	}
	return &o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateCodingProjectRequest) HasDescription() bool {
	if o != nil && !utils.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateCodingProjectRequest) SetDescription(v string) {
	o.Description = v
}

// GetDisplayName returns the DisplayName field value
func (o *CreateCodingProjectRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CreateCodingProjectRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CreateCodingProjectRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CreateCodingProjectRequest) GetIcon() string {
	if o == nil || utils.IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCodingProjectRequest) GetIconOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateCodingProjectRequest) HasIcon() bool {
	if o != nil && !utils.IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CreateCodingProjectRequest) SetIcon(v string) {
	o.Icon = &v
}

// GetName returns the Name field value
func (o *CreateCodingProjectRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCodingProjectRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCodingProjectRequest) SetName(v string) {
	o.Name = v
}

// GetProjectTemplate returns the ProjectTemplate field value
func (o *CreateCodingProjectRequest) GetProjectTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectTemplate
}

// GetProjectTemplateOk returns a tuple with the ProjectTemplate field value
// and a boolean to check if the value has been set.
func (o *CreateCodingProjectRequest) GetProjectTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectTemplate, true
}

// SetProjectTemplate sets field value
func (o *CreateCodingProjectRequest) SetProjectTemplate(v string) {
	o.ProjectTemplate = v
}

// GetShared returns the Shared field value
func (o *CreateCodingProjectRequest) GetShared() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Shared
}

// GetSharedOk returns a tuple with the Shared field value
// and a boolean to check if the value has been set.
func (o *CreateCodingProjectRequest) GetSharedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Shared, true
}

// SetShared sets field value
func (o *CreateCodingProjectRequest) SetShared(v int32) {
	o.Shared = v
}

func (o CreateCodingProjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCodingProjectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	toSerialize["DisplayName"] = o.DisplayName
	if !utils.IsNil(o.Icon) {
		toSerialize["Icon"] = o.Icon
	}
	toSerialize["Name"] = o.Name
	toSerialize["ProjectTemplate"] = o.ProjectTemplate
	toSerialize["Shared"] = o.Shared
	return toSerialize, nil
}

func (o *CreateCodingProjectRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DisplayName",
		"Name",
		"ProjectTemplate",
		"Shared",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCodingProjectRequest := _CreateCodingProjectRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCodingProjectRequest)

	if err != nil {
		return err
	}

	*o = CreateCodingProjectRequest(varCreateCodingProjectRequest)

	return err
}

type NullableCreateCodingProjectRequest struct {
	value *CreateCodingProjectRequest
	isSet bool
}

func (v NullableCreateCodingProjectRequest) Get() *CreateCodingProjectRequest {
	return v.value
}

func (v *NullableCreateCodingProjectRequest) Set(val *CreateCodingProjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCodingProjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCodingProjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCodingProjectRequest(val *CreateCodingProjectRequest) *NullableCreateCodingProjectRequest {
	return &NullableCreateCodingProjectRequest{value: val, isSet: true}
}

func (v NullableCreateCodingProjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCodingProjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


