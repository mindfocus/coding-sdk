/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeAllMergeRequestNotesRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeAllMergeRequestNotesRequest{}

// DescribeAllMergeRequestNotesRequest struct for DescribeAllMergeRequestNotesRequest
type DescribeAllMergeRequestNotesRequest struct {
	// 创建结束时间
	CreatedAtEndDate *string `json:"CreatedAtEndDate,omitempty"`
	// 创建开始时间
	CreatedAtStartDate *string `json:"CreatedAtStartDate,omitempty"`
	// 仓库路径
	DepotPath string `json:"DepotPath"`
	// 合并请求的Iid列表
	MergeIds []int32 `json:"MergeIds,omitempty"`
	// 合并请求的状态列表
	MrStatuses []string `json:"MrStatuses,omitempty"`
	// 页码
	PageNumber int32 `json:"PageNumber"`
	// 页数量
	PageSize int32 `json:"PageSize"`
	// 合并请求的发起者列表
	ReporterIds []int32 `json:"ReporterIds,omitempty"`
}

type _DescribeAllMergeRequestNotesRequest DescribeAllMergeRequestNotesRequest

// NewDescribeAllMergeRequestNotesRequest instantiates a new DescribeAllMergeRequestNotesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeAllMergeRequestNotesRequest(depotPath string, pageNumber int32, pageSize int32) *DescribeAllMergeRequestNotesRequest {
	this := DescribeAllMergeRequestNotesRequest{}
	this.DepotPath = depotPath
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	return &this
}

// NewDescribeAllMergeRequestNotesRequestWithDefaults instantiates a new DescribeAllMergeRequestNotesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeAllMergeRequestNotesRequestWithDefaults() *DescribeAllMergeRequestNotesRequest {
	this := DescribeAllMergeRequestNotesRequest{}
	return &this
}

// GetCreatedAtEndDate returns the CreatedAtEndDate field value if set, zero value otherwise.
func (o *DescribeAllMergeRequestNotesRequest) GetCreatedAtEndDate() string {
	if o == nil || utils.IsNil(o.CreatedAtEndDate) {
		var ret string
		return ret
	}
	return *o.CreatedAtEndDate
}

// GetCreatedAtEndDateOk returns a tuple with the CreatedAtEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetCreatedAtEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatedAtEndDate) {
		return nil, false
	}
	return o.CreatedAtEndDate, true
}

// HasCreatedAtEndDate returns a boolean if a field has been set.
func (o *DescribeAllMergeRequestNotesRequest) HasCreatedAtEndDate() bool {
	if o != nil && !utils.IsNil(o.CreatedAtEndDate) {
		return true
	}

	return false
}

// SetCreatedAtEndDate gets a reference to the given string and assigns it to the CreatedAtEndDate field.
func (o *DescribeAllMergeRequestNotesRequest) SetCreatedAtEndDate(v string) {
	o.CreatedAtEndDate = &v
}

// GetCreatedAtStartDate returns the CreatedAtStartDate field value if set, zero value otherwise.
func (o *DescribeAllMergeRequestNotesRequest) GetCreatedAtStartDate() string {
	if o == nil || utils.IsNil(o.CreatedAtStartDate) {
		var ret string
		return ret
	}
	return *o.CreatedAtStartDate
}

// GetCreatedAtStartDateOk returns a tuple with the CreatedAtStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetCreatedAtStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatedAtStartDate) {
		return nil, false
	}
	return o.CreatedAtStartDate, true
}

// HasCreatedAtStartDate returns a boolean if a field has been set.
func (o *DescribeAllMergeRequestNotesRequest) HasCreatedAtStartDate() bool {
	if o != nil && !utils.IsNil(o.CreatedAtStartDate) {
		return true
	}

	return false
}

// SetCreatedAtStartDate gets a reference to the given string and assigns it to the CreatedAtStartDate field.
func (o *DescribeAllMergeRequestNotesRequest) SetCreatedAtStartDate(v string) {
	o.CreatedAtStartDate = &v
}

// GetDepotPath returns the DepotPath field value
func (o *DescribeAllMergeRequestNotesRequest) GetDepotPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetDepotPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotPath, true
}

// SetDepotPath sets field value
func (o *DescribeAllMergeRequestNotesRequest) SetDepotPath(v string) {
	o.DepotPath = v
}

// GetMergeIds returns the MergeIds field value if set, zero value otherwise.
func (o *DescribeAllMergeRequestNotesRequest) GetMergeIds() []int32 {
	if o == nil || utils.IsNil(o.MergeIds) {
		var ret []int32
		return ret
	}
	return o.MergeIds
}

// GetMergeIdsOk returns a tuple with the MergeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetMergeIdsOk() ([]int32, bool) {
	if o == nil || utils.IsNil(o.MergeIds) {
		return nil, false
	}
	return o.MergeIds, true
}

// HasMergeIds returns a boolean if a field has been set.
func (o *DescribeAllMergeRequestNotesRequest) HasMergeIds() bool {
	if o != nil && !utils.IsNil(o.MergeIds) {
		return true
	}

	return false
}

// SetMergeIds gets a reference to the given []int32 and assigns it to the MergeIds field.
func (o *DescribeAllMergeRequestNotesRequest) SetMergeIds(v []int32) {
	o.MergeIds = v
}

// GetMrStatuses returns the MrStatuses field value if set, zero value otherwise.
func (o *DescribeAllMergeRequestNotesRequest) GetMrStatuses() []string {
	if o == nil || utils.IsNil(o.MrStatuses) {
		var ret []string
		return ret
	}
	return o.MrStatuses
}

// GetMrStatusesOk returns a tuple with the MrStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetMrStatusesOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.MrStatuses) {
		return nil, false
	}
	return o.MrStatuses, true
}

// HasMrStatuses returns a boolean if a field has been set.
func (o *DescribeAllMergeRequestNotesRequest) HasMrStatuses() bool {
	if o != nil && !utils.IsNil(o.MrStatuses) {
		return true
	}

	return false
}

// SetMrStatuses gets a reference to the given []string and assigns it to the MrStatuses field.
func (o *DescribeAllMergeRequestNotesRequest) SetMrStatuses(v []string) {
	o.MrStatuses = v
}

// GetPageNumber returns the PageNumber field value
func (o *DescribeAllMergeRequestNotesRequest) GetPageNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetPageNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *DescribeAllMergeRequestNotesRequest) SetPageNumber(v int32) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *DescribeAllMergeRequestNotesRequest) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *DescribeAllMergeRequestNotesRequest) SetPageSize(v int32) {
	o.PageSize = v
}

// GetReporterIds returns the ReporterIds field value if set, zero value otherwise.
func (o *DescribeAllMergeRequestNotesRequest) GetReporterIds() []int32 {
	if o == nil || utils.IsNil(o.ReporterIds) {
		var ret []int32
		return ret
	}
	return o.ReporterIds
}

// GetReporterIdsOk returns a tuple with the ReporterIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllMergeRequestNotesRequest) GetReporterIdsOk() ([]int32, bool) {
	if o == nil || utils.IsNil(o.ReporterIds) {
		return nil, false
	}
	return o.ReporterIds, true
}

// HasReporterIds returns a boolean if a field has been set.
func (o *DescribeAllMergeRequestNotesRequest) HasReporterIds() bool {
	if o != nil && !utils.IsNil(o.ReporterIds) {
		return true
	}

	return false
}

// SetReporterIds gets a reference to the given []int32 and assigns it to the ReporterIds field.
func (o *DescribeAllMergeRequestNotesRequest) SetReporterIds(v []int32) {
	o.ReporterIds = v
}

func (o DescribeAllMergeRequestNotesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeAllMergeRequestNotesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CreatedAtEndDate) {
		toSerialize["CreatedAtEndDate"] = o.CreatedAtEndDate
	}
	if !utils.IsNil(o.CreatedAtStartDate) {
		toSerialize["CreatedAtStartDate"] = o.CreatedAtStartDate
	}
	toSerialize["DepotPath"] = o.DepotPath
	if !utils.IsNil(o.MergeIds) {
		toSerialize["MergeIds"] = o.MergeIds
	}
	if !utils.IsNil(o.MrStatuses) {
		toSerialize["MrStatuses"] = o.MrStatuses
	}
	toSerialize["PageNumber"] = o.PageNumber
	toSerialize["PageSize"] = o.PageSize
	if !utils.IsNil(o.ReporterIds) {
		toSerialize["ReporterIds"] = o.ReporterIds
	}
	return toSerialize, nil
}

func (o *DescribeAllMergeRequestNotesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotPath",
		"PageNumber",
		"PageSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeAllMergeRequestNotesRequest := _DescribeAllMergeRequestNotesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeAllMergeRequestNotesRequest)

	if err != nil {
		return err
	}

	*o = DescribeAllMergeRequestNotesRequest(varDescribeAllMergeRequestNotesRequest)

	return err
}

type NullableDescribeAllMergeRequestNotesRequest struct {
	value *DescribeAllMergeRequestNotesRequest
	isSet bool
}

func (v NullableDescribeAllMergeRequestNotesRequest) Get() *DescribeAllMergeRequestNotesRequest {
	return v.value
}

func (v *NullableDescribeAllMergeRequestNotesRequest) Set(val *DescribeAllMergeRequestNotesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeAllMergeRequestNotesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeAllMergeRequestNotesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeAllMergeRequestNotesRequest(val *DescribeAllMergeRequestNotesRequest) *NullableDescribeAllMergeRequestNotesRequest {
	return &NullableDescribeAllMergeRequestNotesRequest{value: val, isSet: true}
}

func (v NullableDescribeAllMergeRequestNotesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeAllMergeRequestNotesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


