/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeArtifactRepositoryListRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeArtifactRepositoryListRequest{}

// DescribeArtifactRepositoryListRequest struct for DescribeArtifactRepositoryListRequest
type DescribeArtifactRepositoryListRequest struct {
	// 页码，默认：1
	PageNumber *int32 `json:"PageNumber,omitempty"`
	// 每页展示数量，默认：10
	PageSize *int32 `json:"PageSize,omitempty"`
	// 项目 ID
	ProjectId int32 `json:"ProjectId"`
	// 仓库类型:1-generic;2-docker;3-maven;4-npm;5-pypi;6-helm;7-composer;8-nuget;9-conan;10-cocoapods;11-rpm
	Type *int64 `json:"Type,omitempty"`
}

type _DescribeArtifactRepositoryListRequest DescribeArtifactRepositoryListRequest

// NewDescribeArtifactRepositoryListRequest instantiates a new DescribeArtifactRepositoryListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeArtifactRepositoryListRequest(projectId int32) *DescribeArtifactRepositoryListRequest {
	this := DescribeArtifactRepositoryListRequest{}
	this.ProjectId = projectId
	return &this
}

// NewDescribeArtifactRepositoryListRequestWithDefaults instantiates a new DescribeArtifactRepositoryListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeArtifactRepositoryListRequestWithDefaults() *DescribeArtifactRepositoryListRequest {
	this := DescribeArtifactRepositoryListRequest{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeArtifactRepositoryListRequest) GetPageNumber() int32 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeArtifactRepositoryListRequest) GetPageNumberOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeArtifactRepositoryListRequest) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *DescribeArtifactRepositoryListRequest) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeArtifactRepositoryListRequest) GetPageSize() int32 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeArtifactRepositoryListRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeArtifactRepositoryListRequest) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *DescribeArtifactRepositoryListRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetProjectId returns the ProjectId field value
func (o *DescribeArtifactRepositoryListRequest) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DescribeArtifactRepositoryListRequest) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DescribeArtifactRepositoryListRequest) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DescribeArtifactRepositoryListRequest) GetType() int64 {
	if o == nil || utils.IsNil(o.Type) {
		var ret int64
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeArtifactRepositoryListRequest) GetTypeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DescribeArtifactRepositoryListRequest) HasType() bool {
	if o != nil && !utils.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int64 and assigns it to the Type field.
func (o *DescribeArtifactRepositoryListRequest) SetType(v int64) {
	o.Type = &v
}

func (o DescribeArtifactRepositoryListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeArtifactRepositoryListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	toSerialize["ProjectId"] = o.ProjectId
	if !utils.IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	return toSerialize, nil
}

func (o *DescribeArtifactRepositoryListRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ProjectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeArtifactRepositoryListRequest := _DescribeArtifactRepositoryListRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeArtifactRepositoryListRequest)

	if err != nil {
		return err
	}

	*o = DescribeArtifactRepositoryListRequest(varDescribeArtifactRepositoryListRequest)

	return err
}

type NullableDescribeArtifactRepositoryListRequest struct {
	value *DescribeArtifactRepositoryListRequest
	isSet bool
}

func (v NullableDescribeArtifactRepositoryListRequest) Get() *DescribeArtifactRepositoryListRequest {
	return v.value
}

func (v *NullableDescribeArtifactRepositoryListRequest) Set(val *DescribeArtifactRepositoryListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeArtifactRepositoryListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeArtifactRepositoryListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeArtifactRepositoryListRequest(val *DescribeArtifactRepositoryListRequest) *NullableDescribeArtifactRepositoryListRequest {
	return &NullableDescribeArtifactRepositoryListRequest{value: val, isSet: true}
}

func (v NullableDescribeArtifactRepositoryListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeArtifactRepositoryListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


