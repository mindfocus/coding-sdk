/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ModifyProjectPermissionRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ModifyProjectPermissionRequest{}

// ModifyProjectPermissionRequest struct for ModifyProjectPermissionRequest
type ModifyProjectPermissionRequest struct {
	// 权限创建true、删除false
	ActionFlag bool `json:"ActionFlag"`
	// 项目ID
	ProjectId int32 `json:"ProjectId"`
	// 权限ID
	RoleId int32 `json:"RoleId"`
	// user gk
	UserGK string `json:"UserGK"`
}

type _ModifyProjectPermissionRequest ModifyProjectPermissionRequest

// NewModifyProjectPermissionRequest instantiates a new ModifyProjectPermissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyProjectPermissionRequest(actionFlag bool, projectId int32, roleId int32, userGK string) *ModifyProjectPermissionRequest {
	this := ModifyProjectPermissionRequest{}
	this.ActionFlag = actionFlag
	this.ProjectId = projectId
	this.RoleId = roleId
	this.UserGK = userGK
	return &this
}

// NewModifyProjectPermissionRequestWithDefaults instantiates a new ModifyProjectPermissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyProjectPermissionRequestWithDefaults() *ModifyProjectPermissionRequest {
	this := ModifyProjectPermissionRequest{}
	return &this
}

// GetActionFlag returns the ActionFlag field value
func (o *ModifyProjectPermissionRequest) GetActionFlag() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ActionFlag
}

// GetActionFlagOk returns a tuple with the ActionFlag field value
// and a boolean to check if the value has been set.
func (o *ModifyProjectPermissionRequest) GetActionFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionFlag, true
}

// SetActionFlag sets field value
func (o *ModifyProjectPermissionRequest) SetActionFlag(v bool) {
	o.ActionFlag = v
}

// GetProjectId returns the ProjectId field value
func (o *ModifyProjectPermissionRequest) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ModifyProjectPermissionRequest) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ModifyProjectPermissionRequest) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetRoleId returns the RoleId field value
func (o *ModifyProjectPermissionRequest) GetRoleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *ModifyProjectPermissionRequest) GetRoleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *ModifyProjectPermissionRequest) SetRoleId(v int32) {
	o.RoleId = v
}

// GetUserGK returns the UserGK field value
func (o *ModifyProjectPermissionRequest) GetUserGK() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserGK
}

// GetUserGKOk returns a tuple with the UserGK field value
// and a boolean to check if the value has been set.
func (o *ModifyProjectPermissionRequest) GetUserGKOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserGK, true
}

// SetUserGK sets field value
func (o *ModifyProjectPermissionRequest) SetUserGK(v string) {
	o.UserGK = v
}

func (o ModifyProjectPermissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyProjectPermissionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ActionFlag"] = o.ActionFlag
	toSerialize["ProjectId"] = o.ProjectId
	toSerialize["RoleId"] = o.RoleId
	toSerialize["UserGK"] = o.UserGK
	return toSerialize, nil
}

func (o *ModifyProjectPermissionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ActionFlag",
		"ProjectId",
		"RoleId",
		"UserGK",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyProjectPermissionRequest := _ModifyProjectPermissionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyProjectPermissionRequest)

	if err != nil {
		return err
	}

	*o = ModifyProjectPermissionRequest(varModifyProjectPermissionRequest)

	return err
}

type NullableModifyProjectPermissionRequest struct {
	value *ModifyProjectPermissionRequest
	isSet bool
}

func (v NullableModifyProjectPermissionRequest) Get() *ModifyProjectPermissionRequest {
	return v.value
}

func (v *NullableModifyProjectPermissionRequest) Set(val *ModifyProjectPermissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyProjectPermissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyProjectPermissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyProjectPermissionRequest(val *ModifyProjectPermissionRequest) *NullableModifyProjectPermissionRequest {
	return &NullableModifyProjectPermissionRequest{value: val, isSet: true}
}

func (v NullableModifyProjectPermissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyProjectPermissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


