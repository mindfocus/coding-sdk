/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeArtifactVersionFileListRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeArtifactVersionFileListRequest{}

// DescribeArtifactVersionFileListRequest struct for DescribeArtifactVersionFileListRequest
type DescribeArtifactVersionFileListRequest struct {
	Maven *Maven `json:"Maven,omitempty"`
	// 包名
	Package string `json:"Package"`
	// 版本号
	PackageVersion string `json:"PackageVersion"`
	// 项目 ID
	ProjectId int32 `json:"ProjectId"`
	// 仓库名
	Repository string `json:"Repository"`
}

type _DescribeArtifactVersionFileListRequest DescribeArtifactVersionFileListRequest

// NewDescribeArtifactVersionFileListRequest instantiates a new DescribeArtifactVersionFileListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeArtifactVersionFileListRequest(package_ string, packageVersion string, projectId int32, repository string) *DescribeArtifactVersionFileListRequest {
	this := DescribeArtifactVersionFileListRequest{}
	this.Package = package_
	this.PackageVersion = packageVersion
	this.ProjectId = projectId
	this.Repository = repository
	return &this
}

// NewDescribeArtifactVersionFileListRequestWithDefaults instantiates a new DescribeArtifactVersionFileListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeArtifactVersionFileListRequestWithDefaults() *DescribeArtifactVersionFileListRequest {
	this := DescribeArtifactVersionFileListRequest{}
	return &this
}

// GetMaven returns the Maven field value if set, zero value otherwise.
func (o *DescribeArtifactVersionFileListRequest) GetMaven() Maven {
	if o == nil || utils.IsNil(o.Maven) {
		var ret Maven
		return ret
	}
	return *o.Maven
}

// GetMavenOk returns a tuple with the Maven field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeArtifactVersionFileListRequest) GetMavenOk() (*Maven, bool) {
	if o == nil || utils.IsNil(o.Maven) {
		return nil, false
	}
	return o.Maven, true
}

// HasMaven returns a boolean if a field has been set.
func (o *DescribeArtifactVersionFileListRequest) HasMaven() bool {
	if o != nil && !utils.IsNil(o.Maven) {
		return true
	}

	return false
}

// SetMaven gets a reference to the given Maven and assigns it to the Maven field.
func (o *DescribeArtifactVersionFileListRequest) SetMaven(v Maven) {
	o.Maven = &v
}

// GetPackage returns the Package field value
func (o *DescribeArtifactVersionFileListRequest) GetPackage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Package
}

// GetPackageOk returns a tuple with the Package field value
// and a boolean to check if the value has been set.
func (o *DescribeArtifactVersionFileListRequest) GetPackageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Package, true
}

// SetPackage sets field value
func (o *DescribeArtifactVersionFileListRequest) SetPackage(v string) {
	o.Package = v
}

// GetPackageVersion returns the PackageVersion field value
func (o *DescribeArtifactVersionFileListRequest) GetPackageVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageVersion
}

// GetPackageVersionOk returns a tuple with the PackageVersion field value
// and a boolean to check if the value has been set.
func (o *DescribeArtifactVersionFileListRequest) GetPackageVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageVersion, true
}

// SetPackageVersion sets field value
func (o *DescribeArtifactVersionFileListRequest) SetPackageVersion(v string) {
	o.PackageVersion = v
}

// GetProjectId returns the ProjectId field value
func (o *DescribeArtifactVersionFileListRequest) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DescribeArtifactVersionFileListRequest) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DescribeArtifactVersionFileListRequest) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetRepository returns the Repository field value
func (o *DescribeArtifactVersionFileListRequest) GetRepository() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
func (o *DescribeArtifactVersionFileListRequest) GetRepositoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repository, true
}

// SetRepository sets field value
func (o *DescribeArtifactVersionFileListRequest) SetRepository(v string) {
	o.Repository = v
}

func (o DescribeArtifactVersionFileListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeArtifactVersionFileListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Maven) {
		toSerialize["Maven"] = o.Maven
	}
	toSerialize["Package"] = o.Package
	toSerialize["PackageVersion"] = o.PackageVersion
	toSerialize["ProjectId"] = o.ProjectId
	toSerialize["Repository"] = o.Repository
	return toSerialize, nil
}

func (o *DescribeArtifactVersionFileListRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Package",
		"PackageVersion",
		"ProjectId",
		"Repository",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeArtifactVersionFileListRequest := _DescribeArtifactVersionFileListRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeArtifactVersionFileListRequest)

	if err != nil {
		return err
	}

	*o = DescribeArtifactVersionFileListRequest(varDescribeArtifactVersionFileListRequest)

	return err
}

type NullableDescribeArtifactVersionFileListRequest struct {
	value *DescribeArtifactVersionFileListRequest
	isSet bool
}

func (v NullableDescribeArtifactVersionFileListRequest) Get() *DescribeArtifactVersionFileListRequest {
	return v.value
}

func (v *NullableDescribeArtifactVersionFileListRequest) Set(val *DescribeArtifactVersionFileListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeArtifactVersionFileListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeArtifactVersionFileListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeArtifactVersionFileListRequest(val *DescribeArtifactVersionFileListRequest) *NullableDescribeArtifactVersionFileListRequest {
	return &NullableDescribeArtifactVersionFileListRequest{value: val, isSet: true}
}

func (v NullableDescribeArtifactVersionFileListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeArtifactVersionFileListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


