/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ModifyAPIDocBaseInfoRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ModifyAPIDocBaseInfoRequest{}

// ModifyAPIDocBaseInfoRequest struct for ModifyAPIDocBaseInfoRequest
type ModifyAPIDocBaseInfoRequest struct {
	// API 文档编号
	Code int32 `json:"Code"`
	// API 文档域名前缀，以小写字母 a 到 z 或者 0 到 9 开头，中间可以出现中横线 。最长不能超过32位
	PrefixUri *string `json:"PrefixUri,omitempty"`
	// 项目名称
	ProjectName string `json:"ProjectName"`
	// API 文档密码，6-8 位英文和字母
	SharePassword *string `json:"SharePassword,omitempty"`
	// API 文档标题
	Title *string `json:"Title,omitempty"`
}

type _ModifyAPIDocBaseInfoRequest ModifyAPIDocBaseInfoRequest

// NewModifyAPIDocBaseInfoRequest instantiates a new ModifyAPIDocBaseInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyAPIDocBaseInfoRequest(code int32, projectName string) *ModifyAPIDocBaseInfoRequest {
	this := ModifyAPIDocBaseInfoRequest{}
	this.Code = code
	this.ProjectName = projectName
	return &this
}

// NewModifyAPIDocBaseInfoRequestWithDefaults instantiates a new ModifyAPIDocBaseInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyAPIDocBaseInfoRequestWithDefaults() *ModifyAPIDocBaseInfoRequest {
	this := ModifyAPIDocBaseInfoRequest{}
	return &this
}

// GetCode returns the Code field value
func (o *ModifyAPIDocBaseInfoRequest) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ModifyAPIDocBaseInfoRequest) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ModifyAPIDocBaseInfoRequest) SetCode(v int32) {
	o.Code = v
}

// GetPrefixUri returns the PrefixUri field value if set, zero value otherwise.
func (o *ModifyAPIDocBaseInfoRequest) GetPrefixUri() string {
	if o == nil || utils.IsNil(o.PrefixUri) {
		var ret string
		return ret
	}
	return *o.PrefixUri
}

// GetPrefixUriOk returns a tuple with the PrefixUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAPIDocBaseInfoRequest) GetPrefixUriOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PrefixUri) {
		return nil, false
	}
	return o.PrefixUri, true
}

// HasPrefixUri returns a boolean if a field has been set.
func (o *ModifyAPIDocBaseInfoRequest) HasPrefixUri() bool {
	if o != nil && !utils.IsNil(o.PrefixUri) {
		return true
	}

	return false
}

// SetPrefixUri gets a reference to the given string and assigns it to the PrefixUri field.
func (o *ModifyAPIDocBaseInfoRequest) SetPrefixUri(v string) {
	o.PrefixUri = &v
}

// GetProjectName returns the ProjectName field value
func (o *ModifyAPIDocBaseInfoRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *ModifyAPIDocBaseInfoRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *ModifyAPIDocBaseInfoRequest) SetProjectName(v string) {
	o.ProjectName = v
}

// GetSharePassword returns the SharePassword field value if set, zero value otherwise.
func (o *ModifyAPIDocBaseInfoRequest) GetSharePassword() string {
	if o == nil || utils.IsNil(o.SharePassword) {
		var ret string
		return ret
	}
	return *o.SharePassword
}

// GetSharePasswordOk returns a tuple with the SharePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAPIDocBaseInfoRequest) GetSharePasswordOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SharePassword) {
		return nil, false
	}
	return o.SharePassword, true
}

// HasSharePassword returns a boolean if a field has been set.
func (o *ModifyAPIDocBaseInfoRequest) HasSharePassword() bool {
	if o != nil && !utils.IsNil(o.SharePassword) {
		return true
	}

	return false
}

// SetSharePassword gets a reference to the given string and assigns it to the SharePassword field.
func (o *ModifyAPIDocBaseInfoRequest) SetSharePassword(v string) {
	o.SharePassword = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ModifyAPIDocBaseInfoRequest) GetTitle() string {
	if o == nil || utils.IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAPIDocBaseInfoRequest) GetTitleOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ModifyAPIDocBaseInfoRequest) HasTitle() bool {
	if o != nil && !utils.IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ModifyAPIDocBaseInfoRequest) SetTitle(v string) {
	o.Title = &v
}

func (o ModifyAPIDocBaseInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyAPIDocBaseInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Code"] = o.Code
	if !utils.IsNil(o.PrefixUri) {
		toSerialize["PrefixUri"] = o.PrefixUri
	}
	toSerialize["ProjectName"] = o.ProjectName
	if !utils.IsNil(o.SharePassword) {
		toSerialize["SharePassword"] = o.SharePassword
	}
	if !utils.IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	return toSerialize, nil
}

func (o *ModifyAPIDocBaseInfoRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Code",
		"ProjectName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyAPIDocBaseInfoRequest := _ModifyAPIDocBaseInfoRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyAPIDocBaseInfoRequest)

	if err != nil {
		return err
	}

	*o = ModifyAPIDocBaseInfoRequest(varModifyAPIDocBaseInfoRequest)

	return err
}

type NullableModifyAPIDocBaseInfoRequest struct {
	value *ModifyAPIDocBaseInfoRequest
	isSet bool
}

func (v NullableModifyAPIDocBaseInfoRequest) Get() *ModifyAPIDocBaseInfoRequest {
	return v.value
}

func (v *NullableModifyAPIDocBaseInfoRequest) Set(val *ModifyAPIDocBaseInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyAPIDocBaseInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyAPIDocBaseInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyAPIDocBaseInfoRequest(val *ModifyAPIDocBaseInfoRequest) *NullableModifyAPIDocBaseInfoRequest {
	return &NullableModifyAPIDocBaseInfoRequest{value: val, isSet: true}
}

func (v NullableModifyAPIDocBaseInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyAPIDocBaseInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


