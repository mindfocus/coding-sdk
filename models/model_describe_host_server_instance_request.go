/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeHostServerInstanceRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeHostServerInstanceRequest{}

// DescribeHostServerInstanceRequest struct for DescribeHostServerInstanceRequest
type DescribeHostServerInstanceRequest struct {
	// 部署账号 从 DescribeCdPipeline 获取
	Account string `json:"Account"`
	// 主机组名称 从 DescribeCdPipeline 获取
	ServerGroupName string `json:"ServerGroupName"`
}

type _DescribeHostServerInstanceRequest DescribeHostServerInstanceRequest

// NewDescribeHostServerInstanceRequest instantiates a new DescribeHostServerInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeHostServerInstanceRequest(account string, serverGroupName string) *DescribeHostServerInstanceRequest {
	this := DescribeHostServerInstanceRequest{}
	this.Account = account
	this.ServerGroupName = serverGroupName
	return &this
}

// NewDescribeHostServerInstanceRequestWithDefaults instantiates a new DescribeHostServerInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeHostServerInstanceRequestWithDefaults() *DescribeHostServerInstanceRequest {
	this := DescribeHostServerInstanceRequest{}
	var account string = ""
	this.Account = account
	var serverGroupName string = ""
	this.ServerGroupName = serverGroupName
	return &this
}

// GetAccount returns the Account field value
func (o *DescribeHostServerInstanceRequest) GetAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *DescribeHostServerInstanceRequest) GetAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *DescribeHostServerInstanceRequest) SetAccount(v string) {
	o.Account = v
}

// GetServerGroupName returns the ServerGroupName field value
func (o *DescribeHostServerInstanceRequest) GetServerGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerGroupName
}

// GetServerGroupNameOk returns a tuple with the ServerGroupName field value
// and a boolean to check if the value has been set.
func (o *DescribeHostServerInstanceRequest) GetServerGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerGroupName, true
}

// SetServerGroupName sets field value
func (o *DescribeHostServerInstanceRequest) SetServerGroupName(v string) {
	o.ServerGroupName = v
}

func (o DescribeHostServerInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeHostServerInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Account"] = o.Account
	toSerialize["ServerGroupName"] = o.ServerGroupName
	return toSerialize, nil
}

func (o *DescribeHostServerInstanceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Account",
		"ServerGroupName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeHostServerInstanceRequest := _DescribeHostServerInstanceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeHostServerInstanceRequest)

	if err != nil {
		return err
	}

	*o = DescribeHostServerInstanceRequest(varDescribeHostServerInstanceRequest)

	return err
}

type NullableDescribeHostServerInstanceRequest struct {
	value *DescribeHostServerInstanceRequest
	isSet bool
}

func (v NullableDescribeHostServerInstanceRequest) Get() *DescribeHostServerInstanceRequest {
	return v.value
}

func (v *NullableDescribeHostServerInstanceRequest) Set(val *DescribeHostServerInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeHostServerInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeHostServerInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeHostServerInstanceRequest(val *DescribeHostServerInstanceRequest) *NullableDescribeHostServerInstanceRequest {
	return &NullableDescribeHostServerInstanceRequest{value: val, isSet: true}
}

func (v NullableDescribeHostServerInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeHostServerInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


