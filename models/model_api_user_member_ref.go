/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ApiUserMemberRef type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiUserMemberRef{}

// ApiUserMemberRef struct for ApiUserMemberRef
type ApiUserMemberRef struct {
	// 是否管理员
	Assignee *bool `json:"Assignee,omitempty"`
	// 部门ID
	DepartmentId *int64 `json:"DepartmentId,omitempty"`
	// 部门成员ID
	DepartmentMemberId *int64 `json:"DepartmentMemberId,omitempty"`
	// 部门名
	DepartmentName *string `json:"DepartmentName,omitempty"`
	// 描述ID
	DescribeId *string `json:"DescribeId,omitempty"`
	// 是否是当前查询部门的直接成员
	Pointer *bool `json:"Pointer,omitempty"`
}

// NewApiUserMemberRef instantiates a new ApiUserMemberRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUserMemberRef() *ApiUserMemberRef {
	this := ApiUserMemberRef{}
	var assignee bool = false
	this.Assignee = &assignee
	var departmentId int64 = 0
	this.DepartmentId = &departmentId
	var departmentMemberId int64 = 0
	this.DepartmentMemberId = &departmentMemberId
	var departmentName string = ""
	this.DepartmentName = &departmentName
	var describeId string = ""
	this.DescribeId = &describeId
	var pointer bool = false
	this.Pointer = &pointer
	return &this
}

// NewApiUserMemberRefWithDefaults instantiates a new ApiUserMemberRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUserMemberRefWithDefaults() *ApiUserMemberRef {
	this := ApiUserMemberRef{}
	var assignee bool = false
	this.Assignee = &assignee
	var departmentId int64 = 0
	this.DepartmentId = &departmentId
	var departmentMemberId int64 = 0
	this.DepartmentMemberId = &departmentMemberId
	var departmentName string = ""
	this.DepartmentName = &departmentName
	var describeId string = ""
	this.DescribeId = &describeId
	var pointer bool = false
	this.Pointer = &pointer
	return &this
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *ApiUserMemberRef) GetAssignee() bool {
	if o == nil || utils.IsNil(o.Assignee) {
		var ret bool
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserMemberRef) GetAssigneeOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *ApiUserMemberRef) HasAssignee() bool {
	if o != nil && !utils.IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given bool and assigns it to the Assignee field.
func (o *ApiUserMemberRef) SetAssignee(v bool) {
	o.Assignee = &v
}

// GetDepartmentId returns the DepartmentId field value if set, zero value otherwise.
func (o *ApiUserMemberRef) GetDepartmentId() int64 {
	if o == nil || utils.IsNil(o.DepartmentId) {
		var ret int64
		return ret
	}
	return *o.DepartmentId
}

// GetDepartmentIdOk returns a tuple with the DepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserMemberRef) GetDepartmentIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.DepartmentId) {
		return nil, false
	}
	return o.DepartmentId, true
}

// HasDepartmentId returns a boolean if a field has been set.
func (o *ApiUserMemberRef) HasDepartmentId() bool {
	if o != nil && !utils.IsNil(o.DepartmentId) {
		return true
	}

	return false
}

// SetDepartmentId gets a reference to the given int64 and assigns it to the DepartmentId field.
func (o *ApiUserMemberRef) SetDepartmentId(v int64) {
	o.DepartmentId = &v
}

// GetDepartmentMemberId returns the DepartmentMemberId field value if set, zero value otherwise.
func (o *ApiUserMemberRef) GetDepartmentMemberId() int64 {
	if o == nil || utils.IsNil(o.DepartmentMemberId) {
		var ret int64
		return ret
	}
	return *o.DepartmentMemberId
}

// GetDepartmentMemberIdOk returns a tuple with the DepartmentMemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserMemberRef) GetDepartmentMemberIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.DepartmentMemberId) {
		return nil, false
	}
	return o.DepartmentMemberId, true
}

// HasDepartmentMemberId returns a boolean if a field has been set.
func (o *ApiUserMemberRef) HasDepartmentMemberId() bool {
	if o != nil && !utils.IsNil(o.DepartmentMemberId) {
		return true
	}

	return false
}

// SetDepartmentMemberId gets a reference to the given int64 and assigns it to the DepartmentMemberId field.
func (o *ApiUserMemberRef) SetDepartmentMemberId(v int64) {
	o.DepartmentMemberId = &v
}

// GetDepartmentName returns the DepartmentName field value if set, zero value otherwise.
func (o *ApiUserMemberRef) GetDepartmentName() string {
	if o == nil || utils.IsNil(o.DepartmentName) {
		var ret string
		return ret
	}
	return *o.DepartmentName
}

// GetDepartmentNameOk returns a tuple with the DepartmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserMemberRef) GetDepartmentNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DepartmentName) {
		return nil, false
	}
	return o.DepartmentName, true
}

// HasDepartmentName returns a boolean if a field has been set.
func (o *ApiUserMemberRef) HasDepartmentName() bool {
	if o != nil && !utils.IsNil(o.DepartmentName) {
		return true
	}

	return false
}

// SetDepartmentName gets a reference to the given string and assigns it to the DepartmentName field.
func (o *ApiUserMemberRef) SetDepartmentName(v string) {
	o.DepartmentName = &v
}

// GetDescribeId returns the DescribeId field value if set, zero value otherwise.
func (o *ApiUserMemberRef) GetDescribeId() string {
	if o == nil || utils.IsNil(o.DescribeId) {
		var ret string
		return ret
	}
	return *o.DescribeId
}

// GetDescribeIdOk returns a tuple with the DescribeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserMemberRef) GetDescribeIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DescribeId) {
		return nil, false
	}
	return o.DescribeId, true
}

// HasDescribeId returns a boolean if a field has been set.
func (o *ApiUserMemberRef) HasDescribeId() bool {
	if o != nil && !utils.IsNil(o.DescribeId) {
		return true
	}

	return false
}

// SetDescribeId gets a reference to the given string and assigns it to the DescribeId field.
func (o *ApiUserMemberRef) SetDescribeId(v string) {
	o.DescribeId = &v
}

// GetPointer returns the Pointer field value if set, zero value otherwise.
func (o *ApiUserMemberRef) GetPointer() bool {
	if o == nil || utils.IsNil(o.Pointer) {
		var ret bool
		return ret
	}
	return *o.Pointer
}

// GetPointerOk returns a tuple with the Pointer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserMemberRef) GetPointerOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.Pointer) {
		return nil, false
	}
	return o.Pointer, true
}

// HasPointer returns a boolean if a field has been set.
func (o *ApiUserMemberRef) HasPointer() bool {
	if o != nil && !utils.IsNil(o.Pointer) {
		return true
	}

	return false
}

// SetPointer gets a reference to the given bool and assigns it to the Pointer field.
func (o *ApiUserMemberRef) SetPointer(v bool) {
	o.Pointer = &v
}

func (o ApiUserMemberRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUserMemberRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Assignee) {
		toSerialize["Assignee"] = o.Assignee
	}
	if !utils.IsNil(o.DepartmentId) {
		toSerialize["DepartmentId"] = o.DepartmentId
	}
	if !utils.IsNil(o.DepartmentMemberId) {
		toSerialize["DepartmentMemberId"] = o.DepartmentMemberId
	}
	if !utils.IsNil(o.DepartmentName) {
		toSerialize["DepartmentName"] = o.DepartmentName
	}
	if !utils.IsNil(o.DescribeId) {
		toSerialize["DescribeId"] = o.DescribeId
	}
	if !utils.IsNil(o.Pointer) {
		toSerialize["Pointer"] = o.Pointer
	}
	return toSerialize, nil
}

type NullableApiUserMemberRef struct {
	value *ApiUserMemberRef
	isSet bool
}

func (v NullableApiUserMemberRef) Get() *ApiUserMemberRef {
	return v.value
}

func (v *NullableApiUserMemberRef) Set(val *ApiUserMemberRef) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUserMemberRef) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUserMemberRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUserMemberRef(val *ApiUserMemberRef) *NullableApiUserMemberRef {
	return &NullableApiUserMemberRef{value: val, isSet: true}
}

func (v NullableApiUserMemberRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUserMemberRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


