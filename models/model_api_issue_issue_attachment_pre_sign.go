/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ApiIssueIssueAttachmentPreSign type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiIssueIssueAttachmentPreSign{}

// ApiIssueIssueAttachmentPreSign struct for ApiIssueIssueAttachmentPreSign
type ApiIssueIssueAttachmentPreSign struct {
	// 认证凭据
	AuthToken string `json:"AuthToken"`
	// cos的临时token
	CosSecurityToken string `json:"CosSecurityToken"`
	// 文件名
	StorageKey string `json:"StorageKey"`
	// 时间
	Time int64 `json:"Time"`
	// 上传链接
	UploadLink string `json:"UploadLink"`
}

type _ApiIssueIssueAttachmentPreSign ApiIssueIssueAttachmentPreSign

// NewApiIssueIssueAttachmentPreSign instantiates a new ApiIssueIssueAttachmentPreSign object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiIssueIssueAttachmentPreSign(authToken string, cosSecurityToken string, storageKey string, time int64, uploadLink string) *ApiIssueIssueAttachmentPreSign {
	this := ApiIssueIssueAttachmentPreSign{}
	this.AuthToken = authToken
	this.CosSecurityToken = cosSecurityToken
	this.StorageKey = storageKey
	this.Time = time
	this.UploadLink = uploadLink
	return &this
}

// NewApiIssueIssueAttachmentPreSignWithDefaults instantiates a new ApiIssueIssueAttachmentPreSign object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiIssueIssueAttachmentPreSignWithDefaults() *ApiIssueIssueAttachmentPreSign {
	this := ApiIssueIssueAttachmentPreSign{}
	var authToken string = ""
	this.AuthToken = authToken
	var cosSecurityToken string = ""
	this.CosSecurityToken = cosSecurityToken
	var storageKey string = ""
	this.StorageKey = storageKey
	var time int64 = 0
	this.Time = time
	var uploadLink string = ""
	this.UploadLink = uploadLink
	return &this
}

// GetAuthToken returns the AuthToken field value
func (o *ApiIssueIssueAttachmentPreSign) GetAuthToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value
// and a boolean to check if the value has been set.
func (o *ApiIssueIssueAttachmentPreSign) GetAuthTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthToken, true
}

// SetAuthToken sets field value
func (o *ApiIssueIssueAttachmentPreSign) SetAuthToken(v string) {
	o.AuthToken = v
}

// GetCosSecurityToken returns the CosSecurityToken field value
func (o *ApiIssueIssueAttachmentPreSign) GetCosSecurityToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CosSecurityToken
}

// GetCosSecurityTokenOk returns a tuple with the CosSecurityToken field value
// and a boolean to check if the value has been set.
func (o *ApiIssueIssueAttachmentPreSign) GetCosSecurityTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CosSecurityToken, true
}

// SetCosSecurityToken sets field value
func (o *ApiIssueIssueAttachmentPreSign) SetCosSecurityToken(v string) {
	o.CosSecurityToken = v
}

// GetStorageKey returns the StorageKey field value
func (o *ApiIssueIssueAttachmentPreSign) GetStorageKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageKey
}

// GetStorageKeyOk returns a tuple with the StorageKey field value
// and a boolean to check if the value has been set.
func (o *ApiIssueIssueAttachmentPreSign) GetStorageKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageKey, true
}

// SetStorageKey sets field value
func (o *ApiIssueIssueAttachmentPreSign) SetStorageKey(v string) {
	o.StorageKey = v
}

// GetTime returns the Time field value
func (o *ApiIssueIssueAttachmentPreSign) GetTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *ApiIssueIssueAttachmentPreSign) GetTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *ApiIssueIssueAttachmentPreSign) SetTime(v int64) {
	o.Time = v
}

// GetUploadLink returns the UploadLink field value
func (o *ApiIssueIssueAttachmentPreSign) GetUploadLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadLink
}

// GetUploadLinkOk returns a tuple with the UploadLink field value
// and a boolean to check if the value has been set.
func (o *ApiIssueIssueAttachmentPreSign) GetUploadLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadLink, true
}

// SetUploadLink sets field value
func (o *ApiIssueIssueAttachmentPreSign) SetUploadLink(v string) {
	o.UploadLink = v
}

func (o ApiIssueIssueAttachmentPreSign) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiIssueIssueAttachmentPreSign) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["AuthToken"] = o.AuthToken
	toSerialize["CosSecurityToken"] = o.CosSecurityToken
	toSerialize["StorageKey"] = o.StorageKey
	toSerialize["Time"] = o.Time
	toSerialize["UploadLink"] = o.UploadLink
	return toSerialize, nil
}

func (o *ApiIssueIssueAttachmentPreSign) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"AuthToken",
		"CosSecurityToken",
		"StorageKey",
		"Time",
		"UploadLink",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiIssueIssueAttachmentPreSign := _ApiIssueIssueAttachmentPreSign{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiIssueIssueAttachmentPreSign)

	if err != nil {
		return err
	}

	*o = ApiIssueIssueAttachmentPreSign(varApiIssueIssueAttachmentPreSign)

	return err
}

type NullableApiIssueIssueAttachmentPreSign struct {
	value *ApiIssueIssueAttachmentPreSign
	isSet bool
}

func (v NullableApiIssueIssueAttachmentPreSign) Get() *ApiIssueIssueAttachmentPreSign {
	return v.value
}

func (v *NullableApiIssueIssueAttachmentPreSign) Set(val *ApiIssueIssueAttachmentPreSign) {
	v.value = val
	v.isSet = true
}

func (v NullableApiIssueIssueAttachmentPreSign) IsSet() bool {
	return v.isSet
}

func (v *NullableApiIssueIssueAttachmentPreSign) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiIssueIssueAttachmentPreSign(val *ApiIssueIssueAttachmentPreSign) *NullableApiIssueIssueAttachmentPreSign {
	return &NullableApiIssueIssueAttachmentPreSign{value: val, isSet: true}
}

func (v NullableApiIssueIssueAttachmentPreSign) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiIssueIssueAttachmentPreSign) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


