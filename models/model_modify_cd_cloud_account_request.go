/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ModifyCdCloudAccountRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ModifyCdCloudAccountRequest{}

// ModifyCdCloudAccountRequest struct for ModifyCdCloudAccountRequest
type ModifyCdCloudAccountRequest struct {
	Credential CloudAccountCredential `json:"Credential"`
	// 云账号 ID
	Id int64 `json:"Id"`
	// 云账号名称
	Name string `json:"Name"`
}

type _ModifyCdCloudAccountRequest ModifyCdCloudAccountRequest

// NewModifyCdCloudAccountRequest instantiates a new ModifyCdCloudAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyCdCloudAccountRequest(credential CloudAccountCredential, id int64, name string) *ModifyCdCloudAccountRequest {
	this := ModifyCdCloudAccountRequest{}
	this.Credential = credential
	this.Id = id
	this.Name = name
	return &this
}

// NewModifyCdCloudAccountRequestWithDefaults instantiates a new ModifyCdCloudAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyCdCloudAccountRequestWithDefaults() *ModifyCdCloudAccountRequest {
	this := ModifyCdCloudAccountRequest{}
	return &this
}

// GetCredential returns the Credential field value
func (o *ModifyCdCloudAccountRequest) GetCredential() CloudAccountCredential {
	if o == nil {
		var ret CloudAccountCredential
		return ret
	}

	return o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value
// and a boolean to check if the value has been set.
func (o *ModifyCdCloudAccountRequest) GetCredentialOk() (*CloudAccountCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credential, true
}

// SetCredential sets field value
func (o *ModifyCdCloudAccountRequest) SetCredential(v CloudAccountCredential) {
	o.Credential = v
}

// GetId returns the Id field value
func (o *ModifyCdCloudAccountRequest) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModifyCdCloudAccountRequest) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModifyCdCloudAccountRequest) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ModifyCdCloudAccountRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModifyCdCloudAccountRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModifyCdCloudAccountRequest) SetName(v string) {
	o.Name = v
}

func (o ModifyCdCloudAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyCdCloudAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Credential"] = o.Credential
	toSerialize["Id"] = o.Id
	toSerialize["Name"] = o.Name
	return toSerialize, nil
}

func (o *ModifyCdCloudAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Credential",
		"Id",
		"Name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyCdCloudAccountRequest := _ModifyCdCloudAccountRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyCdCloudAccountRequest)

	if err != nil {
		return err
	}

	*o = ModifyCdCloudAccountRequest(varModifyCdCloudAccountRequest)

	return err
}

type NullableModifyCdCloudAccountRequest struct {
	value *ModifyCdCloudAccountRequest
	isSet bool
}

func (v NullableModifyCdCloudAccountRequest) Get() *ModifyCdCloudAccountRequest {
	return v.value
}

func (v *NullableModifyCdCloudAccountRequest) Set(val *ModifyCdCloudAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyCdCloudAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyCdCloudAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyCdCloudAccountRequest(val *ModifyCdCloudAccountRequest) *NullableModifyCdCloudAccountRequest {
	return &NullableModifyCdCloudAccountRequest{value: val, isSet: true}
}

func (v NullableModifyCdCloudAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyCdCloudAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


