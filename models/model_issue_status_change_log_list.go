/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the IssueStatusChangeLogList type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &IssueStatusChangeLogList{}

// IssueStatusChangeLogList 事项状态修改日志list
type IssueStatusChangeLogList struct {
	// 事项状态修改日志list
	List []IssueStatusChangeLog `json:"List,omitempty"`
}

// NewIssueStatusChangeLogList instantiates a new IssueStatusChangeLogList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueStatusChangeLogList() *IssueStatusChangeLogList {
	this := IssueStatusChangeLogList{}
	return &this
}

// NewIssueStatusChangeLogListWithDefaults instantiates a new IssueStatusChangeLogList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueStatusChangeLogListWithDefaults() *IssueStatusChangeLogList {
	this := IssueStatusChangeLogList{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IssueStatusChangeLogList) GetList() []IssueStatusChangeLog {
	if o == nil {
		var ret []IssueStatusChangeLog
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueStatusChangeLogList) GetListOk() ([]IssueStatusChangeLog, bool) {
	if o == nil || utils.IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *IssueStatusChangeLogList) HasList() bool {
	if o != nil && !utils.IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []IssueStatusChangeLog and assigns it to the List field.
func (o *IssueStatusChangeLogList) SetList(v []IssueStatusChangeLog) {
	o.List = v
}

func (o IssueStatusChangeLogList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueStatusChangeLogList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.List != nil {
		toSerialize["List"] = o.List
	}
	return toSerialize, nil
}

type NullableIssueStatusChangeLogList struct {
	value *IssueStatusChangeLogList
	isSet bool
}

func (v NullableIssueStatusChangeLogList) Get() *IssueStatusChangeLogList {
	return v.value
}

func (v *NullableIssueStatusChangeLogList) Set(val *IssueStatusChangeLogList) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueStatusChangeLogList) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueStatusChangeLogList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueStatusChangeLogList(val *IssueStatusChangeLogList) *NullableIssueStatusChangeLogList {
	return &NullableIssueStatusChangeLogList{value: val, isSet: true}
}

func (v NullableIssueStatusChangeLogList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueStatusChangeLogList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


