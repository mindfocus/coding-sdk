/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ArtifactChecksum type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ArtifactChecksum{}

// ArtifactChecksum 制品文件Checksum信息实体
type ArtifactChecksum struct {
	// 文件Md5
	Md5 utils.NullableString `json:"Md5,omitempty"`
	// 文件名称
	Name utils.NullableString `json:"Name,omitempty"`
	// 文件Sha1
	Sha1 utils.NullableString `json:"Sha1,omitempty"`
	// 文件Sha256
	Sha256 utils.NullableString `json:"Sha256,omitempty"`
}

// NewArtifactChecksum instantiates a new ArtifactChecksum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactChecksum() *ArtifactChecksum {
	this := ArtifactChecksum{}
	var md5 string = ""
	this.Md5 = *utils.NewNullableString(&md5)
	var name string = ""
	this.Name = *utils.NewNullableString(&name)
	var sha1 string = ""
	this.Sha1 = *utils.NewNullableString(&sha1)
	var sha256 string = ""
	this.Sha256 = *utils.NewNullableString(&sha256)
	return &this
}

// NewArtifactChecksumWithDefaults instantiates a new ArtifactChecksum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactChecksumWithDefaults() *ArtifactChecksum {
	this := ArtifactChecksum{}
	var md5 string = ""
	this.Md5 = *utils.NewNullableString(&md5)
	var name string = ""
	this.Name = *utils.NewNullableString(&name)
	var sha1 string = ""
	this.Sha1 = *utils.NewNullableString(&sha1)
	var sha256 string = ""
	this.Sha256 = *utils.NewNullableString(&sha256)
	return &this
}

// GetMd5 returns the Md5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtifactChecksum) GetMd5() string {
	if o == nil || utils.IsNil(o.Md5.Get()) {
		var ret string
		return ret
	}
	return *o.Md5.Get()
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactChecksum) GetMd5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Md5.Get(), o.Md5.IsSet()
}

// HasMd5 returns a boolean if a field has been set.
func (o *ArtifactChecksum) HasMd5() bool {
	if o != nil && o.Md5.IsSet() {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given utils.NullableString and assigns it to the Md5 field.
func (o *ArtifactChecksum) SetMd5(v string) {
	o.Md5.Set(&v)
}
// SetMd5Nil sets the value for Md5 to be an explicit nil
func (o *ArtifactChecksum) SetMd5Nil() {
	o.Md5.Set(nil)
}

// UnsetMd5 ensures that no value is present for Md5, not even an explicit nil
func (o *ArtifactChecksum) UnsetMd5() {
	o.Md5.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtifactChecksum) GetName() string {
	if o == nil || utils.IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactChecksum) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ArtifactChecksum) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given utils.NullableString and assigns it to the Name field.
func (o *ArtifactChecksum) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ArtifactChecksum) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ArtifactChecksum) UnsetName() {
	o.Name.Unset()
}

// GetSha1 returns the Sha1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtifactChecksum) GetSha1() string {
	if o == nil || utils.IsNil(o.Sha1.Get()) {
		var ret string
		return ret
	}
	return *o.Sha1.Get()
}

// GetSha1Ok returns a tuple with the Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactChecksum) GetSha1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sha1.Get(), o.Sha1.IsSet()
}

// HasSha1 returns a boolean if a field has been set.
func (o *ArtifactChecksum) HasSha1() bool {
	if o != nil && o.Sha1.IsSet() {
		return true
	}

	return false
}

// SetSha1 gets a reference to the given utils.NullableString and assigns it to the Sha1 field.
func (o *ArtifactChecksum) SetSha1(v string) {
	o.Sha1.Set(&v)
}
// SetSha1Nil sets the value for Sha1 to be an explicit nil
func (o *ArtifactChecksum) SetSha1Nil() {
	o.Sha1.Set(nil)
}

// UnsetSha1 ensures that no value is present for Sha1, not even an explicit nil
func (o *ArtifactChecksum) UnsetSha1() {
	o.Sha1.Unset()
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtifactChecksum) GetSha256() string {
	if o == nil || utils.IsNil(o.Sha256.Get()) {
		var ret string
		return ret
	}
	return *o.Sha256.Get()
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactChecksum) GetSha256Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sha256.Get(), o.Sha256.IsSet()
}

// HasSha256 returns a boolean if a field has been set.
func (o *ArtifactChecksum) HasSha256() bool {
	if o != nil && o.Sha256.IsSet() {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given utils.NullableString and assigns it to the Sha256 field.
func (o *ArtifactChecksum) SetSha256(v string) {
	o.Sha256.Set(&v)
}
// SetSha256Nil sets the value for Sha256 to be an explicit nil
func (o *ArtifactChecksum) SetSha256Nil() {
	o.Sha256.Set(nil)
}

// UnsetSha256 ensures that no value is present for Sha256, not even an explicit nil
func (o *ArtifactChecksum) UnsetSha256() {
	o.Sha256.Unset()
}

func (o ArtifactChecksum) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactChecksum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Md5.IsSet() {
		toSerialize["Md5"] = o.Md5.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Sha1.IsSet() {
		toSerialize["Sha1"] = o.Sha1.Get()
	}
	if o.Sha256.IsSet() {
		toSerialize["Sha256"] = o.Sha256.Get()
	}
	return toSerialize, nil
}

type NullableArtifactChecksum struct {
	value *ArtifactChecksum
	isSet bool
}

func (v NullableArtifactChecksum) Get() *ArtifactChecksum {
	return v.value
}

func (v *NullableArtifactChecksum) Set(val *ArtifactChecksum) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactChecksum) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactChecksum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactChecksum(val *ArtifactChecksum) *NullableArtifactChecksum {
	return &NullableArtifactChecksum{value: val, isSet: true}
}

func (v NullableArtifactChecksum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactChecksum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


