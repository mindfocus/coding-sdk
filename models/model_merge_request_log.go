/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the MergeRequestLog type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MergeRequestLog{}

// MergeRequestLog 合并请求操作记录
type MergeRequestLog struct {
	// 操作方式
	Action *string `json:"Action,omitempty"`
	// 请求id
	Id *int64 `json:"Id,omitempty"`
	// 操作人姓名
	Name *string `json:"Name,omitempty"`
}

// NewMergeRequestLog instantiates a new MergeRequestLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeRequestLog() *MergeRequestLog {
	this := MergeRequestLog{}
	var action string = ""
	this.Action = &action
	var name string = ""
	this.Name = &name
	return &this
}

// NewMergeRequestLogWithDefaults instantiates a new MergeRequestLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeRequestLogWithDefaults() *MergeRequestLog {
	this := MergeRequestLog{}
	var action string = ""
	this.Action = &action
	var name string = ""
	this.Name = &name
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *MergeRequestLog) GetAction() string {
	if o == nil || utils.IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeRequestLog) GetActionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *MergeRequestLog) HasAction() bool {
	if o != nil && !utils.IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *MergeRequestLog) SetAction(v string) {
	o.Action = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MergeRequestLog) GetId() int64 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeRequestLog) GetIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MergeRequestLog) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *MergeRequestLog) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MergeRequestLog) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeRequestLog) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MergeRequestLog) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MergeRequestLog) SetName(v string) {
	o.Name = &v
}

func (o MergeRequestLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeRequestLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Action) {
		toSerialize["Action"] = o.Action
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !utils.IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	return toSerialize, nil
}

type NullableMergeRequestLog struct {
	value *MergeRequestLog
	isSet bool
}

func (v NullableMergeRequestLog) Get() *MergeRequestLog {
	return v.value
}

func (v *NullableMergeRequestLog) Set(val *MergeRequestLog) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeRequestLog) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeRequestLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeRequestLog(val *MergeRequestLog) *NullableMergeRequestLog {
	return &NullableMergeRequestLog{value: val, isSet: true}
}

func (v NullableMergeRequestLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeRequestLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


