/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the HostServerGroup type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &HostServerGroup{}

// HostServerGroup HostServerGroup 结构
type HostServerGroup struct {
	// 主机组云账号
	Account *string `json:"Account,omitempty"`
	AgentMachine *AgentMachine `json:"AgentMachine,omitempty"`
	// 主机组名称
	DisplayName *string `json:"DisplayName,omitempty"`
	// 主机组 id
	Id *int64 `json:"Id,omitempty"`
}

// NewHostServerGroup instantiates a new HostServerGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostServerGroup() *HostServerGroup {
	this := HostServerGroup{}
	var account string = ""
	this.Account = &account
	var displayName string = ""
	this.DisplayName = &displayName
	return &this
}

// NewHostServerGroupWithDefaults instantiates a new HostServerGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostServerGroupWithDefaults() *HostServerGroup {
	this := HostServerGroup{}
	var account string = ""
	this.Account = &account
	var displayName string = ""
	this.DisplayName = &displayName
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *HostServerGroup) GetAccount() string {
	if o == nil || utils.IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroup) GetAccountOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *HostServerGroup) HasAccount() bool {
	if o != nil && !utils.IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *HostServerGroup) SetAccount(v string) {
	o.Account = &v
}

// GetAgentMachine returns the AgentMachine field value if set, zero value otherwise.
func (o *HostServerGroup) GetAgentMachine() AgentMachine {
	if o == nil || utils.IsNil(o.AgentMachine) {
		var ret AgentMachine
		return ret
	}
	return *o.AgentMachine
}

// GetAgentMachineOk returns a tuple with the AgentMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroup) GetAgentMachineOk() (*AgentMachine, bool) {
	if o == nil || utils.IsNil(o.AgentMachine) {
		return nil, false
	}
	return o.AgentMachine, true
}

// HasAgentMachine returns a boolean if a field has been set.
func (o *HostServerGroup) HasAgentMachine() bool {
	if o != nil && !utils.IsNil(o.AgentMachine) {
		return true
	}

	return false
}

// SetAgentMachine gets a reference to the given AgentMachine and assigns it to the AgentMachine field.
func (o *HostServerGroup) SetAgentMachine(v AgentMachine) {
	o.AgentMachine = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *HostServerGroup) GetDisplayName() string {
	if o == nil || utils.IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroup) GetDisplayNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *HostServerGroup) HasDisplayName() bool {
	if o != nil && !utils.IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *HostServerGroup) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostServerGroup) GetId() int64 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroup) GetIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostServerGroup) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *HostServerGroup) SetId(v int64) {
	o.Id = &v
}

func (o HostServerGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostServerGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Account) {
		toSerialize["Account"] = o.Account
	}
	if !utils.IsNil(o.AgentMachine) {
		toSerialize["AgentMachine"] = o.AgentMachine
	}
	if !utils.IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	return toSerialize, nil
}

type NullableHostServerGroup struct {
	value *HostServerGroup
	isSet bool
}

func (v NullableHostServerGroup) Get() *HostServerGroup {
	return v.value
}

func (v *NullableHostServerGroup) Set(val *HostServerGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableHostServerGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableHostServerGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostServerGroup(val *HostServerGroup) *NullableHostServerGroup {
	return &NullableHostServerGroup{value: val, isSet: true}
}

func (v NullableHostServerGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostServerGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


