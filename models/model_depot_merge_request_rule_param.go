/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DepotMergeRequestRuleParam type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DepotMergeRequestRuleParam{}

// DepotMergeRequestRuleParam 仓库规范的合并方向规则入参
type DepotMergeRequestRuleParam struct {
	// 源分支类型名称
	SourceBranchTypeName string `json:"SourceBranchTypeName"`
	// 目标分支类型名称
	TargetBranchTypeName string `json:"TargetBranchTypeName"`
}

type _DepotMergeRequestRuleParam DepotMergeRequestRuleParam

// NewDepotMergeRequestRuleParam instantiates a new DepotMergeRequestRuleParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepotMergeRequestRuleParam(sourceBranchTypeName string, targetBranchTypeName string) *DepotMergeRequestRuleParam {
	this := DepotMergeRequestRuleParam{}
	this.SourceBranchTypeName = sourceBranchTypeName
	this.TargetBranchTypeName = targetBranchTypeName
	return &this
}

// NewDepotMergeRequestRuleParamWithDefaults instantiates a new DepotMergeRequestRuleParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepotMergeRequestRuleParamWithDefaults() *DepotMergeRequestRuleParam {
	this := DepotMergeRequestRuleParam{}
	var sourceBranchTypeName string = ""
	this.SourceBranchTypeName = sourceBranchTypeName
	var targetBranchTypeName string = ""
	this.TargetBranchTypeName = targetBranchTypeName
	return &this
}

// GetSourceBranchTypeName returns the SourceBranchTypeName field value
func (o *DepotMergeRequestRuleParam) GetSourceBranchTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceBranchTypeName
}

// GetSourceBranchTypeNameOk returns a tuple with the SourceBranchTypeName field value
// and a boolean to check if the value has been set.
func (o *DepotMergeRequestRuleParam) GetSourceBranchTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceBranchTypeName, true
}

// SetSourceBranchTypeName sets field value
func (o *DepotMergeRequestRuleParam) SetSourceBranchTypeName(v string) {
	o.SourceBranchTypeName = v
}

// GetTargetBranchTypeName returns the TargetBranchTypeName field value
func (o *DepotMergeRequestRuleParam) GetTargetBranchTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetBranchTypeName
}

// GetTargetBranchTypeNameOk returns a tuple with the TargetBranchTypeName field value
// and a boolean to check if the value has been set.
func (o *DepotMergeRequestRuleParam) GetTargetBranchTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetBranchTypeName, true
}

// SetTargetBranchTypeName sets field value
func (o *DepotMergeRequestRuleParam) SetTargetBranchTypeName(v string) {
	o.TargetBranchTypeName = v
}

func (o DepotMergeRequestRuleParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepotMergeRequestRuleParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["SourceBranchTypeName"] = o.SourceBranchTypeName
	toSerialize["TargetBranchTypeName"] = o.TargetBranchTypeName
	return toSerialize, nil
}

func (o *DepotMergeRequestRuleParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"SourceBranchTypeName",
		"TargetBranchTypeName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDepotMergeRequestRuleParam := _DepotMergeRequestRuleParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDepotMergeRequestRuleParam)

	if err != nil {
		return err
	}

	*o = DepotMergeRequestRuleParam(varDepotMergeRequestRuleParam)

	return err
}

type NullableDepotMergeRequestRuleParam struct {
	value *DepotMergeRequestRuleParam
	isSet bool
}

func (v NullableDepotMergeRequestRuleParam) Get() *DepotMergeRequestRuleParam {
	return v.value
}

func (v *NullableDepotMergeRequestRuleParam) Set(val *DepotMergeRequestRuleParam) {
	v.value = val
	v.isSet = true
}

func (v NullableDepotMergeRequestRuleParam) IsSet() bool {
	return v.isSet
}

func (v *NullableDepotMergeRequestRuleParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepotMergeRequestRuleParam(val *DepotMergeRequestRuleParam) *NullableDepotMergeRequestRuleParam {
	return &NullableDepotMergeRequestRuleParam{value: val, isSet: true}
}

func (v NullableDepotMergeRequestRuleParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepotMergeRequestRuleParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


