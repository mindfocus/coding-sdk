/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeUserGroupsResponsePageData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeUserGroupsResponsePageData{}

// DescribeUserGroupsResponsePageData 用户组列表的分页数据
type DescribeUserGroupsResponsePageData struct {
	// 页码
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 每页条数
	PageSize *int64 `json:"PageSize,omitempty"`
	// 总条数
	TotalCount *int64 `json:"TotalCount,omitempty"`
	// 用户组列表
	UserGroupList []UserGroup `json:"UserGroupList,omitempty"`
}

// NewDescribeUserGroupsResponsePageData instantiates a new DescribeUserGroupsResponsePageData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeUserGroupsResponsePageData() *DescribeUserGroupsResponsePageData {
	this := DescribeUserGroupsResponsePageData{}
	return &this
}

// NewDescribeUserGroupsResponsePageDataWithDefaults instantiates a new DescribeUserGroupsResponsePageData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeUserGroupsResponsePageDataWithDefaults() *DescribeUserGroupsResponsePageData {
	this := DescribeUserGroupsResponsePageData{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeUserGroupsResponsePageData) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeUserGroupsResponsePageData) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeUserGroupsResponsePageData) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *DescribeUserGroupsResponsePageData) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeUserGroupsResponsePageData) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeUserGroupsResponsePageData) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeUserGroupsResponsePageData) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *DescribeUserGroupsResponsePageData) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *DescribeUserGroupsResponsePageData) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeUserGroupsResponsePageData) GetTotalCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *DescribeUserGroupsResponsePageData) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *DescribeUserGroupsResponsePageData) SetTotalCount(v int64) {
	o.TotalCount = &v
}

// GetUserGroupList returns the UserGroupList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DescribeUserGroupsResponsePageData) GetUserGroupList() []UserGroup {
	if o == nil {
		var ret []UserGroup
		return ret
	}
	return o.UserGroupList
}

// GetUserGroupListOk returns a tuple with the UserGroupList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DescribeUserGroupsResponsePageData) GetUserGroupListOk() ([]UserGroup, bool) {
	if o == nil || utils.IsNil(o.UserGroupList) {
		return nil, false
	}
	return o.UserGroupList, true
}

// HasUserGroupList returns a boolean if a field has been set.
func (o *DescribeUserGroupsResponsePageData) HasUserGroupList() bool {
	if o != nil && !utils.IsNil(o.UserGroupList) {
		return true
	}

	return false
}

// SetUserGroupList gets a reference to the given []UserGroup and assigns it to the UserGroupList field.
func (o *DescribeUserGroupsResponsePageData) SetUserGroupList(v []UserGroup) {
	o.UserGroupList = v
}

func (o DescribeUserGroupsResponsePageData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeUserGroupsResponsePageData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	if o.UserGroupList != nil {
		toSerialize["UserGroupList"] = o.UserGroupList
	}
	return toSerialize, nil
}

type NullableDescribeUserGroupsResponsePageData struct {
	value *DescribeUserGroupsResponsePageData
	isSet bool
}

func (v NullableDescribeUserGroupsResponsePageData) Get() *DescribeUserGroupsResponsePageData {
	return v.value
}

func (v *NullableDescribeUserGroupsResponsePageData) Set(val *DescribeUserGroupsResponsePageData) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeUserGroupsResponsePageData) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeUserGroupsResponsePageData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeUserGroupsResponsePageData(val *DescribeUserGroupsResponsePageData) *NullableDescribeUserGroupsResponsePageData {
	return &NullableDescribeUserGroupsResponsePageData{value: val, isSet: true}
}

func (v NullableDescribeUserGroupsResponsePageData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeUserGroupsResponsePageData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


