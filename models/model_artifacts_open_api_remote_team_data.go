/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ArtifactsOpenApiRemoteTeamData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ArtifactsOpenApiRemoteTeamData{}

// ArtifactsOpenApiRemoteTeamData struct for ArtifactsOpenApiRemoteTeamData
type ArtifactsOpenApiRemoteTeamData struct {
	// 下发信息
	SyncMessage string `json:"SyncMessage"`
	// 团队地址
	RemoteTeamUrl string `json:"RemoteTeamUrl"`
	// 用户名
	UserName string `json:"UserName"`
	// 下发状态
	SyncStatus int64 `json:"SyncStatus"`
	// ID
	Id int64 `json:"Id"`
	// 远程仓库列表
	RemoteRepos []ArtifactsOpenApiRemoteRepoData `json:"RemoteRepos"`
	// 远程团队名
	RemoteTeamName string `json:"RemoteTeamName"`
	// 是否成功
	Successful bool `json:"Successful"`
	// 是否删除
	Deleting bool `json:"Deleting"`
}

type _ArtifactsOpenApiRemoteTeamData ArtifactsOpenApiRemoteTeamData

// NewArtifactsOpenApiRemoteTeamData instantiates a new ArtifactsOpenApiRemoteTeamData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactsOpenApiRemoteTeamData(syncMessage string, remoteTeamUrl string, userName string, syncStatus int64, id int64, remoteRepos []ArtifactsOpenApiRemoteRepoData, remoteTeamName string, successful bool, deleting bool) *ArtifactsOpenApiRemoteTeamData {
	this := ArtifactsOpenApiRemoteTeamData{}
	this.SyncMessage = syncMessage
	this.RemoteTeamUrl = remoteTeamUrl
	this.UserName = userName
	this.SyncStatus = syncStatus
	this.Id = id
	this.RemoteRepos = remoteRepos
	this.RemoteTeamName = remoteTeamName
	this.Successful = successful
	this.Deleting = deleting
	return &this
}

// NewArtifactsOpenApiRemoteTeamDataWithDefaults instantiates a new ArtifactsOpenApiRemoteTeamData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactsOpenApiRemoteTeamDataWithDefaults() *ArtifactsOpenApiRemoteTeamData {
	this := ArtifactsOpenApiRemoteTeamData{}
	var syncMessage string = ""
	this.SyncMessage = syncMessage
	var remoteTeamUrl string = ""
	this.RemoteTeamUrl = remoteTeamUrl
	var userName string = ""
	this.UserName = userName
	var syncStatus int64 = 0
	this.SyncStatus = syncStatus
	var id int64 = 0
	this.Id = id
	var remoteTeamName string = ""
	this.RemoteTeamName = remoteTeamName
	var successful bool = false
	this.Successful = successful
	var deleting bool = false
	this.Deleting = deleting
	return &this
}

// GetSyncMessage returns the SyncMessage field value
func (o *ArtifactsOpenApiRemoteTeamData) GetSyncMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SyncMessage
}

// GetSyncMessageOk returns a tuple with the SyncMessage field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetSyncMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyncMessage, true
}

// SetSyncMessage sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetSyncMessage(v string) {
	o.SyncMessage = v
}

// GetRemoteTeamUrl returns the RemoteTeamUrl field value
func (o *ArtifactsOpenApiRemoteTeamData) GetRemoteTeamUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteTeamUrl
}

// GetRemoteTeamUrlOk returns a tuple with the RemoteTeamUrl field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetRemoteTeamUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteTeamUrl, true
}

// SetRemoteTeamUrl sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetRemoteTeamUrl(v string) {
	o.RemoteTeamUrl = v
}

// GetUserName returns the UserName field value
func (o *ArtifactsOpenApiRemoteTeamData) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetUserName(v string) {
	o.UserName = v
}

// GetSyncStatus returns the SyncStatus field value
func (o *ArtifactsOpenApiRemoteTeamData) GetSyncStatus() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SyncStatus
}

// GetSyncStatusOk returns a tuple with the SyncStatus field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetSyncStatusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyncStatus, true
}

// SetSyncStatus sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetSyncStatus(v int64) {
	o.SyncStatus = v
}

// GetId returns the Id field value
func (o *ArtifactsOpenApiRemoteTeamData) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetId(v int64) {
	o.Id = v
}

// GetRemoteRepos returns the RemoteRepos field value
func (o *ArtifactsOpenApiRemoteTeamData) GetRemoteRepos() []ArtifactsOpenApiRemoteRepoData {
	if o == nil {
		var ret []ArtifactsOpenApiRemoteRepoData
		return ret
	}

	return o.RemoteRepos
}

// GetRemoteReposOk returns a tuple with the RemoteRepos field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetRemoteReposOk() ([]ArtifactsOpenApiRemoteRepoData, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteRepos, true
}

// SetRemoteRepos sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetRemoteRepos(v []ArtifactsOpenApiRemoteRepoData) {
	o.RemoteRepos = v
}

// GetRemoteTeamName returns the RemoteTeamName field value
func (o *ArtifactsOpenApiRemoteTeamData) GetRemoteTeamName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteTeamName
}

// GetRemoteTeamNameOk returns a tuple with the RemoteTeamName field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetRemoteTeamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteTeamName, true
}

// SetRemoteTeamName sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetRemoteTeamName(v string) {
	o.RemoteTeamName = v
}

// GetSuccessful returns the Successful field value
func (o *ArtifactsOpenApiRemoteTeamData) GetSuccessful() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Successful
}

// GetSuccessfulOk returns a tuple with the Successful field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetSuccessfulOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Successful, true
}

// SetSuccessful sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetSuccessful(v bool) {
	o.Successful = v
}

// GetDeleting returns the Deleting field value
func (o *ArtifactsOpenApiRemoteTeamData) GetDeleting() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleting
}

// GetDeletingOk returns a tuple with the Deleting field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiRemoteTeamData) GetDeletingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleting, true
}

// SetDeleting sets field value
func (o *ArtifactsOpenApiRemoteTeamData) SetDeleting(v bool) {
	o.Deleting = v
}

func (o ArtifactsOpenApiRemoteTeamData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactsOpenApiRemoteTeamData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["SyncMessage"] = o.SyncMessage
	toSerialize["RemoteTeamUrl"] = o.RemoteTeamUrl
	toSerialize["UserName"] = o.UserName
	toSerialize["SyncStatus"] = o.SyncStatus
	toSerialize["Id"] = o.Id
	toSerialize["RemoteRepos"] = o.RemoteRepos
	toSerialize["RemoteTeamName"] = o.RemoteTeamName
	toSerialize["Successful"] = o.Successful
	toSerialize["Deleting"] = o.Deleting
	return toSerialize, nil
}

func (o *ArtifactsOpenApiRemoteTeamData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"SyncMessage",
		"RemoteTeamUrl",
		"UserName",
		"SyncStatus",
		"Id",
		"RemoteRepos",
		"RemoteTeamName",
		"Successful",
		"Deleting",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArtifactsOpenApiRemoteTeamData := _ArtifactsOpenApiRemoteTeamData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArtifactsOpenApiRemoteTeamData)

	if err != nil {
		return err
	}

	*o = ArtifactsOpenApiRemoteTeamData(varArtifactsOpenApiRemoteTeamData)

	return err
}

type NullableArtifactsOpenApiRemoteTeamData struct {
	value *ArtifactsOpenApiRemoteTeamData
	isSet bool
}

func (v NullableArtifactsOpenApiRemoteTeamData) Get() *ArtifactsOpenApiRemoteTeamData {
	return v.value
}

func (v *NullableArtifactsOpenApiRemoteTeamData) Set(val *ArtifactsOpenApiRemoteTeamData) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactsOpenApiRemoteTeamData) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactsOpenApiRemoteTeamData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactsOpenApiRemoteTeamData(val *ArtifactsOpenApiRemoteTeamData) *NullableArtifactsOpenApiRemoteTeamData {
	return &NullableArtifactsOpenApiRemoteTeamData{value: val, isSet: true}
}

func (v NullableArtifactsOpenApiRemoteTeamData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactsOpenApiRemoteTeamData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


