/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DeleteProjectLabelRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DeleteProjectLabelRequest{}

// DeleteProjectLabelRequest struct for DeleteProjectLabelRequest
type DeleteProjectLabelRequest struct {
	// 项目ID
	ProjectId int64 `json:"ProjectId"`
	// 标签Id
	LabelId int64 `json:"LabelId"`
}

type _DeleteProjectLabelRequest DeleteProjectLabelRequest

// NewDeleteProjectLabelRequest instantiates a new DeleteProjectLabelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteProjectLabelRequest(projectId int64, labelId int64) *DeleteProjectLabelRequest {
	this := DeleteProjectLabelRequest{}
	this.ProjectId = projectId
	this.LabelId = labelId
	return &this
}

// NewDeleteProjectLabelRequestWithDefaults instantiates a new DeleteProjectLabelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteProjectLabelRequestWithDefaults() *DeleteProjectLabelRequest {
	this := DeleteProjectLabelRequest{}
	var projectId int64 = 0
	this.ProjectId = projectId
	var labelId int64 = 0
	this.LabelId = labelId
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *DeleteProjectLabelRequest) GetProjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DeleteProjectLabelRequest) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DeleteProjectLabelRequest) SetProjectId(v int64) {
	o.ProjectId = v
}

// GetLabelId returns the LabelId field value
func (o *DeleteProjectLabelRequest) GetLabelId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LabelId
}

// GetLabelIdOk returns a tuple with the LabelId field value
// and a boolean to check if the value has been set.
func (o *DeleteProjectLabelRequest) GetLabelIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelId, true
}

// SetLabelId sets field value
func (o *DeleteProjectLabelRequest) SetLabelId(v int64) {
	o.LabelId = v
}

func (o DeleteProjectLabelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteProjectLabelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ProjectId"] = o.ProjectId
	toSerialize["LabelId"] = o.LabelId
	return toSerialize, nil
}

func (o *DeleteProjectLabelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ProjectId",
		"LabelId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteProjectLabelRequest := _DeleteProjectLabelRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteProjectLabelRequest)

	if err != nil {
		return err
	}

	*o = DeleteProjectLabelRequest(varDeleteProjectLabelRequest)

	return err
}

type NullableDeleteProjectLabelRequest struct {
	value *DeleteProjectLabelRequest
	isSet bool
}

func (v NullableDeleteProjectLabelRequest) Get() *DeleteProjectLabelRequest {
	return v.value
}

func (v *NullableDeleteProjectLabelRequest) Set(val *DeleteProjectLabelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteProjectLabelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteProjectLabelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteProjectLabelRequest(val *DeleteProjectLabelRequest) *NullableDeleteProjectLabelRequest {
	return &NullableDeleteProjectLabelRequest{value: val, isSet: true}
}

func (v NullableDeleteProjectLabelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteProjectLabelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


