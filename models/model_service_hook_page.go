/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ServiceHookPage type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ServiceHookPage{}

// ServiceHookPage Service Hook 分页数据
type ServiceHookPage struct {
	// 分页页码
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 分页大小
	PageSize *int64 `json:"PageSize,omitempty"`
	// Service Hook 列表
	ServiceHook []ServiceHook `json:"ServiceHook,omitempty"`
	// 总记录数
	TotalCount *int64 `json:"TotalCount,omitempty"`
}

// NewServiceHookPage instantiates a new ServiceHookPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceHookPage() *ServiceHookPage {
	this := ServiceHookPage{}
	return &this
}

// NewServiceHookPageWithDefaults instantiates a new ServiceHookPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceHookPageWithDefaults() *ServiceHookPage {
	this := ServiceHookPage{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *ServiceHookPage) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceHookPage) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *ServiceHookPage) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *ServiceHookPage) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ServiceHookPage) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceHookPage) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ServiceHookPage) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *ServiceHookPage) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetServiceHook returns the ServiceHook field value if set, zero value otherwise.
func (o *ServiceHookPage) GetServiceHook() []ServiceHook {
	if o == nil || utils.IsNil(o.ServiceHook) {
		var ret []ServiceHook
		return ret
	}
	return o.ServiceHook
}

// GetServiceHookOk returns a tuple with the ServiceHook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceHookPage) GetServiceHookOk() ([]ServiceHook, bool) {
	if o == nil || utils.IsNil(o.ServiceHook) {
		return nil, false
	}
	return o.ServiceHook, true
}

// HasServiceHook returns a boolean if a field has been set.
func (o *ServiceHookPage) HasServiceHook() bool {
	if o != nil && !utils.IsNil(o.ServiceHook) {
		return true
	}

	return false
}

// SetServiceHook gets a reference to the given []ServiceHook and assigns it to the ServiceHook field.
func (o *ServiceHookPage) SetServiceHook(v []ServiceHook) {
	o.ServiceHook = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ServiceHookPage) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceHookPage) GetTotalCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ServiceHookPage) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *ServiceHookPage) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o ServiceHookPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceHookPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.ServiceHook) {
		toSerialize["ServiceHook"] = o.ServiceHook
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableServiceHookPage struct {
	value *ServiceHookPage
	isSet bool
}

func (v NullableServiceHookPage) Get() *ServiceHookPage {
	return v.value
}

func (v *NullableServiceHookPage) Set(val *ServiceHookPage) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceHookPage) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceHookPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceHookPage(val *ServiceHookPage) *NullableServiceHookPage {
	return &NullableServiceHookPage{value: val, isSet: true}
}

func (v NullableServiceHookPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceHookPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


