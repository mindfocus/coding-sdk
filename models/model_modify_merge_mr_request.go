/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ModifyMergeMRRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ModifyMergeMRRequest{}

// ModifyMergeMRRequest struct for ModifyMergeMRRequest
type ModifyMergeMRRequest struct {
	// 仓库id
	DepotId int64 `json:"DepotId"`
	// 仓库路径，DepotId与DepotPath二选一即可
	DepotPath *string `json:"DepotPath,omitempty"`
	// 是否删除源分支
	IsDelSourceBranch bool `json:"IsDelSourceBranch"`
	// 是否 Fast Forward 模式
	IsFastForward bool `json:"IsFastForward"`
	// 合并请求id
	MergeId int64 `json:"MergeId"`
	// 合并信息
	Message string `json:"Message"`
	// 是否需要对mr进行 Squash
	Squash bool `json:"Squash"`
}

type _ModifyMergeMRRequest ModifyMergeMRRequest

// NewModifyMergeMRRequest instantiates a new ModifyMergeMRRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyMergeMRRequest(depotId int64, isDelSourceBranch bool, isFastForward bool, mergeId int64, message string, squash bool) *ModifyMergeMRRequest {
	this := ModifyMergeMRRequest{}
	this.DepotId = depotId
	this.IsDelSourceBranch = isDelSourceBranch
	this.IsFastForward = isFastForward
	this.MergeId = mergeId
	this.Message = message
	this.Squash = squash
	return &this
}

// NewModifyMergeMRRequestWithDefaults instantiates a new ModifyMergeMRRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyMergeMRRequestWithDefaults() *ModifyMergeMRRequest {
	this := ModifyMergeMRRequest{}
	return &this
}

// GetDepotId returns the DepotId field value
func (o *ModifyMergeMRRequest) GetDepotId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DepotId
}

// GetDepotIdOk returns a tuple with the DepotId field value
// and a boolean to check if the value has been set.
func (o *ModifyMergeMRRequest) GetDepotIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotId, true
}

// SetDepotId sets field value
func (o *ModifyMergeMRRequest) SetDepotId(v int64) {
	o.DepotId = v
}

// GetDepotPath returns the DepotPath field value if set, zero value otherwise.
func (o *ModifyMergeMRRequest) GetDepotPath() string {
	if o == nil || utils.IsNil(o.DepotPath) {
		var ret string
		return ret
	}
	return *o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyMergeMRRequest) GetDepotPathOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DepotPath) {
		return nil, false
	}
	return o.DepotPath, true
}

// HasDepotPath returns a boolean if a field has been set.
func (o *ModifyMergeMRRequest) HasDepotPath() bool {
	if o != nil && !utils.IsNil(o.DepotPath) {
		return true
	}

	return false
}

// SetDepotPath gets a reference to the given string and assigns it to the DepotPath field.
func (o *ModifyMergeMRRequest) SetDepotPath(v string) {
	o.DepotPath = &v
}

// GetIsDelSourceBranch returns the IsDelSourceBranch field value
func (o *ModifyMergeMRRequest) GetIsDelSourceBranch() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDelSourceBranch
}

// GetIsDelSourceBranchOk returns a tuple with the IsDelSourceBranch field value
// and a boolean to check if the value has been set.
func (o *ModifyMergeMRRequest) GetIsDelSourceBranchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDelSourceBranch, true
}

// SetIsDelSourceBranch sets field value
func (o *ModifyMergeMRRequest) SetIsDelSourceBranch(v bool) {
	o.IsDelSourceBranch = v
}

// GetIsFastForward returns the IsFastForward field value
func (o *ModifyMergeMRRequest) GetIsFastForward() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFastForward
}

// GetIsFastForwardOk returns a tuple with the IsFastForward field value
// and a boolean to check if the value has been set.
func (o *ModifyMergeMRRequest) GetIsFastForwardOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFastForward, true
}

// SetIsFastForward sets field value
func (o *ModifyMergeMRRequest) SetIsFastForward(v bool) {
	o.IsFastForward = v
}

// GetMergeId returns the MergeId field value
func (o *ModifyMergeMRRequest) GetMergeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MergeId
}

// GetMergeIdOk returns a tuple with the MergeId field value
// and a boolean to check if the value has been set.
func (o *ModifyMergeMRRequest) GetMergeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MergeId, true
}

// SetMergeId sets field value
func (o *ModifyMergeMRRequest) SetMergeId(v int64) {
	o.MergeId = v
}

// GetMessage returns the Message field value
func (o *ModifyMergeMRRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ModifyMergeMRRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ModifyMergeMRRequest) SetMessage(v string) {
	o.Message = v
}

// GetSquash returns the Squash field value
func (o *ModifyMergeMRRequest) GetSquash() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Squash
}

// GetSquashOk returns a tuple with the Squash field value
// and a boolean to check if the value has been set.
func (o *ModifyMergeMRRequest) GetSquashOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Squash, true
}

// SetSquash sets field value
func (o *ModifyMergeMRRequest) SetSquash(v bool) {
	o.Squash = v
}

func (o ModifyMergeMRRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyMergeMRRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotId"] = o.DepotId
	if !utils.IsNil(o.DepotPath) {
		toSerialize["DepotPath"] = o.DepotPath
	}
	toSerialize["IsDelSourceBranch"] = o.IsDelSourceBranch
	toSerialize["IsFastForward"] = o.IsFastForward
	toSerialize["MergeId"] = o.MergeId
	toSerialize["Message"] = o.Message
	toSerialize["Squash"] = o.Squash
	return toSerialize, nil
}

func (o *ModifyMergeMRRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotId",
		"IsDelSourceBranch",
		"IsFastForward",
		"MergeId",
		"Message",
		"Squash",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyMergeMRRequest := _ModifyMergeMRRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyMergeMRRequest)

	if err != nil {
		return err
	}

	*o = ModifyMergeMRRequest(varModifyMergeMRRequest)

	return err
}

type NullableModifyMergeMRRequest struct {
	value *ModifyMergeMRRequest
	isSet bool
}

func (v NullableModifyMergeMRRequest) Get() *ModifyMergeMRRequest {
	return v.value
}

func (v *NullableModifyMergeMRRequest) Set(val *ModifyMergeMRRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyMergeMRRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyMergeMRRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyMergeMRRequest(val *ModifyMergeMRRequest) *NullableModifyMergeMRRequest {
	return &NullableModifyMergeMRRequest{value: val, isSet: true}
}

func (v NullableModifyMergeMRRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyMergeMRRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


