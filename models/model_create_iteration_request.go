/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateIterationRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateIterationRequest{}

// CreateIterationRequest struct for CreateIterationRequest
type CreateIterationRequest struct {
	// 处理人 ID
	Assignee *int32 `json:"Assignee,omitempty"`
	// 结束时间，格式：2020-01-01
	EndAt map[string]interface{} `json:"EndAt,omitempty"`
	// 目标
	Goal *string `json:"Goal,omitempty"`
	// 标题
	Name string `json:"Name"`
	// 项目名称
	ProjectName string `json:"ProjectName"`
	// 开始时间，格式：2020-01-01
	StartAt map[string]interface{} `json:"StartAt,omitempty"`
}

type _CreateIterationRequest CreateIterationRequest

// NewCreateIterationRequest instantiates a new CreateIterationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIterationRequest(name string, projectName string) *CreateIterationRequest {
	this := CreateIterationRequest{}
	this.Name = name
	this.ProjectName = projectName
	return &this
}

// NewCreateIterationRequestWithDefaults instantiates a new CreateIterationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIterationRequestWithDefaults() *CreateIterationRequest {
	this := CreateIterationRequest{}
	return &this
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *CreateIterationRequest) GetAssignee() int32 {
	if o == nil || utils.IsNil(o.Assignee) {
		var ret int32
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIterationRequest) GetAssigneeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *CreateIterationRequest) HasAssignee() bool {
	if o != nil && !utils.IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given int32 and assigns it to the Assignee field.
func (o *CreateIterationRequest) SetAssignee(v int32) {
	o.Assignee = &v
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *CreateIterationRequest) GetEndAt() map[string]interface{} {
	if o == nil || utils.IsNil(o.EndAt) {
		var ret map[string]interface{}
		return ret
	}
	return o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIterationRequest) GetEndAtOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.EndAt) {
		return map[string]interface{}{}, false
	}
	return o.EndAt, true
}

// HasEndAt returns a boolean if a field has been set.
func (o *CreateIterationRequest) HasEndAt() bool {
	if o != nil && !utils.IsNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given map[string]interface{} and assigns it to the EndAt field.
func (o *CreateIterationRequest) SetEndAt(v map[string]interface{}) {
	o.EndAt = v
}

// GetGoal returns the Goal field value if set, zero value otherwise.
func (o *CreateIterationRequest) GetGoal() string {
	if o == nil || utils.IsNil(o.Goal) {
		var ret string
		return ret
	}
	return *o.Goal
}

// GetGoalOk returns a tuple with the Goal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIterationRequest) GetGoalOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Goal) {
		return nil, false
	}
	return o.Goal, true
}

// HasGoal returns a boolean if a field has been set.
func (o *CreateIterationRequest) HasGoal() bool {
	if o != nil && !utils.IsNil(o.Goal) {
		return true
	}

	return false
}

// SetGoal gets a reference to the given string and assigns it to the Goal field.
func (o *CreateIterationRequest) SetGoal(v string) {
	o.Goal = &v
}

// GetName returns the Name field value
func (o *CreateIterationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateIterationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateIterationRequest) SetName(v string) {
	o.Name = v
}

// GetProjectName returns the ProjectName field value
func (o *CreateIterationRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *CreateIterationRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *CreateIterationRequest) SetProjectName(v string) {
	o.ProjectName = v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *CreateIterationRequest) GetStartAt() map[string]interface{} {
	if o == nil || utils.IsNil(o.StartAt) {
		var ret map[string]interface{}
		return ret
	}
	return o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIterationRequest) GetStartAtOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.StartAt) {
		return map[string]interface{}{}, false
	}
	return o.StartAt, true
}

// HasStartAt returns a boolean if a field has been set.
func (o *CreateIterationRequest) HasStartAt() bool {
	if o != nil && !utils.IsNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given map[string]interface{} and assigns it to the StartAt field.
func (o *CreateIterationRequest) SetStartAt(v map[string]interface{}) {
	o.StartAt = v
}

func (o CreateIterationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIterationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Assignee) {
		toSerialize["Assignee"] = o.Assignee
	}
	if !utils.IsNil(o.EndAt) {
		toSerialize["EndAt"] = o.EndAt
	}
	if !utils.IsNil(o.Goal) {
		toSerialize["Goal"] = o.Goal
	}
	toSerialize["Name"] = o.Name
	toSerialize["ProjectName"] = o.ProjectName
	if !utils.IsNil(o.StartAt) {
		toSerialize["StartAt"] = o.StartAt
	}
	return toSerialize, nil
}

func (o *CreateIterationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Name",
		"ProjectName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIterationRequest := _CreateIterationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIterationRequest)

	if err != nil {
		return err
	}

	*o = CreateIterationRequest(varCreateIterationRequest)

	return err
}

type NullableCreateIterationRequest struct {
	value *CreateIterationRequest
	isSet bool
}

func (v NullableCreateIterationRequest) Get() *CreateIterationRequest {
	return v.value
}

func (v *NullableCreateIterationRequest) Set(val *CreateIterationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIterationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIterationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIterationRequest(val *CreateIterationRequest) *NullableCreateIterationRequest {
	return &NullableCreateIterationRequest{value: val, isSet: true}
}

func (v NullableCreateIterationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIterationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


