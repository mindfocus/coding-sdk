/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeCodingCIBuildStatisticsResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeCodingCIBuildStatisticsResponseData{}

// DescribeCodingCIBuildStatisticsResponseData 构建统计数据结构
type DescribeCodingCIBuildStatisticsResponseData struct {
	// 区间数据数组
	PointList []int32 `json:"PointList,omitempty"`
}

// NewDescribeCodingCIBuildStatisticsResponseData instantiates a new DescribeCodingCIBuildStatisticsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCodingCIBuildStatisticsResponseData() *DescribeCodingCIBuildStatisticsResponseData {
	this := DescribeCodingCIBuildStatisticsResponseData{}
	return &this
}

// NewDescribeCodingCIBuildStatisticsResponseDataWithDefaults instantiates a new DescribeCodingCIBuildStatisticsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCodingCIBuildStatisticsResponseDataWithDefaults() *DescribeCodingCIBuildStatisticsResponseData {
	this := DescribeCodingCIBuildStatisticsResponseData{}
	return &this
}

// GetPointList returns the PointList field value if set, zero value otherwise.
func (o *DescribeCodingCIBuildStatisticsResponseData) GetPointList() []int32 {
	if o == nil || utils.IsNil(o.PointList) {
		var ret []int32
		return ret
	}
	return o.PointList
}

// GetPointListOk returns a tuple with the PointList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCodingCIBuildStatisticsResponseData) GetPointListOk() ([]int32, bool) {
	if o == nil || utils.IsNil(o.PointList) {
		return nil, false
	}
	return o.PointList, true
}

// HasPointList returns a boolean if a field has been set.
func (o *DescribeCodingCIBuildStatisticsResponseData) HasPointList() bool {
	if o != nil && !utils.IsNil(o.PointList) {
		return true
	}

	return false
}

// SetPointList gets a reference to the given []int32 and assigns it to the PointList field.
func (o *DescribeCodingCIBuildStatisticsResponseData) SetPointList(v []int32) {
	o.PointList = v
}

func (o DescribeCodingCIBuildStatisticsResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCodingCIBuildStatisticsResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PointList) {
		toSerialize["PointList"] = o.PointList
	}
	return toSerialize, nil
}

type NullableDescribeCodingCIBuildStatisticsResponseData struct {
	value *DescribeCodingCIBuildStatisticsResponseData
	isSet bool
}

func (v NullableDescribeCodingCIBuildStatisticsResponseData) Get() *DescribeCodingCIBuildStatisticsResponseData {
	return v.value
}

func (v *NullableDescribeCodingCIBuildStatisticsResponseData) Set(val *DescribeCodingCIBuildStatisticsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCodingCIBuildStatisticsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCodingCIBuildStatisticsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCodingCIBuildStatisticsResponseData(val *DescribeCodingCIBuildStatisticsResponseData) *NullableDescribeCodingCIBuildStatisticsResponseData {
	return &NullableDescribeCodingCIBuildStatisticsResponseData{value: val, isSet: true}
}

func (v NullableDescribeCodingCIBuildStatisticsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCodingCIBuildStatisticsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


