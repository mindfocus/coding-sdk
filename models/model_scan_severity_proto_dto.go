/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ScanSeverityProtoDTO type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ScanSeverityProtoDTO{}

// ScanSeverityProtoDTO 扫描门禁信息
type ScanSeverityProtoDTO struct {
	// 创建时间
	CreatedTimestamp *int64 `json:"CreatedTimestamp,omitempty"`
	// 创建人
	Creator *string `json:"Creator,omitempty"`
	// 启用错误信息阈值
	EnableErrorThreshold *bool `json:"EnableErrorThreshold,omitempty"`
	// 启用致命信息阈值
	EnableFatalThreshold *bool `json:"EnableFatalThreshold,omitempty"`
	// 启用提示信息阈值
	EnableInfoThreshold *bool `json:"EnableInfoThreshold,omitempty"`
	// 启用警告信息阈值
	EnableWarningThreshold *bool `json:"EnableWarningThreshold,omitempty"`
	// 错误问题
	Error *int64 `json:"Error,omitempty"`
	// 错误信息阈值
	ErrorThreshold *int32 `json:"ErrorThreshold,omitempty"`
	// 致命问题
	Fatal *int64 `json:"Fatal,omitempty"`
	// 致命信息阈值
	FatalThreshold *int64 `json:"FatalThreshold,omitempty"`
	// 全局开关
	GlobalSwitch *bool `json:"GlobalSwitch,omitempty"`
	// 增量扫描
	Increment *bool `json:"Increment,omitempty"`
	// 提示问题
	Info *int64 `json:"Info,omitempty"`
	// 提示信息阈值
	InfoThreshold *int64 `json:"InfoThreshold,omitempty"`
	// 完成状态
	Status *string `json:"Status,omitempty"`
	// 扫描状态
	StatusCheck *string `json:"StatusCheck,omitempty"`
	// 警告问题
	Warning *int64 `json:"Warning,omitempty"`
	// 警告信息阈值
	WarningThreshold *int64 `json:"WarningThreshold,omitempty"`
}

// NewScanSeverityProtoDTO instantiates a new ScanSeverityProtoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScanSeverityProtoDTO() *ScanSeverityProtoDTO {
	this := ScanSeverityProtoDTO{}
	var creator string = ""
	this.Creator = &creator
	var enableErrorThreshold bool = false
	this.EnableErrorThreshold = &enableErrorThreshold
	var enableFatalThreshold bool = false
	this.EnableFatalThreshold = &enableFatalThreshold
	var enableInfoThreshold bool = false
	this.EnableInfoThreshold = &enableInfoThreshold
	var enableWarningThreshold bool = false
	this.EnableWarningThreshold = &enableWarningThreshold
	var globalSwitch bool = false
	this.GlobalSwitch = &globalSwitch
	var increment bool = false
	this.Increment = &increment
	var status string = ""
	this.Status = &status
	var statusCheck string = ""
	this.StatusCheck = &statusCheck
	return &this
}

// NewScanSeverityProtoDTOWithDefaults instantiates a new ScanSeverityProtoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanSeverityProtoDTOWithDefaults() *ScanSeverityProtoDTO {
	this := ScanSeverityProtoDTO{}
	var creator string = ""
	this.Creator = &creator
	var enableErrorThreshold bool = false
	this.EnableErrorThreshold = &enableErrorThreshold
	var enableFatalThreshold bool = false
	this.EnableFatalThreshold = &enableFatalThreshold
	var enableInfoThreshold bool = false
	this.EnableInfoThreshold = &enableInfoThreshold
	var enableWarningThreshold bool = false
	this.EnableWarningThreshold = &enableWarningThreshold
	var globalSwitch bool = false
	this.GlobalSwitch = &globalSwitch
	var increment bool = false
	this.Increment = &increment
	var status string = ""
	this.Status = &status
	var statusCheck string = ""
	this.StatusCheck = &statusCheck
	return &this
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetCreatedTimestamp() int64 {
	if o == nil || utils.IsNil(o.CreatedTimestamp) {
		var ret int64
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetCreatedTimestampOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasCreatedTimestamp() bool {
	if o != nil && !utils.IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int64 and assigns it to the CreatedTimestamp field.
func (o *ScanSeverityProtoDTO) SetCreatedTimestamp(v int64) {
	o.CreatedTimestamp = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetCreator() string {
	if o == nil || utils.IsNil(o.Creator) {
		var ret string
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetCreatorOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasCreator() bool {
	if o != nil && !utils.IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given string and assigns it to the Creator field.
func (o *ScanSeverityProtoDTO) SetCreator(v string) {
	o.Creator = &v
}

// GetEnableErrorThreshold returns the EnableErrorThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetEnableErrorThreshold() bool {
	if o == nil || utils.IsNil(o.EnableErrorThreshold) {
		var ret bool
		return ret
	}
	return *o.EnableErrorThreshold
}

// GetEnableErrorThresholdOk returns a tuple with the EnableErrorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetEnableErrorThresholdOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.EnableErrorThreshold) {
		return nil, false
	}
	return o.EnableErrorThreshold, true
}

// HasEnableErrorThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasEnableErrorThreshold() bool {
	if o != nil && !utils.IsNil(o.EnableErrorThreshold) {
		return true
	}

	return false
}

// SetEnableErrorThreshold gets a reference to the given bool and assigns it to the EnableErrorThreshold field.
func (o *ScanSeverityProtoDTO) SetEnableErrorThreshold(v bool) {
	o.EnableErrorThreshold = &v
}

// GetEnableFatalThreshold returns the EnableFatalThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetEnableFatalThreshold() bool {
	if o == nil || utils.IsNil(o.EnableFatalThreshold) {
		var ret bool
		return ret
	}
	return *o.EnableFatalThreshold
}

// GetEnableFatalThresholdOk returns a tuple with the EnableFatalThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetEnableFatalThresholdOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.EnableFatalThreshold) {
		return nil, false
	}
	return o.EnableFatalThreshold, true
}

// HasEnableFatalThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasEnableFatalThreshold() bool {
	if o != nil && !utils.IsNil(o.EnableFatalThreshold) {
		return true
	}

	return false
}

// SetEnableFatalThreshold gets a reference to the given bool and assigns it to the EnableFatalThreshold field.
func (o *ScanSeverityProtoDTO) SetEnableFatalThreshold(v bool) {
	o.EnableFatalThreshold = &v
}

// GetEnableInfoThreshold returns the EnableInfoThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetEnableInfoThreshold() bool {
	if o == nil || utils.IsNil(o.EnableInfoThreshold) {
		var ret bool
		return ret
	}
	return *o.EnableInfoThreshold
}

// GetEnableInfoThresholdOk returns a tuple with the EnableInfoThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetEnableInfoThresholdOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.EnableInfoThreshold) {
		return nil, false
	}
	return o.EnableInfoThreshold, true
}

// HasEnableInfoThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasEnableInfoThreshold() bool {
	if o != nil && !utils.IsNil(o.EnableInfoThreshold) {
		return true
	}

	return false
}

// SetEnableInfoThreshold gets a reference to the given bool and assigns it to the EnableInfoThreshold field.
func (o *ScanSeverityProtoDTO) SetEnableInfoThreshold(v bool) {
	o.EnableInfoThreshold = &v
}

// GetEnableWarningThreshold returns the EnableWarningThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetEnableWarningThreshold() bool {
	if o == nil || utils.IsNil(o.EnableWarningThreshold) {
		var ret bool
		return ret
	}
	return *o.EnableWarningThreshold
}

// GetEnableWarningThresholdOk returns a tuple with the EnableWarningThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetEnableWarningThresholdOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.EnableWarningThreshold) {
		return nil, false
	}
	return o.EnableWarningThreshold, true
}

// HasEnableWarningThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasEnableWarningThreshold() bool {
	if o != nil && !utils.IsNil(o.EnableWarningThreshold) {
		return true
	}

	return false
}

// SetEnableWarningThreshold gets a reference to the given bool and assigns it to the EnableWarningThreshold field.
func (o *ScanSeverityProtoDTO) SetEnableWarningThreshold(v bool) {
	o.EnableWarningThreshold = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetError() int64 {
	if o == nil || utils.IsNil(o.Error) {
		var ret int64
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetErrorOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasError() bool {
	if o != nil && !utils.IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given int64 and assigns it to the Error field.
func (o *ScanSeverityProtoDTO) SetError(v int64) {
	o.Error = &v
}

// GetErrorThreshold returns the ErrorThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetErrorThreshold() int32 {
	if o == nil || utils.IsNil(o.ErrorThreshold) {
		var ret int32
		return ret
	}
	return *o.ErrorThreshold
}

// GetErrorThresholdOk returns a tuple with the ErrorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetErrorThresholdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ErrorThreshold) {
		return nil, false
	}
	return o.ErrorThreshold, true
}

// HasErrorThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasErrorThreshold() bool {
	if o != nil && !utils.IsNil(o.ErrorThreshold) {
		return true
	}

	return false
}

// SetErrorThreshold gets a reference to the given int32 and assigns it to the ErrorThreshold field.
func (o *ScanSeverityProtoDTO) SetErrorThreshold(v int32) {
	o.ErrorThreshold = &v
}

// GetFatal returns the Fatal field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetFatal() int64 {
	if o == nil || utils.IsNil(o.Fatal) {
		var ret int64
		return ret
	}
	return *o.Fatal
}

// GetFatalOk returns a tuple with the Fatal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetFatalOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Fatal) {
		return nil, false
	}
	return o.Fatal, true
}

// HasFatal returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasFatal() bool {
	if o != nil && !utils.IsNil(o.Fatal) {
		return true
	}

	return false
}

// SetFatal gets a reference to the given int64 and assigns it to the Fatal field.
func (o *ScanSeverityProtoDTO) SetFatal(v int64) {
	o.Fatal = &v
}

// GetFatalThreshold returns the FatalThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetFatalThreshold() int64 {
	if o == nil || utils.IsNil(o.FatalThreshold) {
		var ret int64
		return ret
	}
	return *o.FatalThreshold
}

// GetFatalThresholdOk returns a tuple with the FatalThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetFatalThresholdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.FatalThreshold) {
		return nil, false
	}
	return o.FatalThreshold, true
}

// HasFatalThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasFatalThreshold() bool {
	if o != nil && !utils.IsNil(o.FatalThreshold) {
		return true
	}

	return false
}

// SetFatalThreshold gets a reference to the given int64 and assigns it to the FatalThreshold field.
func (o *ScanSeverityProtoDTO) SetFatalThreshold(v int64) {
	o.FatalThreshold = &v
}

// GetGlobalSwitch returns the GlobalSwitch field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetGlobalSwitch() bool {
	if o == nil || utils.IsNil(o.GlobalSwitch) {
		var ret bool
		return ret
	}
	return *o.GlobalSwitch
}

// GetGlobalSwitchOk returns a tuple with the GlobalSwitch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetGlobalSwitchOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.GlobalSwitch) {
		return nil, false
	}
	return o.GlobalSwitch, true
}

// HasGlobalSwitch returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasGlobalSwitch() bool {
	if o != nil && !utils.IsNil(o.GlobalSwitch) {
		return true
	}

	return false
}

// SetGlobalSwitch gets a reference to the given bool and assigns it to the GlobalSwitch field.
func (o *ScanSeverityProtoDTO) SetGlobalSwitch(v bool) {
	o.GlobalSwitch = &v
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetIncrement() bool {
	if o == nil || utils.IsNil(o.Increment) {
		var ret bool
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetIncrementOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.Increment) {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasIncrement() bool {
	if o != nil && !utils.IsNil(o.Increment) {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given bool and assigns it to the Increment field.
func (o *ScanSeverityProtoDTO) SetIncrement(v bool) {
	o.Increment = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetInfo() int64 {
	if o == nil || utils.IsNil(o.Info) {
		var ret int64
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetInfoOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasInfo() bool {
	if o != nil && !utils.IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given int64 and assigns it to the Info field.
func (o *ScanSeverityProtoDTO) SetInfo(v int64) {
	o.Info = &v
}

// GetInfoThreshold returns the InfoThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetInfoThreshold() int64 {
	if o == nil || utils.IsNil(o.InfoThreshold) {
		var ret int64
		return ret
	}
	return *o.InfoThreshold
}

// GetInfoThresholdOk returns a tuple with the InfoThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetInfoThresholdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.InfoThreshold) {
		return nil, false
	}
	return o.InfoThreshold, true
}

// HasInfoThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasInfoThreshold() bool {
	if o != nil && !utils.IsNil(o.InfoThreshold) {
		return true
	}

	return false
}

// SetInfoThreshold gets a reference to the given int64 and assigns it to the InfoThreshold field.
func (o *ScanSeverityProtoDTO) SetInfoThreshold(v int64) {
	o.InfoThreshold = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ScanSeverityProtoDTO) SetStatus(v string) {
	o.Status = &v
}

// GetStatusCheck returns the StatusCheck field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetStatusCheck() string {
	if o == nil || utils.IsNil(o.StatusCheck) {
		var ret string
		return ret
	}
	return *o.StatusCheck
}

// GetStatusCheckOk returns a tuple with the StatusCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetStatusCheckOk() (*string, bool) {
	if o == nil || utils.IsNil(o.StatusCheck) {
		return nil, false
	}
	return o.StatusCheck, true
}

// HasStatusCheck returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasStatusCheck() bool {
	if o != nil && !utils.IsNil(o.StatusCheck) {
		return true
	}

	return false
}

// SetStatusCheck gets a reference to the given string and assigns it to the StatusCheck field.
func (o *ScanSeverityProtoDTO) SetStatusCheck(v string) {
	o.StatusCheck = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetWarning() int64 {
	if o == nil || utils.IsNil(o.Warning) {
		var ret int64
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetWarningOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Warning) {
		return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasWarning() bool {
	if o != nil && !utils.IsNil(o.Warning) {
		return true
	}

	return false
}

// SetWarning gets a reference to the given int64 and assigns it to the Warning field.
func (o *ScanSeverityProtoDTO) SetWarning(v int64) {
	o.Warning = &v
}

// GetWarningThreshold returns the WarningThreshold field value if set, zero value otherwise.
func (o *ScanSeverityProtoDTO) GetWarningThreshold() int64 {
	if o == nil || utils.IsNil(o.WarningThreshold) {
		var ret int64
		return ret
	}
	return *o.WarningThreshold
}

// GetWarningThresholdOk returns a tuple with the WarningThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanSeverityProtoDTO) GetWarningThresholdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.WarningThreshold) {
		return nil, false
	}
	return o.WarningThreshold, true
}

// HasWarningThreshold returns a boolean if a field has been set.
func (o *ScanSeverityProtoDTO) HasWarningThreshold() bool {
	if o != nil && !utils.IsNil(o.WarningThreshold) {
		return true
	}

	return false
}

// SetWarningThreshold gets a reference to the given int64 and assigns it to the WarningThreshold field.
func (o *ScanSeverityProtoDTO) SetWarningThreshold(v int64) {
	o.WarningThreshold = &v
}

func (o ScanSeverityProtoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScanSeverityProtoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CreatedTimestamp) {
		toSerialize["CreatedTimestamp"] = o.CreatedTimestamp
	}
	if !utils.IsNil(o.Creator) {
		toSerialize["Creator"] = o.Creator
	}
	if !utils.IsNil(o.EnableErrorThreshold) {
		toSerialize["EnableErrorThreshold"] = o.EnableErrorThreshold
	}
	if !utils.IsNil(o.EnableFatalThreshold) {
		toSerialize["EnableFatalThreshold"] = o.EnableFatalThreshold
	}
	if !utils.IsNil(o.EnableInfoThreshold) {
		toSerialize["EnableInfoThreshold"] = o.EnableInfoThreshold
	}
	if !utils.IsNil(o.EnableWarningThreshold) {
		toSerialize["EnableWarningThreshold"] = o.EnableWarningThreshold
	}
	if !utils.IsNil(o.Error) {
		toSerialize["Error"] = o.Error
	}
	if !utils.IsNil(o.ErrorThreshold) {
		toSerialize["ErrorThreshold"] = o.ErrorThreshold
	}
	if !utils.IsNil(o.Fatal) {
		toSerialize["Fatal"] = o.Fatal
	}
	if !utils.IsNil(o.FatalThreshold) {
		toSerialize["FatalThreshold"] = o.FatalThreshold
	}
	if !utils.IsNil(o.GlobalSwitch) {
		toSerialize["GlobalSwitch"] = o.GlobalSwitch
	}
	if !utils.IsNil(o.Increment) {
		toSerialize["Increment"] = o.Increment
	}
	if !utils.IsNil(o.Info) {
		toSerialize["Info"] = o.Info
	}
	if !utils.IsNil(o.InfoThreshold) {
		toSerialize["InfoThreshold"] = o.InfoThreshold
	}
	if !utils.IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !utils.IsNil(o.StatusCheck) {
		toSerialize["StatusCheck"] = o.StatusCheck
	}
	if !utils.IsNil(o.Warning) {
		toSerialize["Warning"] = o.Warning
	}
	if !utils.IsNil(o.WarningThreshold) {
		toSerialize["WarningThreshold"] = o.WarningThreshold
	}
	return toSerialize, nil
}

type NullableScanSeverityProtoDTO struct {
	value *ScanSeverityProtoDTO
	isSet bool
}

func (v NullableScanSeverityProtoDTO) Get() *ScanSeverityProtoDTO {
	return v.value
}

func (v *NullableScanSeverityProtoDTO) Set(val *ScanSeverityProtoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableScanSeverityProtoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableScanSeverityProtoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScanSeverityProtoDTO(val *ScanSeverityProtoDTO) *NullableScanSeverityProtoDTO {
	return &NullableScanSeverityProtoDTO{value: val, isSet: true}
}

func (v NullableScanSeverityProtoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScanSeverityProtoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


