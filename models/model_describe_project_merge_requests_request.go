/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeProjectMergeRequestsRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeProjectMergeRequestsRequest{}

// DescribeProjectMergeRequestsRequest struct for DescribeProjectMergeRequestsRequest
type DescribeProjectMergeRequestsRequest struct {
	// mr创建结束时间
	CreatedAtEndDate *string `json:"CreatedAtEndDate,omitempty"`
	// mr创建开始时间
	CreatedAtStartDate *string `json:"CreatedAtStartDate,omitempty"`
	// 合并请求创建者邮箱
	CreatorEmail *string `json:"CreatorEmail,omitempty"`
	// 合并请求创建者全局 key
	CreatorGlobalKey *string `json:"CreatorGlobalKey,omitempty"`
	// 是否正序排序 默认 false
	IsSortDirectionAsc *bool `json:"IsSortDirectionAsc,omitempty"`
	// 关键词
	KeyWord *string `json:"KeyWord,omitempty"`
	// 标签
	Label *string `json:"Label,omitempty"`
	// 合并请求合并者邮箱
	MergerEmail *string `json:"MergerEmail,omitempty"`
	// 合并请求合并者全局 key
	MergerGlobalKey *string `json:"MergerGlobalKey,omitempty"`
	// 页数 默认 1
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 每页条数 默认 10
	PageSize *int64 `json:"PageSize,omitempty"`
	// 项目 Id
	ProjectId int64 `json:"ProjectId"`
	// 合并请求评审者邮箱
	ReviewerEmail *string `json:"ReviewerEmail,omitempty"`
	// 合并请求评审者全局 key
	ReviewerGlobalKey *string `json:"ReviewerGlobalKey,omitempty"`
	// 排序 action_at：以更新时间排序  created_at：以创建时间排序
	Sort *string `json:"Sort,omitempty"`
	// 源分支
	SourceBranch *string `json:"SourceBranch,omitempty"`
	// 合并请求状态 open/close/all
	Status *string `json:"Status,omitempty"`
	// 欲合入分支
	TargetBranch *string `json:"TargetBranch,omitempty"`
	// mr更新结束时间
	UpdatedAtEndDate *string `json:"UpdatedAtEndDate,omitempty"`
	// mr更新开始时间
	UpdatedAtStartDate *string `json:"UpdatedAtStartDate,omitempty"`
}

type _DescribeProjectMergeRequestsRequest DescribeProjectMergeRequestsRequest

// NewDescribeProjectMergeRequestsRequest instantiates a new DescribeProjectMergeRequestsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeProjectMergeRequestsRequest(projectId int64) *DescribeProjectMergeRequestsRequest {
	this := DescribeProjectMergeRequestsRequest{}
	this.ProjectId = projectId
	return &this
}

// NewDescribeProjectMergeRequestsRequestWithDefaults instantiates a new DescribeProjectMergeRequestsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeProjectMergeRequestsRequestWithDefaults() *DescribeProjectMergeRequestsRequest {
	this := DescribeProjectMergeRequestsRequest{}
	return &this
}

// GetCreatedAtEndDate returns the CreatedAtEndDate field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetCreatedAtEndDate() string {
	if o == nil || utils.IsNil(o.CreatedAtEndDate) {
		var ret string
		return ret
	}
	return *o.CreatedAtEndDate
}

// GetCreatedAtEndDateOk returns a tuple with the CreatedAtEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetCreatedAtEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatedAtEndDate) {
		return nil, false
	}
	return o.CreatedAtEndDate, true
}

// HasCreatedAtEndDate returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasCreatedAtEndDate() bool {
	if o != nil && !utils.IsNil(o.CreatedAtEndDate) {
		return true
	}

	return false
}

// SetCreatedAtEndDate gets a reference to the given string and assigns it to the CreatedAtEndDate field.
func (o *DescribeProjectMergeRequestsRequest) SetCreatedAtEndDate(v string) {
	o.CreatedAtEndDate = &v
}

// GetCreatedAtStartDate returns the CreatedAtStartDate field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetCreatedAtStartDate() string {
	if o == nil || utils.IsNil(o.CreatedAtStartDate) {
		var ret string
		return ret
	}
	return *o.CreatedAtStartDate
}

// GetCreatedAtStartDateOk returns a tuple with the CreatedAtStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetCreatedAtStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatedAtStartDate) {
		return nil, false
	}
	return o.CreatedAtStartDate, true
}

// HasCreatedAtStartDate returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasCreatedAtStartDate() bool {
	if o != nil && !utils.IsNil(o.CreatedAtStartDate) {
		return true
	}

	return false
}

// SetCreatedAtStartDate gets a reference to the given string and assigns it to the CreatedAtStartDate field.
func (o *DescribeProjectMergeRequestsRequest) SetCreatedAtStartDate(v string) {
	o.CreatedAtStartDate = &v
}

// GetCreatorEmail returns the CreatorEmail field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetCreatorEmail() string {
	if o == nil || utils.IsNil(o.CreatorEmail) {
		var ret string
		return ret
	}
	return *o.CreatorEmail
}

// GetCreatorEmailOk returns a tuple with the CreatorEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetCreatorEmailOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatorEmail) {
		return nil, false
	}
	return o.CreatorEmail, true
}

// HasCreatorEmail returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasCreatorEmail() bool {
	if o != nil && !utils.IsNil(o.CreatorEmail) {
		return true
	}

	return false
}

// SetCreatorEmail gets a reference to the given string and assigns it to the CreatorEmail field.
func (o *DescribeProjectMergeRequestsRequest) SetCreatorEmail(v string) {
	o.CreatorEmail = &v
}

// GetCreatorGlobalKey returns the CreatorGlobalKey field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetCreatorGlobalKey() string {
	if o == nil || utils.IsNil(o.CreatorGlobalKey) {
		var ret string
		return ret
	}
	return *o.CreatorGlobalKey
}

// GetCreatorGlobalKeyOk returns a tuple with the CreatorGlobalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetCreatorGlobalKeyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatorGlobalKey) {
		return nil, false
	}
	return o.CreatorGlobalKey, true
}

// HasCreatorGlobalKey returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasCreatorGlobalKey() bool {
	if o != nil && !utils.IsNil(o.CreatorGlobalKey) {
		return true
	}

	return false
}

// SetCreatorGlobalKey gets a reference to the given string and assigns it to the CreatorGlobalKey field.
func (o *DescribeProjectMergeRequestsRequest) SetCreatorGlobalKey(v string) {
	o.CreatorGlobalKey = &v
}

// GetIsSortDirectionAsc returns the IsSortDirectionAsc field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetIsSortDirectionAsc() bool {
	if o == nil || utils.IsNil(o.IsSortDirectionAsc) {
		var ret bool
		return ret
	}
	return *o.IsSortDirectionAsc
}

// GetIsSortDirectionAscOk returns a tuple with the IsSortDirectionAsc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetIsSortDirectionAscOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.IsSortDirectionAsc) {
		return nil, false
	}
	return o.IsSortDirectionAsc, true
}

// HasIsSortDirectionAsc returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasIsSortDirectionAsc() bool {
	if o != nil && !utils.IsNil(o.IsSortDirectionAsc) {
		return true
	}

	return false
}

// SetIsSortDirectionAsc gets a reference to the given bool and assigns it to the IsSortDirectionAsc field.
func (o *DescribeProjectMergeRequestsRequest) SetIsSortDirectionAsc(v bool) {
	o.IsSortDirectionAsc = &v
}

// GetKeyWord returns the KeyWord field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetKeyWord() string {
	if o == nil || utils.IsNil(o.KeyWord) {
		var ret string
		return ret
	}
	return *o.KeyWord
}

// GetKeyWordOk returns a tuple with the KeyWord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetKeyWordOk() (*string, bool) {
	if o == nil || utils.IsNil(o.KeyWord) {
		return nil, false
	}
	return o.KeyWord, true
}

// HasKeyWord returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasKeyWord() bool {
	if o != nil && !utils.IsNil(o.KeyWord) {
		return true
	}

	return false
}

// SetKeyWord gets a reference to the given string and assigns it to the KeyWord field.
func (o *DescribeProjectMergeRequestsRequest) SetKeyWord(v string) {
	o.KeyWord = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetLabel() string {
	if o == nil || utils.IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetLabelOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasLabel() bool {
	if o != nil && !utils.IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *DescribeProjectMergeRequestsRequest) SetLabel(v string) {
	o.Label = &v
}

// GetMergerEmail returns the MergerEmail field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetMergerEmail() string {
	if o == nil || utils.IsNil(o.MergerEmail) {
		var ret string
		return ret
	}
	return *o.MergerEmail
}

// GetMergerEmailOk returns a tuple with the MergerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetMergerEmailOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MergerEmail) {
		return nil, false
	}
	return o.MergerEmail, true
}

// HasMergerEmail returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasMergerEmail() bool {
	if o != nil && !utils.IsNil(o.MergerEmail) {
		return true
	}

	return false
}

// SetMergerEmail gets a reference to the given string and assigns it to the MergerEmail field.
func (o *DescribeProjectMergeRequestsRequest) SetMergerEmail(v string) {
	o.MergerEmail = &v
}

// GetMergerGlobalKey returns the MergerGlobalKey field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetMergerGlobalKey() string {
	if o == nil || utils.IsNil(o.MergerGlobalKey) {
		var ret string
		return ret
	}
	return *o.MergerGlobalKey
}

// GetMergerGlobalKeyOk returns a tuple with the MergerGlobalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetMergerGlobalKeyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MergerGlobalKey) {
		return nil, false
	}
	return o.MergerGlobalKey, true
}

// HasMergerGlobalKey returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasMergerGlobalKey() bool {
	if o != nil && !utils.IsNil(o.MergerGlobalKey) {
		return true
	}

	return false
}

// SetMergerGlobalKey gets a reference to the given string and assigns it to the MergerGlobalKey field.
func (o *DescribeProjectMergeRequestsRequest) SetMergerGlobalKey(v string) {
	o.MergerGlobalKey = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *DescribeProjectMergeRequestsRequest) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *DescribeProjectMergeRequestsRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetProjectId returns the ProjectId field value
func (o *DescribeProjectMergeRequestsRequest) GetProjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DescribeProjectMergeRequestsRequest) SetProjectId(v int64) {
	o.ProjectId = v
}

// GetReviewerEmail returns the ReviewerEmail field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetReviewerEmail() string {
	if o == nil || utils.IsNil(o.ReviewerEmail) {
		var ret string
		return ret
	}
	return *o.ReviewerEmail
}

// GetReviewerEmailOk returns a tuple with the ReviewerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetReviewerEmailOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ReviewerEmail) {
		return nil, false
	}
	return o.ReviewerEmail, true
}

// HasReviewerEmail returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasReviewerEmail() bool {
	if o != nil && !utils.IsNil(o.ReviewerEmail) {
		return true
	}

	return false
}

// SetReviewerEmail gets a reference to the given string and assigns it to the ReviewerEmail field.
func (o *DescribeProjectMergeRequestsRequest) SetReviewerEmail(v string) {
	o.ReviewerEmail = &v
}

// GetReviewerGlobalKey returns the ReviewerGlobalKey field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetReviewerGlobalKey() string {
	if o == nil || utils.IsNil(o.ReviewerGlobalKey) {
		var ret string
		return ret
	}
	return *o.ReviewerGlobalKey
}

// GetReviewerGlobalKeyOk returns a tuple with the ReviewerGlobalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetReviewerGlobalKeyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ReviewerGlobalKey) {
		return nil, false
	}
	return o.ReviewerGlobalKey, true
}

// HasReviewerGlobalKey returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasReviewerGlobalKey() bool {
	if o != nil && !utils.IsNil(o.ReviewerGlobalKey) {
		return true
	}

	return false
}

// SetReviewerGlobalKey gets a reference to the given string and assigns it to the ReviewerGlobalKey field.
func (o *DescribeProjectMergeRequestsRequest) SetReviewerGlobalKey(v string) {
	o.ReviewerGlobalKey = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetSort() string {
	if o == nil || utils.IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetSortOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasSort() bool {
	if o != nil && !utils.IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *DescribeProjectMergeRequestsRequest) SetSort(v string) {
	o.Sort = &v
}

// GetSourceBranch returns the SourceBranch field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetSourceBranch() string {
	if o == nil || utils.IsNil(o.SourceBranch) {
		var ret string
		return ret
	}
	return *o.SourceBranch
}

// GetSourceBranchOk returns a tuple with the SourceBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetSourceBranchOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SourceBranch) {
		return nil, false
	}
	return o.SourceBranch, true
}

// HasSourceBranch returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasSourceBranch() bool {
	if o != nil && !utils.IsNil(o.SourceBranch) {
		return true
	}

	return false
}

// SetSourceBranch gets a reference to the given string and assigns it to the SourceBranch field.
func (o *DescribeProjectMergeRequestsRequest) SetSourceBranch(v string) {
	o.SourceBranch = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DescribeProjectMergeRequestsRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTargetBranch returns the TargetBranch field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetTargetBranch() string {
	if o == nil || utils.IsNil(o.TargetBranch) {
		var ret string
		return ret
	}
	return *o.TargetBranch
}

// GetTargetBranchOk returns a tuple with the TargetBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetTargetBranchOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TargetBranch) {
		return nil, false
	}
	return o.TargetBranch, true
}

// HasTargetBranch returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasTargetBranch() bool {
	if o != nil && !utils.IsNil(o.TargetBranch) {
		return true
	}

	return false
}

// SetTargetBranch gets a reference to the given string and assigns it to the TargetBranch field.
func (o *DescribeProjectMergeRequestsRequest) SetTargetBranch(v string) {
	o.TargetBranch = &v
}

// GetUpdatedAtEndDate returns the UpdatedAtEndDate field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetUpdatedAtEndDate() string {
	if o == nil || utils.IsNil(o.UpdatedAtEndDate) {
		var ret string
		return ret
	}
	return *o.UpdatedAtEndDate
}

// GetUpdatedAtEndDateOk returns a tuple with the UpdatedAtEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetUpdatedAtEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.UpdatedAtEndDate) {
		return nil, false
	}
	return o.UpdatedAtEndDate, true
}

// HasUpdatedAtEndDate returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasUpdatedAtEndDate() bool {
	if o != nil && !utils.IsNil(o.UpdatedAtEndDate) {
		return true
	}

	return false
}

// SetUpdatedAtEndDate gets a reference to the given string and assigns it to the UpdatedAtEndDate field.
func (o *DescribeProjectMergeRequestsRequest) SetUpdatedAtEndDate(v string) {
	o.UpdatedAtEndDate = &v
}

// GetUpdatedAtStartDate returns the UpdatedAtStartDate field value if set, zero value otherwise.
func (o *DescribeProjectMergeRequestsRequest) GetUpdatedAtStartDate() string {
	if o == nil || utils.IsNil(o.UpdatedAtStartDate) {
		var ret string
		return ret
	}
	return *o.UpdatedAtStartDate
}

// GetUpdatedAtStartDateOk returns a tuple with the UpdatedAtStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMergeRequestsRequest) GetUpdatedAtStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.UpdatedAtStartDate) {
		return nil, false
	}
	return o.UpdatedAtStartDate, true
}

// HasUpdatedAtStartDate returns a boolean if a field has been set.
func (o *DescribeProjectMergeRequestsRequest) HasUpdatedAtStartDate() bool {
	if o != nil && !utils.IsNil(o.UpdatedAtStartDate) {
		return true
	}

	return false
}

// SetUpdatedAtStartDate gets a reference to the given string and assigns it to the UpdatedAtStartDate field.
func (o *DescribeProjectMergeRequestsRequest) SetUpdatedAtStartDate(v string) {
	o.UpdatedAtStartDate = &v
}

func (o DescribeProjectMergeRequestsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeProjectMergeRequestsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CreatedAtEndDate) {
		toSerialize["CreatedAtEndDate"] = o.CreatedAtEndDate
	}
	if !utils.IsNil(o.CreatedAtStartDate) {
		toSerialize["CreatedAtStartDate"] = o.CreatedAtStartDate
	}
	if !utils.IsNil(o.CreatorEmail) {
		toSerialize["CreatorEmail"] = o.CreatorEmail
	}
	if !utils.IsNil(o.CreatorGlobalKey) {
		toSerialize["CreatorGlobalKey"] = o.CreatorGlobalKey
	}
	if !utils.IsNil(o.IsSortDirectionAsc) {
		toSerialize["IsSortDirectionAsc"] = o.IsSortDirectionAsc
	}
	if !utils.IsNil(o.KeyWord) {
		toSerialize["KeyWord"] = o.KeyWord
	}
	if !utils.IsNil(o.Label) {
		toSerialize["Label"] = o.Label
	}
	if !utils.IsNil(o.MergerEmail) {
		toSerialize["MergerEmail"] = o.MergerEmail
	}
	if !utils.IsNil(o.MergerGlobalKey) {
		toSerialize["MergerGlobalKey"] = o.MergerGlobalKey
	}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	toSerialize["ProjectId"] = o.ProjectId
	if !utils.IsNil(o.ReviewerEmail) {
		toSerialize["ReviewerEmail"] = o.ReviewerEmail
	}
	if !utils.IsNil(o.ReviewerGlobalKey) {
		toSerialize["ReviewerGlobalKey"] = o.ReviewerGlobalKey
	}
	if !utils.IsNil(o.Sort) {
		toSerialize["Sort"] = o.Sort
	}
	if !utils.IsNil(o.SourceBranch) {
		toSerialize["SourceBranch"] = o.SourceBranch
	}
	if !utils.IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !utils.IsNil(o.TargetBranch) {
		toSerialize["TargetBranch"] = o.TargetBranch
	}
	if !utils.IsNil(o.UpdatedAtEndDate) {
		toSerialize["UpdatedAtEndDate"] = o.UpdatedAtEndDate
	}
	if !utils.IsNil(o.UpdatedAtStartDate) {
		toSerialize["UpdatedAtStartDate"] = o.UpdatedAtStartDate
	}
	return toSerialize, nil
}

func (o *DescribeProjectMergeRequestsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ProjectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeProjectMergeRequestsRequest := _DescribeProjectMergeRequestsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeProjectMergeRequestsRequest)

	if err != nil {
		return err
	}

	*o = DescribeProjectMergeRequestsRequest(varDescribeProjectMergeRequestsRequest)

	return err
}

type NullableDescribeProjectMergeRequestsRequest struct {
	value *DescribeProjectMergeRequestsRequest
	isSet bool
}

func (v NullableDescribeProjectMergeRequestsRequest) Get() *DescribeProjectMergeRequestsRequest {
	return v.value
}

func (v *NullableDescribeProjectMergeRequestsRequest) Set(val *DescribeProjectMergeRequestsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeProjectMergeRequestsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeProjectMergeRequestsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeProjectMergeRequestsRequest(val *DescribeProjectMergeRequestsRequest) *NullableDescribeProjectMergeRequestsRequest {
	return &NullableDescribeProjectMergeRequestsRequest{value: val, isSet: true}
}

func (v NullableDescribeProjectMergeRequestsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeProjectMergeRequestsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


