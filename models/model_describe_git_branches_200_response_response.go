/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeGitBranches200ResponseResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeGitBranches200ResponseResponse{}

// DescribeGitBranches200ResponseResponse 公共返回体
type DescribeGitBranches200ResponseResponse struct {
	// 分支详细信息
	Branches []GitBranchInfo `json:"Branches,omitempty"`
	// 分支数量
	TotalCount utils.NullableInt64 `json:"TotalCount,omitempty"`
	// 请求id
	RequestId *string `json:"RequestId,omitempty"`
}

// NewDescribeGitBranches200ResponseResponse instantiates a new DescribeGitBranches200ResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeGitBranches200ResponseResponse() *DescribeGitBranches200ResponseResponse {
	this := DescribeGitBranches200ResponseResponse{}
	var requestId string = "xxxxx"
	this.RequestId = &requestId
	return &this
}

// NewDescribeGitBranches200ResponseResponseWithDefaults instantiates a new DescribeGitBranches200ResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeGitBranches200ResponseResponseWithDefaults() *DescribeGitBranches200ResponseResponse {
	this := DescribeGitBranches200ResponseResponse{}
	var requestId string = "xxxxx"
	this.RequestId = &requestId
	return &this
}

// GetBranches returns the Branches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DescribeGitBranches200ResponseResponse) GetBranches() []GitBranchInfo {
	if o == nil {
		var ret []GitBranchInfo
		return ret
	}
	return o.Branches
}

// GetBranchesOk returns a tuple with the Branches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DescribeGitBranches200ResponseResponse) GetBranchesOk() ([]GitBranchInfo, bool) {
	if o == nil || utils.IsNil(o.Branches) {
		return nil, false
	}
	return o.Branches, true
}

// HasBranches returns a boolean if a field has been set.
func (o *DescribeGitBranches200ResponseResponse) HasBranches() bool {
	if o != nil && !utils.IsNil(o.Branches) {
		return true
	}

	return false
}

// SetBranches gets a reference to the given []GitBranchInfo and assigns it to the Branches field.
func (o *DescribeGitBranches200ResponseResponse) SetBranches(v []GitBranchInfo) {
	o.Branches = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DescribeGitBranches200ResponseResponse) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount.Get()) {
		var ret int64
		return ret
	}
	return *o.TotalCount.Get()
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DescribeGitBranches200ResponseResponse) GetTotalCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCount.Get(), o.TotalCount.IsSet()
}

// HasTotalCount returns a boolean if a field has been set.
func (o *DescribeGitBranches200ResponseResponse) HasTotalCount() bool {
	if o != nil && o.TotalCount.IsSet() {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given utils.NullableInt64 and assigns it to the TotalCount field.
func (o *DescribeGitBranches200ResponseResponse) SetTotalCount(v int64) {
	o.TotalCount.Set(&v)
}
// SetTotalCountNil sets the value for TotalCount to be an explicit nil
func (o *DescribeGitBranches200ResponseResponse) SetTotalCountNil() {
	o.TotalCount.Set(nil)
}

// UnsetTotalCount ensures that no value is present for TotalCount, not even an explicit nil
func (o *DescribeGitBranches200ResponseResponse) UnsetTotalCount() {
	o.TotalCount.Unset()
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *DescribeGitBranches200ResponseResponse) GetRequestId() string {
	if o == nil || utils.IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeGitBranches200ResponseResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *DescribeGitBranches200ResponseResponse) HasRequestId() bool {
	if o != nil && !utils.IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *DescribeGitBranches200ResponseResponse) SetRequestId(v string) {
	o.RequestId = &v
}

func (o DescribeGitBranches200ResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeGitBranches200ResponseResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Branches != nil {
		toSerialize["Branches"] = o.Branches
	}
	if o.TotalCount.IsSet() {
		toSerialize["TotalCount"] = o.TotalCount.Get()
	}
	if !utils.IsNil(o.RequestId) {
		toSerialize["RequestId"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableDescribeGitBranches200ResponseResponse struct {
	value *DescribeGitBranches200ResponseResponse
	isSet bool
}

func (v NullableDescribeGitBranches200ResponseResponse) Get() *DescribeGitBranches200ResponseResponse {
	return v.value
}

func (v *NullableDescribeGitBranches200ResponseResponse) Set(val *DescribeGitBranches200ResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeGitBranches200ResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeGitBranches200ResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeGitBranches200ResponseResponse(val *DescribeGitBranches200ResponseResponse) *NullableDescribeGitBranches200ResponseResponse {
	return &NullableDescribeGitBranches200ResponseResponse{value: val, isSet: true}
}

func (v NullableDescribeGitBranches200ResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeGitBranches200ResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


