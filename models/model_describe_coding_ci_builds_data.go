/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeCodingCIBuildsData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeCodingCIBuildsData{}

// DescribeCodingCIBuildsData 获取构建计划的构建列表
type DescribeCodingCIBuildsData struct {
	// 构建列表
	BuildList []CodingCIBuild `json:"BuildList,omitempty"`
	// 页码
	PageNumber *int32 `json:"PageNumber,omitempty"`
	// 每页多少条
	PageSize *int32 `json:"PageSize,omitempty"`
	// 总条数
	TotalCount *int32 `json:"TotalCount,omitempty"`
}

// NewDescribeCodingCIBuildsData instantiates a new DescribeCodingCIBuildsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCodingCIBuildsData() *DescribeCodingCIBuildsData {
	this := DescribeCodingCIBuildsData{}
	return &this
}

// NewDescribeCodingCIBuildsDataWithDefaults instantiates a new DescribeCodingCIBuildsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCodingCIBuildsDataWithDefaults() *DescribeCodingCIBuildsData {
	this := DescribeCodingCIBuildsData{}
	return &this
}

// GetBuildList returns the BuildList field value if set, zero value otherwise.
func (o *DescribeCodingCIBuildsData) GetBuildList() []CodingCIBuild {
	if o == nil || utils.IsNil(o.BuildList) {
		var ret []CodingCIBuild
		return ret
	}
	return o.BuildList
}

// GetBuildListOk returns a tuple with the BuildList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCodingCIBuildsData) GetBuildListOk() ([]CodingCIBuild, bool) {
	if o == nil || utils.IsNil(o.BuildList) {
		return nil, false
	}
	return o.BuildList, true
}

// HasBuildList returns a boolean if a field has been set.
func (o *DescribeCodingCIBuildsData) HasBuildList() bool {
	if o != nil && !utils.IsNil(o.BuildList) {
		return true
	}

	return false
}

// SetBuildList gets a reference to the given []CodingCIBuild and assigns it to the BuildList field.
func (o *DescribeCodingCIBuildsData) SetBuildList(v []CodingCIBuild) {
	o.BuildList = v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeCodingCIBuildsData) GetPageNumber() int32 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCodingCIBuildsData) GetPageNumberOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeCodingCIBuildsData) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *DescribeCodingCIBuildsData) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeCodingCIBuildsData) GetPageSize() int32 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCodingCIBuildsData) GetPageSizeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeCodingCIBuildsData) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *DescribeCodingCIBuildsData) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *DescribeCodingCIBuildsData) GetTotalCount() int32 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCodingCIBuildsData) GetTotalCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *DescribeCodingCIBuildsData) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *DescribeCodingCIBuildsData) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o DescribeCodingCIBuildsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCodingCIBuildsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.BuildList) {
		toSerialize["BuildList"] = o.BuildList
	}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableDescribeCodingCIBuildsData struct {
	value *DescribeCodingCIBuildsData
	isSet bool
}

func (v NullableDescribeCodingCIBuildsData) Get() *DescribeCodingCIBuildsData {
	return v.value
}

func (v *NullableDescribeCodingCIBuildsData) Set(val *DescribeCodingCIBuildsData) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCodingCIBuildsData) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCodingCIBuildsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCodingCIBuildsData(val *DescribeCodingCIBuildsData) *NullableDescribeCodingCIBuildsData {
	return &NullableDescribeCodingCIBuildsData{value: val, isSet: true}
}

func (v NullableDescribeCodingCIBuildsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCodingCIBuildsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


