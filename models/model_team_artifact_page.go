/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the TeamArtifactPage type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TeamArtifactPage{}

// TeamArtifactPage 团队制品列表分页实体
type TeamArtifactPage struct {
	// 当前页的版本列表
	InstanceSet []TeamArtifact `json:"InstanceSet,omitempty"`
	// 页码
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 每页展示数量
	PageSize *int64 `json:"PageSize,omitempty"`
	// 总数
	TotalCount *int64 `json:"TotalCount,omitempty"`
}

// NewTeamArtifactPage instantiates a new TeamArtifactPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamArtifactPage() *TeamArtifactPage {
	this := TeamArtifactPage{}
	return &this
}

// NewTeamArtifactPageWithDefaults instantiates a new TeamArtifactPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamArtifactPageWithDefaults() *TeamArtifactPage {
	this := TeamArtifactPage{}
	return &this
}

// GetInstanceSet returns the InstanceSet field value if set, zero value otherwise.
func (o *TeamArtifactPage) GetInstanceSet() []TeamArtifact {
	if o == nil || utils.IsNil(o.InstanceSet) {
		var ret []TeamArtifact
		return ret
	}
	return o.InstanceSet
}

// GetInstanceSetOk returns a tuple with the InstanceSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamArtifactPage) GetInstanceSetOk() ([]TeamArtifact, bool) {
	if o == nil || utils.IsNil(o.InstanceSet) {
		return nil, false
	}
	return o.InstanceSet, true
}

// HasInstanceSet returns a boolean if a field has been set.
func (o *TeamArtifactPage) HasInstanceSet() bool {
	if o != nil && !utils.IsNil(o.InstanceSet) {
		return true
	}

	return false
}

// SetInstanceSet gets a reference to the given []TeamArtifact and assigns it to the InstanceSet field.
func (o *TeamArtifactPage) SetInstanceSet(v []TeamArtifact) {
	o.InstanceSet = v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *TeamArtifactPage) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamArtifactPage) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *TeamArtifactPage) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *TeamArtifactPage) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *TeamArtifactPage) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamArtifactPage) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *TeamArtifactPage) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *TeamArtifactPage) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *TeamArtifactPage) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamArtifactPage) GetTotalCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *TeamArtifactPage) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *TeamArtifactPage) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o TeamArtifactPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamArtifactPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.InstanceSet) {
		toSerialize["InstanceSet"] = o.InstanceSet
	}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableTeamArtifactPage struct {
	value *TeamArtifactPage
	isSet bool
}

func (v NullableTeamArtifactPage) Get() *TeamArtifactPage {
	return v.value
}

func (v *NullableTeamArtifactPage) Set(val *TeamArtifactPage) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamArtifactPage) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamArtifactPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamArtifactPage(val *TeamArtifactPage) *NullableTeamArtifactPage {
	return &NullableTeamArtifactPage{value: val, isSet: true}
}

func (v NullableTeamArtifactPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamArtifactPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


