/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeTeamDepotsRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeTeamDepotsRequest{}

// DescribeTeamDepotsRequest struct for DescribeTeamDepotsRequest
type DescribeTeamDepotsRequest struct {
	// 默认填写 CODING
	DepotType string `json:"DepotType"`
}

type _DescribeTeamDepotsRequest DescribeTeamDepotsRequest

// NewDescribeTeamDepotsRequest instantiates a new DescribeTeamDepotsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeTeamDepotsRequest(depotType string) *DescribeTeamDepotsRequest {
	this := DescribeTeamDepotsRequest{}
	this.DepotType = depotType
	return &this
}

// NewDescribeTeamDepotsRequestWithDefaults instantiates a new DescribeTeamDepotsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeTeamDepotsRequestWithDefaults() *DescribeTeamDepotsRequest {
	this := DescribeTeamDepotsRequest{}
	return &this
}

// GetDepotType returns the DepotType field value
func (o *DescribeTeamDepotsRequest) GetDepotType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotType
}

// GetDepotTypeOk returns a tuple with the DepotType field value
// and a boolean to check if the value has been set.
func (o *DescribeTeamDepotsRequest) GetDepotTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotType, true
}

// SetDepotType sets field value
func (o *DescribeTeamDepotsRequest) SetDepotType(v string) {
	o.DepotType = v
}

func (o DescribeTeamDepotsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeTeamDepotsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotType"] = o.DepotType
	return toSerialize, nil
}

func (o *DescribeTeamDepotsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeTeamDepotsRequest := _DescribeTeamDepotsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeTeamDepotsRequest)

	if err != nil {
		return err
	}

	*o = DescribeTeamDepotsRequest(varDescribeTeamDepotsRequest)

	return err
}

type NullableDescribeTeamDepotsRequest struct {
	value *DescribeTeamDepotsRequest
	isSet bool
}

func (v NullableDescribeTeamDepotsRequest) Get() *DescribeTeamDepotsRequest {
	return v.value
}

func (v *NullableDescribeTeamDepotsRequest) Set(val *DescribeTeamDepotsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeTeamDepotsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeTeamDepotsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeTeamDepotsRequest(val *DescribeTeamDepotsRequest) *NullableDescribeTeamDepotsRequest {
	return &NullableDescribeTeamDepotsRequest{value: val, isSet: true}
}

func (v NullableDescribeTeamDepotsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeTeamDepotsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


