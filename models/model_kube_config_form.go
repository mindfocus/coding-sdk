/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the KubeConfigForm type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &KubeConfigForm{}

// KubeConfigForm KubeConfigForm 结构
type KubeConfigForm struct {
	// 指定访问集群 KubeConfig 文件的上下文
	ClusterContext string `json:"ClusterContext"`
	// 是否接受非认证证书（是：true；否：false）
	InsecureSkipTLSVerify bool `json:"InsecureSkipTLSVerify"`
	// 访问集群的 KubeConfig 文件（YAML 格式，Base64 编码），添加时必填，修改时可不填
	KubeConfig utils.NullableString `json:"KubeConfig,omitempty"`
	// 是否允许持续部署管理集群已有资源（是：false；否：true）
	OnlySpinnakerManaged bool `json:"OnlySpinnakerManaged"`
}

type _KubeConfigForm KubeConfigForm

// NewKubeConfigForm instantiates a new KubeConfigForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubeConfigForm(clusterContext string, insecureSkipTLSVerify bool, onlySpinnakerManaged bool) *KubeConfigForm {
	this := KubeConfigForm{}
	this.ClusterContext = clusterContext
	this.InsecureSkipTLSVerify = insecureSkipTLSVerify
	var kubeConfig string = ""
	this.KubeConfig = *utils.NewNullableString(&kubeConfig)
	this.OnlySpinnakerManaged = onlySpinnakerManaged
	return &this
}

// NewKubeConfigFormWithDefaults instantiates a new KubeConfigForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubeConfigFormWithDefaults() *KubeConfigForm {
	this := KubeConfigForm{}
	var clusterContext string = ""
	this.ClusterContext = clusterContext
	var insecureSkipTLSVerify bool = false
	this.InsecureSkipTLSVerify = insecureSkipTLSVerify
	var kubeConfig string = ""
	this.KubeConfig = *utils.NewNullableString(&kubeConfig)
	var onlySpinnakerManaged bool = false
	this.OnlySpinnakerManaged = onlySpinnakerManaged
	return &this
}

// GetClusterContext returns the ClusterContext field value
func (o *KubeConfigForm) GetClusterContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterContext
}

// GetClusterContextOk returns a tuple with the ClusterContext field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForm) GetClusterContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterContext, true
}

// SetClusterContext sets field value
func (o *KubeConfigForm) SetClusterContext(v string) {
	o.ClusterContext = v
}

// GetInsecureSkipTLSVerify returns the InsecureSkipTLSVerify field value
func (o *KubeConfigForm) GetInsecureSkipTLSVerify() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InsecureSkipTLSVerify
}

// GetInsecureSkipTLSVerifyOk returns a tuple with the InsecureSkipTLSVerify field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForm) GetInsecureSkipTLSVerifyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InsecureSkipTLSVerify, true
}

// SetInsecureSkipTLSVerify sets field value
func (o *KubeConfigForm) SetInsecureSkipTLSVerify(v bool) {
	o.InsecureSkipTLSVerify = v
}

// GetKubeConfig returns the KubeConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubeConfigForm) GetKubeConfig() string {
	if o == nil || utils.IsNil(o.KubeConfig.Get()) {
		var ret string
		return ret
	}
	return *o.KubeConfig.Get()
}

// GetKubeConfigOk returns a tuple with the KubeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubeConfigForm) GetKubeConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubeConfig.Get(), o.KubeConfig.IsSet()
}

// HasKubeConfig returns a boolean if a field has been set.
func (o *KubeConfigForm) HasKubeConfig() bool {
	if o != nil && o.KubeConfig.IsSet() {
		return true
	}

	return false
}

// SetKubeConfig gets a reference to the given utils.NullableString and assigns it to the KubeConfig field.
func (o *KubeConfigForm) SetKubeConfig(v string) {
	o.KubeConfig.Set(&v)
}
// SetKubeConfigNil sets the value for KubeConfig to be an explicit nil
func (o *KubeConfigForm) SetKubeConfigNil() {
	o.KubeConfig.Set(nil)
}

// UnsetKubeConfig ensures that no value is present for KubeConfig, not even an explicit nil
func (o *KubeConfigForm) UnsetKubeConfig() {
	o.KubeConfig.Unset()
}

// GetOnlySpinnakerManaged returns the OnlySpinnakerManaged field value
func (o *KubeConfigForm) GetOnlySpinnakerManaged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OnlySpinnakerManaged
}

// GetOnlySpinnakerManagedOk returns a tuple with the OnlySpinnakerManaged field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForm) GetOnlySpinnakerManagedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnlySpinnakerManaged, true
}

// SetOnlySpinnakerManaged sets field value
func (o *KubeConfigForm) SetOnlySpinnakerManaged(v bool) {
	o.OnlySpinnakerManaged = v
}

func (o KubeConfigForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubeConfigForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ClusterContext"] = o.ClusterContext
	toSerialize["InsecureSkipTLSVerify"] = o.InsecureSkipTLSVerify
	if o.KubeConfig.IsSet() {
		toSerialize["KubeConfig"] = o.KubeConfig.Get()
	}
	toSerialize["OnlySpinnakerManaged"] = o.OnlySpinnakerManaged
	return toSerialize, nil
}

func (o *KubeConfigForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ClusterContext",
		"InsecureSkipTLSVerify",
		"OnlySpinnakerManaged",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubeConfigForm := _KubeConfigForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubeConfigForm)

	if err != nil {
		return err
	}

	*o = KubeConfigForm(varKubeConfigForm)

	return err
}

type NullableKubeConfigForm struct {
	value *KubeConfigForm
	isSet bool
}

func (v NullableKubeConfigForm) Get() *KubeConfigForm {
	return v.value
}

func (v *NullableKubeConfigForm) Set(val *KubeConfigForm) {
	v.value = val
	v.isSet = true
}

func (v NullableKubeConfigForm) IsSet() bool {
	return v.isSet
}

func (v *NullableKubeConfigForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubeConfigForm(val *KubeConfigForm) *NullableKubeConfigForm {
	return &NullableKubeConfigForm{value: val, isSet: true}
}

func (v NullableKubeConfigForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubeConfigForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


