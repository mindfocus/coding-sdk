/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the IssueThirdLink type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &IssueThirdLink{}

// IssueThirdLink 事项第三方链接
type IssueThirdLink struct {
	// 第三方链接 Id
	Id *int64 `json:"Id,omitempty"`
	// 链接地址
	Link *string `json:"Link,omitempty"`
	// 第三方链接类型，MODAO - 墨刀
	ThirdType *string `json:"ThirdType,omitempty"`
	// 名称
	Title *string `json:"Title,omitempty"`
}

// NewIssueThirdLink instantiates a new IssueThirdLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueThirdLink() *IssueThirdLink {
	this := IssueThirdLink{}
	var link string = ""
	this.Link = &link
	var thirdType string = ""
	this.ThirdType = &thirdType
	var title string = ""
	this.Title = &title
	return &this
}

// NewIssueThirdLinkWithDefaults instantiates a new IssueThirdLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueThirdLinkWithDefaults() *IssueThirdLink {
	this := IssueThirdLink{}
	var link string = ""
	this.Link = &link
	var thirdType string = ""
	this.ThirdType = &thirdType
	var title string = ""
	this.Title = &title
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IssueThirdLink) GetId() int64 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueThirdLink) GetIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IssueThirdLink) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *IssueThirdLink) SetId(v int64) {
	o.Id = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *IssueThirdLink) GetLink() string {
	if o == nil || utils.IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueThirdLink) GetLinkOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *IssueThirdLink) HasLink() bool {
	if o != nil && !utils.IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *IssueThirdLink) SetLink(v string) {
	o.Link = &v
}

// GetThirdType returns the ThirdType field value if set, zero value otherwise.
func (o *IssueThirdLink) GetThirdType() string {
	if o == nil || utils.IsNil(o.ThirdType) {
		var ret string
		return ret
	}
	return *o.ThirdType
}

// GetThirdTypeOk returns a tuple with the ThirdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueThirdLink) GetThirdTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ThirdType) {
		return nil, false
	}
	return o.ThirdType, true
}

// HasThirdType returns a boolean if a field has been set.
func (o *IssueThirdLink) HasThirdType() bool {
	if o != nil && !utils.IsNil(o.ThirdType) {
		return true
	}

	return false
}

// SetThirdType gets a reference to the given string and assigns it to the ThirdType field.
func (o *IssueThirdLink) SetThirdType(v string) {
	o.ThirdType = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *IssueThirdLink) GetTitle() string {
	if o == nil || utils.IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueThirdLink) GetTitleOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *IssueThirdLink) HasTitle() bool {
	if o != nil && !utils.IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *IssueThirdLink) SetTitle(v string) {
	o.Title = &v
}

func (o IssueThirdLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueThirdLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !utils.IsNil(o.Link) {
		toSerialize["Link"] = o.Link
	}
	if !utils.IsNil(o.ThirdType) {
		toSerialize["ThirdType"] = o.ThirdType
	}
	if !utils.IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	return toSerialize, nil
}

type NullableIssueThirdLink struct {
	value *IssueThirdLink
	isSet bool
}

func (v NullableIssueThirdLink) Get() *IssueThirdLink {
	return v.value
}

func (v *NullableIssueThirdLink) Set(val *IssueThirdLink) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueThirdLink) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueThirdLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueThirdLink(val *IssueThirdLink) *NullableIssueThirdLink {
	return &NullableIssueThirdLink{value: val, isSet: true}
}

func (v NullableIssueThirdLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueThirdLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


