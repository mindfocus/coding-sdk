/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateTestStepResultRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateTestStepResultRequest{}

// CreateTestStepResultRequest struct for CreateTestStepResultRequest
type CreateTestStepResultRequest struct {
	// 该步骤的实际测试结果
	Actual *string `json:"Actual,omitempty"`
	// 项目名称
	ProjectName string `json:"ProjectName"`
	// 该任务的测试结果，可选值：UNTESTED:未测试,PASSED:通过,BLOCKED:阻塞,RETEST:重测,FAILED:失败
	Status *string `json:"Status,omitempty"`
	// 步骤的索引顺序，起始值为 1
	StepIndex int32 `json:"StepIndex"`
	// 该步骤的测试结果，可选值：PASSED:通过,FAILED:失败
	StepStatus string `json:"StepStatus"`
	// 测试任务 ID
	TestId int32 `json:"TestId"`
}

type _CreateTestStepResultRequest CreateTestStepResultRequest

// NewCreateTestStepResultRequest instantiates a new CreateTestStepResultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTestStepResultRequest(projectName string, stepIndex int32, stepStatus string, testId int32) *CreateTestStepResultRequest {
	this := CreateTestStepResultRequest{}
	this.ProjectName = projectName
	this.StepIndex = stepIndex
	this.StepStatus = stepStatus
	this.TestId = testId
	return &this
}

// NewCreateTestStepResultRequestWithDefaults instantiates a new CreateTestStepResultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTestStepResultRequestWithDefaults() *CreateTestStepResultRequest {
	this := CreateTestStepResultRequest{}
	return &this
}

// GetActual returns the Actual field value if set, zero value otherwise.
func (o *CreateTestStepResultRequest) GetActual() string {
	if o == nil || utils.IsNil(o.Actual) {
		var ret string
		return ret
	}
	return *o.Actual
}

// GetActualOk returns a tuple with the Actual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestStepResultRequest) GetActualOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Actual) {
		return nil, false
	}
	return o.Actual, true
}

// HasActual returns a boolean if a field has been set.
func (o *CreateTestStepResultRequest) HasActual() bool {
	if o != nil && !utils.IsNil(o.Actual) {
		return true
	}

	return false
}

// SetActual gets a reference to the given string and assigns it to the Actual field.
func (o *CreateTestStepResultRequest) SetActual(v string) {
	o.Actual = &v
}

// GetProjectName returns the ProjectName field value
func (o *CreateTestStepResultRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *CreateTestStepResultRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *CreateTestStepResultRequest) SetProjectName(v string) {
	o.ProjectName = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateTestStepResultRequest) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestStepResultRequest) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateTestStepResultRequest) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateTestStepResultRequest) SetStatus(v string) {
	o.Status = &v
}

// GetStepIndex returns the StepIndex field value
func (o *CreateTestStepResultRequest) GetStepIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StepIndex
}

// GetStepIndexOk returns a tuple with the StepIndex field value
// and a boolean to check if the value has been set.
func (o *CreateTestStepResultRequest) GetStepIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StepIndex, true
}

// SetStepIndex sets field value
func (o *CreateTestStepResultRequest) SetStepIndex(v int32) {
	o.StepIndex = v
}

// GetStepStatus returns the StepStatus field value
func (o *CreateTestStepResultRequest) GetStepStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StepStatus
}

// GetStepStatusOk returns a tuple with the StepStatus field value
// and a boolean to check if the value has been set.
func (o *CreateTestStepResultRequest) GetStepStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StepStatus, true
}

// SetStepStatus sets field value
func (o *CreateTestStepResultRequest) SetStepStatus(v string) {
	o.StepStatus = v
}

// GetTestId returns the TestId field value
func (o *CreateTestStepResultRequest) GetTestId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TestId
}

// GetTestIdOk returns a tuple with the TestId field value
// and a boolean to check if the value has been set.
func (o *CreateTestStepResultRequest) GetTestIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TestId, true
}

// SetTestId sets field value
func (o *CreateTestStepResultRequest) SetTestId(v int32) {
	o.TestId = v
}

func (o CreateTestStepResultRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTestStepResultRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Actual) {
		toSerialize["Actual"] = o.Actual
	}
	toSerialize["ProjectName"] = o.ProjectName
	if !utils.IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	toSerialize["StepIndex"] = o.StepIndex
	toSerialize["StepStatus"] = o.StepStatus
	toSerialize["TestId"] = o.TestId
	return toSerialize, nil
}

func (o *CreateTestStepResultRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ProjectName",
		"StepIndex",
		"StepStatus",
		"TestId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTestStepResultRequest := _CreateTestStepResultRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTestStepResultRequest)

	if err != nil {
		return err
	}

	*o = CreateTestStepResultRequest(varCreateTestStepResultRequest)

	return err
}

type NullableCreateTestStepResultRequest struct {
	value *CreateTestStepResultRequest
	isSet bool
}

func (v NullableCreateTestStepResultRequest) Get() *CreateTestStepResultRequest {
	return v.value
}

func (v *NullableCreateTestStepResultRequest) Set(val *CreateTestStepResultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTestStepResultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTestStepResultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTestStepResultRequest(val *CreateTestStepResultRequest) *NullableCreateTestStepResultRequest {
	return &NullableCreateTestStepResultRequest{value: val, isSet: true}
}

func (v NullableCreateTestStepResultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTestStepResultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


