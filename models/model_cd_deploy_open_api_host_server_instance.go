/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CdDeployOpenApiHostServerInstance type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CdDeployOpenApiHostServerInstance{}

// CdDeployOpenApiHostServerInstance 主机组部署详情
type CdDeployOpenApiHostServerInstance struct {
	// 部署状态 succeed:成功 failed:失败 running:运行中
	Status string `json:"Status"`
	// 主机IP
	HumanReadableName string `json:"HumanReadableName"`
	// 部署账号
	Account string `json:"Account"`
	// 部署时间
	DeployedTime int64 `json:"DeployedTime"`
	// 主机组名称
	Zone string `json:"Zone"`
	// 云主机类型 主机组部署默认为 hostserver
	CloudProvider string `json:"CloudProvider"`
	// 主机IP
	Ip string `json:"Ip"`
	// 主机组名称
	Region string `json:"Region"`
	// 云主机类型 主机组部署默认为 hostserver
	ProviderType string `json:"ProviderType"`
	// 该主机部署主键
	Name string `json:"Name"`
}

type _CdDeployOpenApiHostServerInstance CdDeployOpenApiHostServerInstance

// NewCdDeployOpenApiHostServerInstance instantiates a new CdDeployOpenApiHostServerInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdDeployOpenApiHostServerInstance(status string, humanReadableName string, account string, deployedTime int64, zone string, cloudProvider string, ip string, region string, providerType string, name string) *CdDeployOpenApiHostServerInstance {
	this := CdDeployOpenApiHostServerInstance{}
	this.Status = status
	this.HumanReadableName = humanReadableName
	this.Account = account
	this.DeployedTime = deployedTime
	this.Zone = zone
	this.CloudProvider = cloudProvider
	this.Ip = ip
	this.Region = region
	this.ProviderType = providerType
	this.Name = name
	return &this
}

// NewCdDeployOpenApiHostServerInstanceWithDefaults instantiates a new CdDeployOpenApiHostServerInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdDeployOpenApiHostServerInstanceWithDefaults() *CdDeployOpenApiHostServerInstance {
	this := CdDeployOpenApiHostServerInstance{}
	var status string = ""
	this.Status = status
	var humanReadableName string = ""
	this.HumanReadableName = humanReadableName
	var account string = ""
	this.Account = account
	var deployedTime int64 = 0
	this.DeployedTime = deployedTime
	var zone string = ""
	this.Zone = zone
	var cloudProvider string = "hostserver"
	this.CloudProvider = cloudProvider
	var ip string = ""
	this.Ip = ip
	var region string = ""
	this.Region = region
	var providerType string = "hostserver"
	this.ProviderType = providerType
	var name string = ""
	this.Name = name
	return &this
}

// GetStatus returns the Status field value
func (o *CdDeployOpenApiHostServerInstance) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CdDeployOpenApiHostServerInstance) SetStatus(v string) {
	o.Status = v
}

// GetHumanReadableName returns the HumanReadableName field value
func (o *CdDeployOpenApiHostServerInstance) GetHumanReadableName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HumanReadableName
}

// GetHumanReadableNameOk returns a tuple with the HumanReadableName field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetHumanReadableNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HumanReadableName, true
}

// SetHumanReadableName sets field value
func (o *CdDeployOpenApiHostServerInstance) SetHumanReadableName(v string) {
	o.HumanReadableName = v
}

// GetAccount returns the Account field value
func (o *CdDeployOpenApiHostServerInstance) GetAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *CdDeployOpenApiHostServerInstance) SetAccount(v string) {
	o.Account = v
}

// GetDeployedTime returns the DeployedTime field value
func (o *CdDeployOpenApiHostServerInstance) GetDeployedTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DeployedTime
}

// GetDeployedTimeOk returns a tuple with the DeployedTime field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetDeployedTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployedTime, true
}

// SetDeployedTime sets field value
func (o *CdDeployOpenApiHostServerInstance) SetDeployedTime(v int64) {
	o.DeployedTime = v
}

// GetZone returns the Zone field value
func (o *CdDeployOpenApiHostServerInstance) GetZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *CdDeployOpenApiHostServerInstance) SetZone(v string) {
	o.Zone = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *CdDeployOpenApiHostServerInstance) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *CdDeployOpenApiHostServerInstance) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetIp returns the Ip field value
func (o *CdDeployOpenApiHostServerInstance) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *CdDeployOpenApiHostServerInstance) SetIp(v string) {
	o.Ip = v
}

// GetRegion returns the Region field value
func (o *CdDeployOpenApiHostServerInstance) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CdDeployOpenApiHostServerInstance) SetRegion(v string) {
	o.Region = v
}

// GetProviderType returns the ProviderType field value
func (o *CdDeployOpenApiHostServerInstance) GetProviderType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetProviderTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderType, true
}

// SetProviderType sets field value
func (o *CdDeployOpenApiHostServerInstance) SetProviderType(v string) {
	o.ProviderType = v
}

// GetName returns the Name field value
func (o *CdDeployOpenApiHostServerInstance) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CdDeployOpenApiHostServerInstance) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CdDeployOpenApiHostServerInstance) SetName(v string) {
	o.Name = v
}

func (o CdDeployOpenApiHostServerInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdDeployOpenApiHostServerInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Status"] = o.Status
	toSerialize["HumanReadableName"] = o.HumanReadableName
	toSerialize["Account"] = o.Account
	toSerialize["DeployedTime"] = o.DeployedTime
	toSerialize["Zone"] = o.Zone
	toSerialize["CloudProvider"] = o.CloudProvider
	toSerialize["Ip"] = o.Ip
	toSerialize["Region"] = o.Region
	toSerialize["ProviderType"] = o.ProviderType
	toSerialize["Name"] = o.Name
	return toSerialize, nil
}

func (o *CdDeployOpenApiHostServerInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Status",
		"HumanReadableName",
		"Account",
		"DeployedTime",
		"Zone",
		"CloudProvider",
		"Ip",
		"Region",
		"ProviderType",
		"Name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCdDeployOpenApiHostServerInstance := _CdDeployOpenApiHostServerInstance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCdDeployOpenApiHostServerInstance)

	if err != nil {
		return err
	}

	*o = CdDeployOpenApiHostServerInstance(varCdDeployOpenApiHostServerInstance)

	return err
}

type NullableCdDeployOpenApiHostServerInstance struct {
	value *CdDeployOpenApiHostServerInstance
	isSet bool
}

func (v NullableCdDeployOpenApiHostServerInstance) Get() *CdDeployOpenApiHostServerInstance {
	return v.value
}

func (v *NullableCdDeployOpenApiHostServerInstance) Set(val *CdDeployOpenApiHostServerInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableCdDeployOpenApiHostServerInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableCdDeployOpenApiHostServerInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdDeployOpenApiHostServerInstance(val *CdDeployOpenApiHostServerInstance) *NullableCdDeployOpenApiHostServerInstance {
	return &NullableCdDeployOpenApiHostServerInstance{value: val, isSet: true}
}

func (v NullableCdDeployOpenApiHostServerInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdDeployOpenApiHostServerInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


