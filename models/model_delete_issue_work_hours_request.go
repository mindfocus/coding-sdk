/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DeleteIssueWorkHoursRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DeleteIssueWorkHoursRequest{}

// DeleteIssueWorkHoursRequest struct for DeleteIssueWorkHoursRequest
type DeleteIssueWorkHoursRequest struct {
	// 事项 Code
	IssueCode int64 `json:"IssueCode"`
	// 项目名称
	ProjectName string `json:"ProjectName"`
	// 是否将该工时日志的使用工时归还到剩余工时，默认：false
	RollbackRemainingHours bool `json:"RollbackRemainingHours"`
	// 工时日志 Id
	WorkHourLogId int32 `json:"WorkHourLogId"`
}

type _DeleteIssueWorkHoursRequest DeleteIssueWorkHoursRequest

// NewDeleteIssueWorkHoursRequest instantiates a new DeleteIssueWorkHoursRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteIssueWorkHoursRequest(issueCode int64, projectName string, rollbackRemainingHours bool, workHourLogId int32) *DeleteIssueWorkHoursRequest {
	this := DeleteIssueWorkHoursRequest{}
	this.IssueCode = issueCode
	this.ProjectName = projectName
	this.RollbackRemainingHours = rollbackRemainingHours
	this.WorkHourLogId = workHourLogId
	return &this
}

// NewDeleteIssueWorkHoursRequestWithDefaults instantiates a new DeleteIssueWorkHoursRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteIssueWorkHoursRequestWithDefaults() *DeleteIssueWorkHoursRequest {
	this := DeleteIssueWorkHoursRequest{}
	return &this
}

// GetIssueCode returns the IssueCode field value
func (o *DeleteIssueWorkHoursRequest) GetIssueCode() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IssueCode
}

// GetIssueCodeOk returns a tuple with the IssueCode field value
// and a boolean to check if the value has been set.
func (o *DeleteIssueWorkHoursRequest) GetIssueCodeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssueCode, true
}

// SetIssueCode sets field value
func (o *DeleteIssueWorkHoursRequest) SetIssueCode(v int64) {
	o.IssueCode = v
}

// GetProjectName returns the ProjectName field value
func (o *DeleteIssueWorkHoursRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *DeleteIssueWorkHoursRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *DeleteIssueWorkHoursRequest) SetProjectName(v string) {
	o.ProjectName = v
}

// GetRollbackRemainingHours returns the RollbackRemainingHours field value
func (o *DeleteIssueWorkHoursRequest) GetRollbackRemainingHours() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RollbackRemainingHours
}

// GetRollbackRemainingHoursOk returns a tuple with the RollbackRemainingHours field value
// and a boolean to check if the value has been set.
func (o *DeleteIssueWorkHoursRequest) GetRollbackRemainingHoursOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RollbackRemainingHours, true
}

// SetRollbackRemainingHours sets field value
func (o *DeleteIssueWorkHoursRequest) SetRollbackRemainingHours(v bool) {
	o.RollbackRemainingHours = v
}

// GetWorkHourLogId returns the WorkHourLogId field value
func (o *DeleteIssueWorkHoursRequest) GetWorkHourLogId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WorkHourLogId
}

// GetWorkHourLogIdOk returns a tuple with the WorkHourLogId field value
// and a boolean to check if the value has been set.
func (o *DeleteIssueWorkHoursRequest) GetWorkHourLogIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkHourLogId, true
}

// SetWorkHourLogId sets field value
func (o *DeleteIssueWorkHoursRequest) SetWorkHourLogId(v int32) {
	o.WorkHourLogId = v
}

func (o DeleteIssueWorkHoursRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteIssueWorkHoursRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["IssueCode"] = o.IssueCode
	toSerialize["ProjectName"] = o.ProjectName
	toSerialize["RollbackRemainingHours"] = o.RollbackRemainingHours
	toSerialize["WorkHourLogId"] = o.WorkHourLogId
	return toSerialize, nil
}

func (o *DeleteIssueWorkHoursRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"IssueCode",
		"ProjectName",
		"RollbackRemainingHours",
		"WorkHourLogId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteIssueWorkHoursRequest := _DeleteIssueWorkHoursRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteIssueWorkHoursRequest)

	if err != nil {
		return err
	}

	*o = DeleteIssueWorkHoursRequest(varDeleteIssueWorkHoursRequest)

	return err
}

type NullableDeleteIssueWorkHoursRequest struct {
	value *DeleteIssueWorkHoursRequest
	isSet bool
}

func (v NullableDeleteIssueWorkHoursRequest) Get() *DeleteIssueWorkHoursRequest {
	return v.value
}

func (v *NullableDeleteIssueWorkHoursRequest) Set(val *DeleteIssueWorkHoursRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteIssueWorkHoursRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteIssueWorkHoursRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteIssueWorkHoursRequest(val *DeleteIssueWorkHoursRequest) *NullableDeleteIssueWorkHoursRequest {
	return &NullableDeleteIssueWorkHoursRequest{value: val, isSet: true}
}

func (v NullableDeleteIssueWorkHoursRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteIssueWorkHoursRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


