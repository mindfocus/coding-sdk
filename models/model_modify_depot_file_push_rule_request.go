/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ModifyDepotFilePushRuleRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ModifyDepotFilePushRuleRequest{}

// ModifyDepotFilePushRuleRequest struct for ModifyDepotFilePushRuleRequest
type ModifyDepotFilePushRuleRequest struct {
	// 仓库路径
	DepotPath string `json:"DepotPath"`
	// 文件推送规则 ID
	FilePushRuleId int64 `json:"FilePushRuleId"`
	// 拒绝所有人推送
	IsDenyForAllUser bool `json:"IsDenyForAllUser"`
}

type _ModifyDepotFilePushRuleRequest ModifyDepotFilePushRuleRequest

// NewModifyDepotFilePushRuleRequest instantiates a new ModifyDepotFilePushRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyDepotFilePushRuleRequest(depotPath string, filePushRuleId int64, isDenyForAllUser bool) *ModifyDepotFilePushRuleRequest {
	this := ModifyDepotFilePushRuleRequest{}
	this.DepotPath = depotPath
	this.FilePushRuleId = filePushRuleId
	this.IsDenyForAllUser = isDenyForAllUser
	return &this
}

// NewModifyDepotFilePushRuleRequestWithDefaults instantiates a new ModifyDepotFilePushRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyDepotFilePushRuleRequestWithDefaults() *ModifyDepotFilePushRuleRequest {
	this := ModifyDepotFilePushRuleRequest{}
	return &this
}

// GetDepotPath returns the DepotPath field value
func (o *ModifyDepotFilePushRuleRequest) GetDepotPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value
// and a boolean to check if the value has been set.
func (o *ModifyDepotFilePushRuleRequest) GetDepotPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotPath, true
}

// SetDepotPath sets field value
func (o *ModifyDepotFilePushRuleRequest) SetDepotPath(v string) {
	o.DepotPath = v
}

// GetFilePushRuleId returns the FilePushRuleId field value
func (o *ModifyDepotFilePushRuleRequest) GetFilePushRuleId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FilePushRuleId
}

// GetFilePushRuleIdOk returns a tuple with the FilePushRuleId field value
// and a boolean to check if the value has been set.
func (o *ModifyDepotFilePushRuleRequest) GetFilePushRuleIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilePushRuleId, true
}

// SetFilePushRuleId sets field value
func (o *ModifyDepotFilePushRuleRequest) SetFilePushRuleId(v int64) {
	o.FilePushRuleId = v
}

// GetIsDenyForAllUser returns the IsDenyForAllUser field value
func (o *ModifyDepotFilePushRuleRequest) GetIsDenyForAllUser() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDenyForAllUser
}

// GetIsDenyForAllUserOk returns a tuple with the IsDenyForAllUser field value
// and a boolean to check if the value has been set.
func (o *ModifyDepotFilePushRuleRequest) GetIsDenyForAllUserOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDenyForAllUser, true
}

// SetIsDenyForAllUser sets field value
func (o *ModifyDepotFilePushRuleRequest) SetIsDenyForAllUser(v bool) {
	o.IsDenyForAllUser = v
}

func (o ModifyDepotFilePushRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyDepotFilePushRuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotPath"] = o.DepotPath
	toSerialize["FilePushRuleId"] = o.FilePushRuleId
	toSerialize["IsDenyForAllUser"] = o.IsDenyForAllUser
	return toSerialize, nil
}

func (o *ModifyDepotFilePushRuleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotPath",
		"FilePushRuleId",
		"IsDenyForAllUser",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyDepotFilePushRuleRequest := _ModifyDepotFilePushRuleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyDepotFilePushRuleRequest)

	if err != nil {
		return err
	}

	*o = ModifyDepotFilePushRuleRequest(varModifyDepotFilePushRuleRequest)

	return err
}

type NullableModifyDepotFilePushRuleRequest struct {
	value *ModifyDepotFilePushRuleRequest
	isSet bool
}

func (v NullableModifyDepotFilePushRuleRequest) Get() *ModifyDepotFilePushRuleRequest {
	return v.value
}

func (v *NullableModifyDepotFilePushRuleRequest) Set(val *ModifyDepotFilePushRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyDepotFilePushRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyDepotFilePushRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyDepotFilePushRuleRequest(val *ModifyDepotFilePushRuleRequest) *NullableModifyDepotFilePushRuleRequest {
	return &NullableModifyDepotFilePushRuleRequest{value: val, isSet: true}
}

func (v NullableModifyDepotFilePushRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyDepotFilePushRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


