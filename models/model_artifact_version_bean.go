/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ArtifactVersionBean type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ArtifactVersionBean{}

// ArtifactVersionBean 制品版本实体
type ArtifactVersionBean struct {
	// 创建时间
	CreatedAt *int64 `json:"CreatedAt,omitempty"`
	// 版本描述
	Description *string `json:"Description,omitempty"`
	// 下载量
	DownloadCount *int32 `json:"DownloadCount,omitempty"`
	// 版本哈希
	Hash *string `json:"Hash,omitempty"`
	// 版本 ID
	Id *int32 `json:"Id,omitempty"`
	// 制品包 ID
	PkgId *int32 `json:"PkgId,omitempty"`
	// 发布状态：1-未发布;2-已发布
	ReleaseStatus *int64 `json:"ReleaseStatus,omitempty"`
	// 版本大小（单位：MB）
	Size utils.NullableFloat32 `json:"Size,omitempty"`
	// 版本号
	Version *string `json:"Version,omitempty"`
}

// NewArtifactVersionBean instantiates a new ArtifactVersionBean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactVersionBean() *ArtifactVersionBean {
	this := ArtifactVersionBean{}
	var description string = ""
	this.Description = &description
	var hash string = ""
	this.Hash = &hash
	var version string = ""
	this.Version = &version
	return &this
}

// NewArtifactVersionBeanWithDefaults instantiates a new ArtifactVersionBean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactVersionBeanWithDefaults() *ArtifactVersionBean {
	this := ArtifactVersionBean{}
	var description string = ""
	this.Description = &description
	var hash string = ""
	this.Hash = &hash
	var version string = ""
	this.Version = &version
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetCreatedAt() int64 {
	if o == nil || utils.IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetCreatedAtOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasCreatedAt() bool {
	if o != nil && !utils.IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *ArtifactVersionBean) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetDescription() string {
	if o == nil || utils.IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetDescriptionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasDescription() bool {
	if o != nil && !utils.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ArtifactVersionBean) SetDescription(v string) {
	o.Description = &v
}

// GetDownloadCount returns the DownloadCount field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetDownloadCount() int32 {
	if o == nil || utils.IsNil(o.DownloadCount) {
		var ret int32
		return ret
	}
	return *o.DownloadCount
}

// GetDownloadCountOk returns a tuple with the DownloadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetDownloadCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.DownloadCount) {
		return nil, false
	}
	return o.DownloadCount, true
}

// HasDownloadCount returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasDownloadCount() bool {
	if o != nil && !utils.IsNil(o.DownloadCount) {
		return true
	}

	return false
}

// SetDownloadCount gets a reference to the given int32 and assigns it to the DownloadCount field.
func (o *ArtifactVersionBean) SetDownloadCount(v int32) {
	o.DownloadCount = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetHash() string {
	if o == nil || utils.IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetHashOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasHash() bool {
	if o != nil && !utils.IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ArtifactVersionBean) SetHash(v string) {
	o.Hash = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetId() int32 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ArtifactVersionBean) SetId(v int32) {
	o.Id = &v
}

// GetPkgId returns the PkgId field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetPkgId() int32 {
	if o == nil || utils.IsNil(o.PkgId) {
		var ret int32
		return ret
	}
	return *o.PkgId
}

// GetPkgIdOk returns a tuple with the PkgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetPkgIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.PkgId) {
		return nil, false
	}
	return o.PkgId, true
}

// HasPkgId returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasPkgId() bool {
	if o != nil && !utils.IsNil(o.PkgId) {
		return true
	}

	return false
}

// SetPkgId gets a reference to the given int32 and assigns it to the PkgId field.
func (o *ArtifactVersionBean) SetPkgId(v int32) {
	o.PkgId = &v
}

// GetReleaseStatus returns the ReleaseStatus field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetReleaseStatus() int64 {
	if o == nil || utils.IsNil(o.ReleaseStatus) {
		var ret int64
		return ret
	}
	return *o.ReleaseStatus
}

// GetReleaseStatusOk returns a tuple with the ReleaseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetReleaseStatusOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ReleaseStatus) {
		return nil, false
	}
	return o.ReleaseStatus, true
}

// HasReleaseStatus returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasReleaseStatus() bool {
	if o != nil && !utils.IsNil(o.ReleaseStatus) {
		return true
	}

	return false
}

// SetReleaseStatus gets a reference to the given int64 and assigns it to the ReleaseStatus field.
func (o *ArtifactVersionBean) SetReleaseStatus(v int64) {
	o.ReleaseStatus = &v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtifactVersionBean) GetSize() float32 {
	if o == nil || utils.IsNil(o.Size.Get()) {
		var ret float32
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactVersionBean) GetSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given utils.NullableFloat32 and assigns it to the Size field.
func (o *ArtifactVersionBean) SetSize(v float32) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *ArtifactVersionBean) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *ArtifactVersionBean) UnsetSize() {
	o.Size.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ArtifactVersionBean) GetVersion() string {
	if o == nil || utils.IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionBean) GetVersionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ArtifactVersionBean) HasVersion() bool {
	if o != nil && !utils.IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ArtifactVersionBean) SetVersion(v string) {
	o.Version = &v
}

func (o ArtifactVersionBean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactVersionBean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !utils.IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !utils.IsNil(o.DownloadCount) {
		toSerialize["DownloadCount"] = o.DownloadCount
	}
	if !utils.IsNil(o.Hash) {
		toSerialize["Hash"] = o.Hash
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !utils.IsNil(o.PkgId) {
		toSerialize["PkgId"] = o.PkgId
	}
	if !utils.IsNil(o.ReleaseStatus) {
		toSerialize["ReleaseStatus"] = o.ReleaseStatus
	}
	if o.Size.IsSet() {
		toSerialize["Size"] = o.Size.Get()
	}
	if !utils.IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	return toSerialize, nil
}

type NullableArtifactVersionBean struct {
	value *ArtifactVersionBean
	isSet bool
}

func (v NullableArtifactVersionBean) Get() *ArtifactVersionBean {
	return v.value
}

func (v *NullableArtifactVersionBean) Set(val *ArtifactVersionBean) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactVersionBean) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactVersionBean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactVersionBean(val *ArtifactVersionBean) *NullableArtifactVersionBean {
	return &NullableArtifactVersionBean{value: val, isSet: true}
}

func (v NullableArtifactVersionBean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactVersionBean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


