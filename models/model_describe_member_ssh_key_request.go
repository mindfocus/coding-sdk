/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeMemberSshKeyRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeMemberSshKeyRequest{}

// DescribeMemberSshKeyRequest struct for DescribeMemberSshKeyRequest
type DescribeMemberSshKeyRequest struct {
	// 成员 Id
	MemberUserId int64 `json:"MemberUserId"`
	// SSH 公钥 Id
	SshKeyId *int64 `json:"SshKeyId,omitempty"`
}

type _DescribeMemberSshKeyRequest DescribeMemberSshKeyRequest

// NewDescribeMemberSshKeyRequest instantiates a new DescribeMemberSshKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeMemberSshKeyRequest(memberUserId int64) *DescribeMemberSshKeyRequest {
	this := DescribeMemberSshKeyRequest{}
	this.MemberUserId = memberUserId
	return &this
}

// NewDescribeMemberSshKeyRequestWithDefaults instantiates a new DescribeMemberSshKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeMemberSshKeyRequestWithDefaults() *DescribeMemberSshKeyRequest {
	this := DescribeMemberSshKeyRequest{}
	return &this
}

// GetMemberUserId returns the MemberUserId field value
func (o *DescribeMemberSshKeyRequest) GetMemberUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MemberUserId
}

// GetMemberUserIdOk returns a tuple with the MemberUserId field value
// and a boolean to check if the value has been set.
func (o *DescribeMemberSshKeyRequest) GetMemberUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberUserId, true
}

// SetMemberUserId sets field value
func (o *DescribeMemberSshKeyRequest) SetMemberUserId(v int64) {
	o.MemberUserId = v
}

// GetSshKeyId returns the SshKeyId field value if set, zero value otherwise.
func (o *DescribeMemberSshKeyRequest) GetSshKeyId() int64 {
	if o == nil || utils.IsNil(o.SshKeyId) {
		var ret int64
		return ret
	}
	return *o.SshKeyId
}

// GetSshKeyIdOk returns a tuple with the SshKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeMemberSshKeyRequest) GetSshKeyIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.SshKeyId) {
		return nil, false
	}
	return o.SshKeyId, true
}

// HasSshKeyId returns a boolean if a field has been set.
func (o *DescribeMemberSshKeyRequest) HasSshKeyId() bool {
	if o != nil && !utils.IsNil(o.SshKeyId) {
		return true
	}

	return false
}

// SetSshKeyId gets a reference to the given int64 and assigns it to the SshKeyId field.
func (o *DescribeMemberSshKeyRequest) SetSshKeyId(v int64) {
	o.SshKeyId = &v
}

func (o DescribeMemberSshKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeMemberSshKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["MemberUserId"] = o.MemberUserId
	if !utils.IsNil(o.SshKeyId) {
		toSerialize["SshKeyId"] = o.SshKeyId
	}
	return toSerialize, nil
}

func (o *DescribeMemberSshKeyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"MemberUserId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeMemberSshKeyRequest := _DescribeMemberSshKeyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeMemberSshKeyRequest)

	if err != nil {
		return err
	}

	*o = DescribeMemberSshKeyRequest(varDescribeMemberSshKeyRequest)

	return err
}

type NullableDescribeMemberSshKeyRequest struct {
	value *DescribeMemberSshKeyRequest
	isSet bool
}

func (v NullableDescribeMemberSshKeyRequest) Get() *DescribeMemberSshKeyRequest {
	return v.value
}

func (v *NullableDescribeMemberSshKeyRequest) Set(val *DescribeMemberSshKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeMemberSshKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeMemberSshKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeMemberSshKeyRequest(val *DescribeMemberSshKeyRequest) *NullableDescribeMemberSshKeyRequest {
	return &NullableDescribeMemberSshKeyRequest{value: val, isSet: true}
}

func (v NullableDescribeMemberSshKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeMemberSshKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


