/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ArtifactsOpenApiProjectData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ArtifactsOpenApiProjectData{}

// ArtifactsOpenApiProjectData struct for ArtifactsOpenApiProjectData
type ArtifactsOpenApiProjectData struct {
	// 是否生效，0-否，1-是
	Status int64 `json:"Status"`
	// 项目URL
	HtmlUrl string `json:"HtmlUrl"`
	// 更新时间
	UpdatedAt int64 `json:"Updated_at"`
	// 团队ID
	TeamId int64 `json:"TeamId"`
	// 名称
	Name string `json:"Name"`
	// 项目类型
	Type int64 `json:"Type"`
	// 接口URL
	ApiUrl string `json:"ApiUrl"`
	// 显示名称
	DisplayName string `json:"DisplayName"`
	// 项目所属用户名
	OwnerUserName string `json:"OwnerUserName"`
	// ID
	Id int64 `json:"Id"`
	// 图标
	Icon string `json:"Icon"`
	// 团队所有者 ID
	TeamOwnerId int64 `json:"TeamOwnerId"`
	// 项目位置
	ProjectPath string `json:"ProjectPath"`
	// 项目管理类型
	PmTypeName string `json:"PmTypeName"`
	// 创建时间
	CreatedAt int64 `json:"Created_at"`
}

type _ArtifactsOpenApiProjectData ArtifactsOpenApiProjectData

// NewArtifactsOpenApiProjectData instantiates a new ArtifactsOpenApiProjectData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactsOpenApiProjectData(status int64, htmlUrl string, updatedAt int64, teamId int64, name string, type_ int64, apiUrl string, displayName string, ownerUserName string, id int64, icon string, teamOwnerId int64, projectPath string, pmTypeName string, createdAt int64) *ArtifactsOpenApiProjectData {
	this := ArtifactsOpenApiProjectData{}
	this.Status = status
	this.HtmlUrl = htmlUrl
	this.UpdatedAt = updatedAt
	this.TeamId = teamId
	this.Name = name
	this.Type = type_
	this.ApiUrl = apiUrl
	this.DisplayName = displayName
	this.OwnerUserName = ownerUserName
	this.Id = id
	this.Icon = icon
	this.TeamOwnerId = teamOwnerId
	this.ProjectPath = projectPath
	this.PmTypeName = pmTypeName
	this.CreatedAt = createdAt
	return &this
}

// NewArtifactsOpenApiProjectDataWithDefaults instantiates a new ArtifactsOpenApiProjectData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactsOpenApiProjectDataWithDefaults() *ArtifactsOpenApiProjectData {
	this := ArtifactsOpenApiProjectData{}
	var status int64 = 0
	this.Status = status
	var htmlUrl string = ""
	this.HtmlUrl = htmlUrl
	var updatedAt int64 = 0
	this.UpdatedAt = updatedAt
	var teamId int64 = 0
	this.TeamId = teamId
	var name string = ""
	this.Name = name
	var type_ int64 = 0
	this.Type = type_
	var apiUrl string = ""
	this.ApiUrl = apiUrl
	var displayName string = ""
	this.DisplayName = displayName
	var ownerUserName string = ""
	this.OwnerUserName = ownerUserName
	var id int64 = 0
	this.Id = id
	var icon string = ""
	this.Icon = icon
	var teamOwnerId int64 = 0
	this.TeamOwnerId = teamOwnerId
	var projectPath string = ""
	this.ProjectPath = projectPath
	var pmTypeName string = ""
	this.PmTypeName = pmTypeName
	var createdAt int64 = 0
	this.CreatedAt = createdAt
	return &this
}

// GetStatus returns the Status field value
func (o *ArtifactsOpenApiProjectData) GetStatus() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetStatusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ArtifactsOpenApiProjectData) SetStatus(v int64) {
	o.Status = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *ArtifactsOpenApiProjectData) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *ArtifactsOpenApiProjectData) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ArtifactsOpenApiProjectData) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ArtifactsOpenApiProjectData) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

// GetTeamId returns the TeamId field value
func (o *ArtifactsOpenApiProjectData) GetTeamId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetTeamIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *ArtifactsOpenApiProjectData) SetTeamId(v int64) {
	o.TeamId = v
}

// GetName returns the Name field value
func (o *ArtifactsOpenApiProjectData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ArtifactsOpenApiProjectData) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ArtifactsOpenApiProjectData) GetType() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetTypeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ArtifactsOpenApiProjectData) SetType(v int64) {
	o.Type = v
}

// GetApiUrl returns the ApiUrl field value
func (o *ArtifactsOpenApiProjectData) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *ArtifactsOpenApiProjectData) SetApiUrl(v string) {
	o.ApiUrl = v
}

// GetDisplayName returns the DisplayName field value
func (o *ArtifactsOpenApiProjectData) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ArtifactsOpenApiProjectData) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetOwnerUserName returns the OwnerUserName field value
func (o *ArtifactsOpenApiProjectData) GetOwnerUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerUserName
}

// GetOwnerUserNameOk returns a tuple with the OwnerUserName field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetOwnerUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerUserName, true
}

// SetOwnerUserName sets field value
func (o *ArtifactsOpenApiProjectData) SetOwnerUserName(v string) {
	o.OwnerUserName = v
}

// GetId returns the Id field value
func (o *ArtifactsOpenApiProjectData) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArtifactsOpenApiProjectData) SetId(v int64) {
	o.Id = v
}

// GetIcon returns the Icon field value
func (o *ArtifactsOpenApiProjectData) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *ArtifactsOpenApiProjectData) SetIcon(v string) {
	o.Icon = v
}

// GetTeamOwnerId returns the TeamOwnerId field value
func (o *ArtifactsOpenApiProjectData) GetTeamOwnerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TeamOwnerId
}

// GetTeamOwnerIdOk returns a tuple with the TeamOwnerId field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetTeamOwnerIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamOwnerId, true
}

// SetTeamOwnerId sets field value
func (o *ArtifactsOpenApiProjectData) SetTeamOwnerId(v int64) {
	o.TeamOwnerId = v
}

// GetProjectPath returns the ProjectPath field value
func (o *ArtifactsOpenApiProjectData) GetProjectPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectPath
}

// GetProjectPathOk returns a tuple with the ProjectPath field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetProjectPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectPath, true
}

// SetProjectPath sets field value
func (o *ArtifactsOpenApiProjectData) SetProjectPath(v string) {
	o.ProjectPath = v
}

// GetPmTypeName returns the PmTypeName field value
func (o *ArtifactsOpenApiProjectData) GetPmTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PmTypeName
}

// GetPmTypeNameOk returns a tuple with the PmTypeName field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetPmTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PmTypeName, true
}

// SetPmTypeName sets field value
func (o *ArtifactsOpenApiProjectData) SetPmTypeName(v string) {
	o.PmTypeName = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ArtifactsOpenApiProjectData) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiProjectData) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ArtifactsOpenApiProjectData) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

func (o ArtifactsOpenApiProjectData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactsOpenApiProjectData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Status"] = o.Status
	toSerialize["HtmlUrl"] = o.HtmlUrl
	toSerialize["Updated_at"] = o.UpdatedAt
	toSerialize["TeamId"] = o.TeamId
	toSerialize["Name"] = o.Name
	toSerialize["Type"] = o.Type
	toSerialize["ApiUrl"] = o.ApiUrl
	toSerialize["DisplayName"] = o.DisplayName
	toSerialize["OwnerUserName"] = o.OwnerUserName
	toSerialize["Id"] = o.Id
	toSerialize["Icon"] = o.Icon
	toSerialize["TeamOwnerId"] = o.TeamOwnerId
	toSerialize["ProjectPath"] = o.ProjectPath
	toSerialize["PmTypeName"] = o.PmTypeName
	toSerialize["Created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *ArtifactsOpenApiProjectData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Status",
		"HtmlUrl",
		"Updated_at",
		"TeamId",
		"Name",
		"Type",
		"ApiUrl",
		"DisplayName",
		"OwnerUserName",
		"Id",
		"Icon",
		"TeamOwnerId",
		"ProjectPath",
		"PmTypeName",
		"Created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArtifactsOpenApiProjectData := _ArtifactsOpenApiProjectData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArtifactsOpenApiProjectData)

	if err != nil {
		return err
	}

	*o = ArtifactsOpenApiProjectData(varArtifactsOpenApiProjectData)

	return err
}

type NullableArtifactsOpenApiProjectData struct {
	value *ArtifactsOpenApiProjectData
	isSet bool
}

func (v NullableArtifactsOpenApiProjectData) Get() *ArtifactsOpenApiProjectData {
	return v.value
}

func (v *NullableArtifactsOpenApiProjectData) Set(val *ArtifactsOpenApiProjectData) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactsOpenApiProjectData) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactsOpenApiProjectData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactsOpenApiProjectData(val *ArtifactsOpenApiProjectData) *NullableArtifactsOpenApiProjectData {
	return &NullableArtifactsOpenApiProjectData{value: val, isSet: true}
}

func (v NullableArtifactsOpenApiProjectData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactsOpenApiProjectData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


