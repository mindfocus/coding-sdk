/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the TriggerCodingScanData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TriggerCodingScanData{}

// TriggerCodingScanData 触发扫描返回数据
type TriggerCodingScanData struct {
	ScanInfo *ScanInfo `json:"ScanInfo,omitempty"`
	ScanSeverity *ScanSeverityProtoDTO `json:"ScanSeverity,omitempty"`
}

// NewTriggerCodingScanData instantiates a new TriggerCodingScanData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerCodingScanData() *TriggerCodingScanData {
	this := TriggerCodingScanData{}
	return &this
}

// NewTriggerCodingScanDataWithDefaults instantiates a new TriggerCodingScanData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerCodingScanDataWithDefaults() *TriggerCodingScanData {
	this := TriggerCodingScanData{}
	return &this
}

// GetScanInfo returns the ScanInfo field value if set, zero value otherwise.
func (o *TriggerCodingScanData) GetScanInfo() ScanInfo {
	if o == nil || utils.IsNil(o.ScanInfo) {
		var ret ScanInfo
		return ret
	}
	return *o.ScanInfo
}

// GetScanInfoOk returns a tuple with the ScanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggerCodingScanData) GetScanInfoOk() (*ScanInfo, bool) {
	if o == nil || utils.IsNil(o.ScanInfo) {
		return nil, false
	}
	return o.ScanInfo, true
}

// HasScanInfo returns a boolean if a field has been set.
func (o *TriggerCodingScanData) HasScanInfo() bool {
	if o != nil && !utils.IsNil(o.ScanInfo) {
		return true
	}

	return false
}

// SetScanInfo gets a reference to the given ScanInfo and assigns it to the ScanInfo field.
func (o *TriggerCodingScanData) SetScanInfo(v ScanInfo) {
	o.ScanInfo = &v
}

// GetScanSeverity returns the ScanSeverity field value if set, zero value otherwise.
func (o *TriggerCodingScanData) GetScanSeverity() ScanSeverityProtoDTO {
	if o == nil || utils.IsNil(o.ScanSeverity) {
		var ret ScanSeverityProtoDTO
		return ret
	}
	return *o.ScanSeverity
}

// GetScanSeverityOk returns a tuple with the ScanSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggerCodingScanData) GetScanSeverityOk() (*ScanSeverityProtoDTO, bool) {
	if o == nil || utils.IsNil(o.ScanSeverity) {
		return nil, false
	}
	return o.ScanSeverity, true
}

// HasScanSeverity returns a boolean if a field has been set.
func (o *TriggerCodingScanData) HasScanSeverity() bool {
	if o != nil && !utils.IsNil(o.ScanSeverity) {
		return true
	}

	return false
}

// SetScanSeverity gets a reference to the given ScanSeverityProtoDTO and assigns it to the ScanSeverity field.
func (o *TriggerCodingScanData) SetScanSeverity(v ScanSeverityProtoDTO) {
	o.ScanSeverity = &v
}

func (o TriggerCodingScanData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TriggerCodingScanData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.ScanInfo) {
		toSerialize["ScanInfo"] = o.ScanInfo
	}
	if !utils.IsNil(o.ScanSeverity) {
		toSerialize["ScanSeverity"] = o.ScanSeverity
	}
	return toSerialize, nil
}

type NullableTriggerCodingScanData struct {
	value *TriggerCodingScanData
	isSet bool
}

func (v NullableTriggerCodingScanData) Get() *TriggerCodingScanData {
	return v.value
}

func (v *NullableTriggerCodingScanData) Set(val *TriggerCodingScanData) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerCodingScanData) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerCodingScanData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerCodingScanData(val *TriggerCodingScanData) *NullableTriggerCodingScanData {
	return &NullableTriggerCodingScanData{value: val, isSet: true}
}

func (v NullableTriggerCodingScanData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerCodingScanData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


