/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateMergeRequestNoteRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateMergeRequestNoteRequest{}

// CreateMergeRequestNoteRequest struct for CreateMergeRequestNoteRequest
type CreateMergeRequestNoteRequest struct {
	// 行评论内容
	Content string `json:"Content"`
	// 仓库路径
	DepotPath string `json:"DepotPath"`
	Form *MergeRequestDiffNoteForm `json:"Form,omitempty"`
	// 合并请求的Iid
	MergeId int32 `json:"MergeId"`
	// 行评论的父亲Id
	ParentId int32 `json:"ParentId"`
}

type _CreateMergeRequestNoteRequest CreateMergeRequestNoteRequest

// NewCreateMergeRequestNoteRequest instantiates a new CreateMergeRequestNoteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMergeRequestNoteRequest(content string, depotPath string, mergeId int32, parentId int32) *CreateMergeRequestNoteRequest {
	this := CreateMergeRequestNoteRequest{}
	this.Content = content
	this.DepotPath = depotPath
	this.MergeId = mergeId
	this.ParentId = parentId
	return &this
}

// NewCreateMergeRequestNoteRequestWithDefaults instantiates a new CreateMergeRequestNoteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMergeRequestNoteRequestWithDefaults() *CreateMergeRequestNoteRequest {
	this := CreateMergeRequestNoteRequest{}
	return &this
}

// GetContent returns the Content field value
func (o *CreateMergeRequestNoteRequest) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *CreateMergeRequestNoteRequest) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *CreateMergeRequestNoteRequest) SetContent(v string) {
	o.Content = v
}

// GetDepotPath returns the DepotPath field value
func (o *CreateMergeRequestNoteRequest) GetDepotPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value
// and a boolean to check if the value has been set.
func (o *CreateMergeRequestNoteRequest) GetDepotPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotPath, true
}

// SetDepotPath sets field value
func (o *CreateMergeRequestNoteRequest) SetDepotPath(v string) {
	o.DepotPath = v
}

// GetForm returns the Form field value if set, zero value otherwise.
func (o *CreateMergeRequestNoteRequest) GetForm() MergeRequestDiffNoteForm {
	if o == nil || utils.IsNil(o.Form) {
		var ret MergeRequestDiffNoteForm
		return ret
	}
	return *o.Form
}

// GetFormOk returns a tuple with the Form field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMergeRequestNoteRequest) GetFormOk() (*MergeRequestDiffNoteForm, bool) {
	if o == nil || utils.IsNil(o.Form) {
		return nil, false
	}
	return o.Form, true
}

// HasForm returns a boolean if a field has been set.
func (o *CreateMergeRequestNoteRequest) HasForm() bool {
	if o != nil && !utils.IsNil(o.Form) {
		return true
	}

	return false
}

// SetForm gets a reference to the given MergeRequestDiffNoteForm and assigns it to the Form field.
func (o *CreateMergeRequestNoteRequest) SetForm(v MergeRequestDiffNoteForm) {
	o.Form = &v
}

// GetMergeId returns the MergeId field value
func (o *CreateMergeRequestNoteRequest) GetMergeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MergeId
}

// GetMergeIdOk returns a tuple with the MergeId field value
// and a boolean to check if the value has been set.
func (o *CreateMergeRequestNoteRequest) GetMergeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MergeId, true
}

// SetMergeId sets field value
func (o *CreateMergeRequestNoteRequest) SetMergeId(v int32) {
	o.MergeId = v
}

// GetParentId returns the ParentId field value
func (o *CreateMergeRequestNoteRequest) GetParentId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
func (o *CreateMergeRequestNoteRequest) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentId, true
}

// SetParentId sets field value
func (o *CreateMergeRequestNoteRequest) SetParentId(v int32) {
	o.ParentId = v
}

func (o CreateMergeRequestNoteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMergeRequestNoteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Content"] = o.Content
	toSerialize["DepotPath"] = o.DepotPath
	if !utils.IsNil(o.Form) {
		toSerialize["Form"] = o.Form
	}
	toSerialize["MergeId"] = o.MergeId
	toSerialize["ParentId"] = o.ParentId
	return toSerialize, nil
}

func (o *CreateMergeRequestNoteRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Content",
		"DepotPath",
		"MergeId",
		"ParentId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateMergeRequestNoteRequest := _CreateMergeRequestNoteRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateMergeRequestNoteRequest)

	if err != nil {
		return err
	}

	*o = CreateMergeRequestNoteRequest(varCreateMergeRequestNoteRequest)

	return err
}

type NullableCreateMergeRequestNoteRequest struct {
	value *CreateMergeRequestNoteRequest
	isSet bool
}

func (v NullableCreateMergeRequestNoteRequest) Get() *CreateMergeRequestNoteRequest {
	return v.value
}

func (v *NullableCreateMergeRequestNoteRequest) Set(val *CreateMergeRequestNoteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMergeRequestNoteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMergeRequestNoteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMergeRequestNoteRequest(val *CreateMergeRequestNoteRequest) *NullableCreateMergeRequestNoteRequest {
	return &NullableCreateMergeRequestNoteRequest{value: val, isSet: true}
}

func (v NullableCreateMergeRequestNoteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMergeRequestNoteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


