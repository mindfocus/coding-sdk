/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the HostServerGroupDetail type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &HostServerGroupDetail{}

// HostServerGroupDetail HostServerGroupDetail 结构
type HostServerGroupDetail struct {
	// 主机组云账号
	Account *string `json:"Account,omitempty"`
	AgentMachine *AgentMachine `json:"AgentMachine,omitempty"`
	// SSH 认证方式
	AuthMethod *string `json:"AuthMethod,omitempty"`
	// 主机组名称
	DisplayName *string `json:"DisplayName,omitempty"`
	// 主机组 id
	Id *int64 `json:"Id,omitempty"`
	// 实例 IP 列表
	Ips []string `json:"Ips,omitempty"`
	// 主机组标签
	Labels []HostServerGroupLabel `json:"Labels,omitempty"`
	// SSH 端口
	Port *int64 `json:"Port,omitempty"`
	// SSH 用户名
	UserName *string `json:"UserName,omitempty"`
}

// NewHostServerGroupDetail instantiates a new HostServerGroupDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostServerGroupDetail() *HostServerGroupDetail {
	this := HostServerGroupDetail{}
	var account string = ""
	this.Account = &account
	var authMethod string = ""
	this.AuthMethod = &authMethod
	var displayName string = ""
	this.DisplayName = &displayName
	var userName string = ""
	this.UserName = &userName
	return &this
}

// NewHostServerGroupDetailWithDefaults instantiates a new HostServerGroupDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostServerGroupDetailWithDefaults() *HostServerGroupDetail {
	this := HostServerGroupDetail{}
	var account string = ""
	this.Account = &account
	var authMethod string = ""
	this.AuthMethod = &authMethod
	var displayName string = ""
	this.DisplayName = &displayName
	var userName string = ""
	this.UserName = &userName
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetAccount() string {
	if o == nil || utils.IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetAccountOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasAccount() bool {
	if o != nil && !utils.IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *HostServerGroupDetail) SetAccount(v string) {
	o.Account = &v
}

// GetAgentMachine returns the AgentMachine field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetAgentMachine() AgentMachine {
	if o == nil || utils.IsNil(o.AgentMachine) {
		var ret AgentMachine
		return ret
	}
	return *o.AgentMachine
}

// GetAgentMachineOk returns a tuple with the AgentMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetAgentMachineOk() (*AgentMachine, bool) {
	if o == nil || utils.IsNil(o.AgentMachine) {
		return nil, false
	}
	return o.AgentMachine, true
}

// HasAgentMachine returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasAgentMachine() bool {
	if o != nil && !utils.IsNil(o.AgentMachine) {
		return true
	}

	return false
}

// SetAgentMachine gets a reference to the given AgentMachine and assigns it to the AgentMachine field.
func (o *HostServerGroupDetail) SetAgentMachine(v AgentMachine) {
	o.AgentMachine = &v
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetAuthMethod() string {
	if o == nil || utils.IsNil(o.AuthMethod) {
		var ret string
		return ret
	}
	return *o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetAuthMethodOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AuthMethod) {
		return nil, false
	}
	return o.AuthMethod, true
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasAuthMethod() bool {
	if o != nil && !utils.IsNil(o.AuthMethod) {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given string and assigns it to the AuthMethod field.
func (o *HostServerGroupDetail) SetAuthMethod(v string) {
	o.AuthMethod = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetDisplayName() string {
	if o == nil || utils.IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetDisplayNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasDisplayName() bool {
	if o != nil && !utils.IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *HostServerGroupDetail) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetId() int64 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *HostServerGroupDetail) SetId(v int64) {
	o.Id = &v
}

// GetIps returns the Ips field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetIps() []string {
	if o == nil || utils.IsNil(o.Ips) {
		var ret []string
		return ret
	}
	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetIpsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.Ips) {
		return nil, false
	}
	return o.Ips, true
}

// HasIps returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasIps() bool {
	if o != nil && !utils.IsNil(o.Ips) {
		return true
	}

	return false
}

// SetIps gets a reference to the given []string and assigns it to the Ips field.
func (o *HostServerGroupDetail) SetIps(v []string) {
	o.Ips = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetLabels() []HostServerGroupLabel {
	if o == nil || utils.IsNil(o.Labels) {
		var ret []HostServerGroupLabel
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetLabelsOk() ([]HostServerGroupLabel, bool) {
	if o == nil || utils.IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasLabels() bool {
	if o != nil && !utils.IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []HostServerGroupLabel and assigns it to the Labels field.
func (o *HostServerGroupDetail) SetLabels(v []HostServerGroupLabel) {
	o.Labels = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetPort() int64 {
	if o == nil || utils.IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetPortOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasPort() bool {
	if o != nil && !utils.IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *HostServerGroupDetail) SetPort(v int64) {
	o.Port = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *HostServerGroupDetail) GetUserName() string {
	if o == nil || utils.IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostServerGroupDetail) GetUserNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *HostServerGroupDetail) HasUserName() bool {
	if o != nil && !utils.IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *HostServerGroupDetail) SetUserName(v string) {
	o.UserName = &v
}

func (o HostServerGroupDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostServerGroupDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Account) {
		toSerialize["Account"] = o.Account
	}
	if !utils.IsNil(o.AgentMachine) {
		toSerialize["AgentMachine"] = o.AgentMachine
	}
	if !utils.IsNil(o.AuthMethod) {
		toSerialize["AuthMethod"] = o.AuthMethod
	}
	if !utils.IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !utils.IsNil(o.Ips) {
		toSerialize["Ips"] = o.Ips
	}
	if !utils.IsNil(o.Labels) {
		toSerialize["Labels"] = o.Labels
	}
	if !utils.IsNil(o.Port) {
		toSerialize["Port"] = o.Port
	}
	if !utils.IsNil(o.UserName) {
		toSerialize["UserName"] = o.UserName
	}
	return toSerialize, nil
}

type NullableHostServerGroupDetail struct {
	value *HostServerGroupDetail
	isSet bool
}

func (v NullableHostServerGroupDetail) Get() *HostServerGroupDetail {
	return v.value
}

func (v *NullableHostServerGroupDetail) Set(val *HostServerGroupDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableHostServerGroupDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableHostServerGroupDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostServerGroupDetail(val *HostServerGroupDetail) *NullableHostServerGroupDetail {
	return &NullableHostServerGroupDetail{value: val, isSet: true}
}

func (v NullableHostServerGroupDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostServerGroupDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


