/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ReportLittle type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ReportLittle{}

// ReportLittle 测试报告信息-简单
type ReportLittle struct {
	// 创建时间
	CreatedAt utils.NullableString `json:"CreatedAt,omitempty"`
	// ID 主键
	Id utils.NullableInt32 `json:"Id,omitempty"`
	// 报告名称
	Name utils.NullableString `json:"Name,omitempty"`
	// 数据统计结束时间
	StatisticsEndTime utils.NullableString `json:"StatisticsEndTime,omitempty"`
	// 数据统计开始时间
	StatisticsStartTime utils.NullableString `json:"StatisticsStartTime,omitempty"`
	// 报告状态：CREATING 创建中，AVAILABLE 可用，UNAVAILABLE 不可用
	Status utils.NullableString `json:"Status,omitempty"`
	// 报告总结
	Summary utils.NullableString `json:"Summary,omitempty"`
}

// NewReportLittle instantiates a new ReportLittle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportLittle() *ReportLittle {
	this := ReportLittle{}
	var createdAt string = ""
	this.CreatedAt = *utils.NewNullableString(&createdAt)
	var name string = ""
	this.Name = *utils.NewNullableString(&name)
	var statisticsEndTime string = ""
	this.StatisticsEndTime = *utils.NewNullableString(&statisticsEndTime)
	var statisticsStartTime string = ""
	this.StatisticsStartTime = *utils.NewNullableString(&statisticsStartTime)
	var status string = ""
	this.Status = *utils.NewNullableString(&status)
	var summary string = ""
	this.Summary = *utils.NewNullableString(&summary)
	return &this
}

// NewReportLittleWithDefaults instantiates a new ReportLittle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportLittleWithDefaults() *ReportLittle {
	this := ReportLittle{}
	var createdAt string = ""
	this.CreatedAt = *utils.NewNullableString(&createdAt)
	var name string = ""
	this.Name = *utils.NewNullableString(&name)
	var statisticsEndTime string = ""
	this.StatisticsEndTime = *utils.NewNullableString(&statisticsEndTime)
	var statisticsStartTime string = ""
	this.StatisticsStartTime = *utils.NewNullableString(&statisticsStartTime)
	var status string = ""
	this.Status = *utils.NewNullableString(&status)
	var summary string = ""
	this.Summary = *utils.NewNullableString(&summary)
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportLittle) GetCreatedAt() string {
	if o == nil || utils.IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportLittle) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ReportLittle) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given utils.NullableString and assigns it to the CreatedAt field.
func (o *ReportLittle) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ReportLittle) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ReportLittle) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportLittle) GetId() int32 {
	if o == nil || utils.IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportLittle) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ReportLittle) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given utils.NullableInt32 and assigns it to the Id field.
func (o *ReportLittle) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ReportLittle) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ReportLittle) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportLittle) GetName() string {
	if o == nil || utils.IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportLittle) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ReportLittle) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given utils.NullableString and assigns it to the Name field.
func (o *ReportLittle) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ReportLittle) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ReportLittle) UnsetName() {
	o.Name.Unset()
}

// GetStatisticsEndTime returns the StatisticsEndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportLittle) GetStatisticsEndTime() string {
	if o == nil || utils.IsNil(o.StatisticsEndTime.Get()) {
		var ret string
		return ret
	}
	return *o.StatisticsEndTime.Get()
}

// GetStatisticsEndTimeOk returns a tuple with the StatisticsEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportLittle) GetStatisticsEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatisticsEndTime.Get(), o.StatisticsEndTime.IsSet()
}

// HasStatisticsEndTime returns a boolean if a field has been set.
func (o *ReportLittle) HasStatisticsEndTime() bool {
	if o != nil && o.StatisticsEndTime.IsSet() {
		return true
	}

	return false
}

// SetStatisticsEndTime gets a reference to the given utils.NullableString and assigns it to the StatisticsEndTime field.
func (o *ReportLittle) SetStatisticsEndTime(v string) {
	o.StatisticsEndTime.Set(&v)
}
// SetStatisticsEndTimeNil sets the value for StatisticsEndTime to be an explicit nil
func (o *ReportLittle) SetStatisticsEndTimeNil() {
	o.StatisticsEndTime.Set(nil)
}

// UnsetStatisticsEndTime ensures that no value is present for StatisticsEndTime, not even an explicit nil
func (o *ReportLittle) UnsetStatisticsEndTime() {
	o.StatisticsEndTime.Unset()
}

// GetStatisticsStartTime returns the StatisticsStartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportLittle) GetStatisticsStartTime() string {
	if o == nil || utils.IsNil(o.StatisticsStartTime.Get()) {
		var ret string
		return ret
	}
	return *o.StatisticsStartTime.Get()
}

// GetStatisticsStartTimeOk returns a tuple with the StatisticsStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportLittle) GetStatisticsStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatisticsStartTime.Get(), o.StatisticsStartTime.IsSet()
}

// HasStatisticsStartTime returns a boolean if a field has been set.
func (o *ReportLittle) HasStatisticsStartTime() bool {
	if o != nil && o.StatisticsStartTime.IsSet() {
		return true
	}

	return false
}

// SetStatisticsStartTime gets a reference to the given utils.NullableString and assigns it to the StatisticsStartTime field.
func (o *ReportLittle) SetStatisticsStartTime(v string) {
	o.StatisticsStartTime.Set(&v)
}
// SetStatisticsStartTimeNil sets the value for StatisticsStartTime to be an explicit nil
func (o *ReportLittle) SetStatisticsStartTimeNil() {
	o.StatisticsStartTime.Set(nil)
}

// UnsetStatisticsStartTime ensures that no value is present for StatisticsStartTime, not even an explicit nil
func (o *ReportLittle) UnsetStatisticsStartTime() {
	o.StatisticsStartTime.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportLittle) GetStatus() string {
	if o == nil || utils.IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportLittle) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ReportLittle) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given utils.NullableString and assigns it to the Status field.
func (o *ReportLittle) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ReportLittle) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ReportLittle) UnsetStatus() {
	o.Status.Unset()
}

// GetSummary returns the Summary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportLittle) GetSummary() string {
	if o == nil || utils.IsNil(o.Summary.Get()) {
		var ret string
		return ret
	}
	return *o.Summary.Get()
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportLittle) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Summary.Get(), o.Summary.IsSet()
}

// HasSummary returns a boolean if a field has been set.
func (o *ReportLittle) HasSummary() bool {
	if o != nil && o.Summary.IsSet() {
		return true
	}

	return false
}

// SetSummary gets a reference to the given utils.NullableString and assigns it to the Summary field.
func (o *ReportLittle) SetSummary(v string) {
	o.Summary.Set(&v)
}
// SetSummaryNil sets the value for Summary to be an explicit nil
func (o *ReportLittle) SetSummaryNil() {
	o.Summary.Set(nil)
}

// UnsetSummary ensures that no value is present for Summary, not even an explicit nil
func (o *ReportLittle) UnsetSummary() {
	o.Summary.Unset()
}

func (o ReportLittle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportLittle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt.IsSet() {
		toSerialize["CreatedAt"] = o.CreatedAt.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.StatisticsEndTime.IsSet() {
		toSerialize["StatisticsEndTime"] = o.StatisticsEndTime.Get()
	}
	if o.StatisticsStartTime.IsSet() {
		toSerialize["StatisticsStartTime"] = o.StatisticsStartTime.Get()
	}
	if o.Status.IsSet() {
		toSerialize["Status"] = o.Status.Get()
	}
	if o.Summary.IsSet() {
		toSerialize["Summary"] = o.Summary.Get()
	}
	return toSerialize, nil
}

type NullableReportLittle struct {
	value *ReportLittle
	isSet bool
}

func (v NullableReportLittle) Get() *ReportLittle {
	return v.value
}

func (v *NullableReportLittle) Set(val *ReportLittle) {
	v.value = val
	v.isSet = true
}

func (v NullableReportLittle) IsSet() bool {
	return v.isSet
}

func (v *NullableReportLittle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportLittle(val *ReportLittle) *NullableReportLittle {
	return &NullableReportLittle{value: val, isSet: true}
}

func (v NullableReportLittle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportLittle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


