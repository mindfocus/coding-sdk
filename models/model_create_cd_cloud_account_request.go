/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateCdCloudAccountRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateCdCloudAccountRequest{}

// CreateCdCloudAccountRequest struct for CreateCdCloudAccountRequest
type CreateCdCloudAccountRequest struct {
	// 云账号类型（可选值：KUBERNETES、TENCENT）
	CloudProvider string `json:"CloudProvider"`
	Credential CloudAccountCredential `json:"Credential"`
	// 云账号名称
	Name string `json:"Name"`
}

type _CreateCdCloudAccountRequest CreateCdCloudAccountRequest

// NewCreateCdCloudAccountRequest instantiates a new CreateCdCloudAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCdCloudAccountRequest(cloudProvider string, credential CloudAccountCredential, name string) *CreateCdCloudAccountRequest {
	this := CreateCdCloudAccountRequest{}
	this.CloudProvider = cloudProvider
	this.Credential = credential
	this.Name = name
	return &this
}

// NewCreateCdCloudAccountRequestWithDefaults instantiates a new CreateCdCloudAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCdCloudAccountRequestWithDefaults() *CreateCdCloudAccountRequest {
	this := CreateCdCloudAccountRequest{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value
func (o *CreateCdCloudAccountRequest) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *CreateCdCloudAccountRequest) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *CreateCdCloudAccountRequest) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetCredential returns the Credential field value
func (o *CreateCdCloudAccountRequest) GetCredential() CloudAccountCredential {
	if o == nil {
		var ret CloudAccountCredential
		return ret
	}

	return o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value
// and a boolean to check if the value has been set.
func (o *CreateCdCloudAccountRequest) GetCredentialOk() (*CloudAccountCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credential, true
}

// SetCredential sets field value
func (o *CreateCdCloudAccountRequest) SetCredential(v CloudAccountCredential) {
	o.Credential = v
}

// GetName returns the Name field value
func (o *CreateCdCloudAccountRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCdCloudAccountRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCdCloudAccountRequest) SetName(v string) {
	o.Name = v
}

func (o CreateCdCloudAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCdCloudAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CloudProvider"] = o.CloudProvider
	toSerialize["Credential"] = o.Credential
	toSerialize["Name"] = o.Name
	return toSerialize, nil
}

func (o *CreateCdCloudAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"CloudProvider",
		"Credential",
		"Name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCdCloudAccountRequest := _CreateCdCloudAccountRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCdCloudAccountRequest)

	if err != nil {
		return err
	}

	*o = CreateCdCloudAccountRequest(varCreateCdCloudAccountRequest)

	return err
}

type NullableCreateCdCloudAccountRequest struct {
	value *CreateCdCloudAccountRequest
	isSet bool
}

func (v NullableCreateCdCloudAccountRequest) Get() *CreateCdCloudAccountRequest {
	return v.value
}

func (v *NullableCreateCdCloudAccountRequest) Set(val *CreateCdCloudAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCdCloudAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCdCloudAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCdCloudAccountRequest(val *CreateCdCloudAccountRequest) *NullableCreateCdCloudAccountRequest {
	return &NullableCreateCdCloudAccountRequest{value: val, isSet: true}
}

func (v NullableCreateCdCloudAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCdCloudAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


