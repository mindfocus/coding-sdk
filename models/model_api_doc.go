/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"github.com/mindfocus/coding-sdk/utils"
)

// checks if the APIDoc type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &APIDoc{}

// APIDoc API 文档实体
type APIDoc struct {
	// 接口数量
	APICount *int32 `json:"APICount,omitempty"`
	// API 文档编号
	Code *int32 `json:"Code,omitempty"`
	// 创建时间
	CreatedAt *int32 `json:"CreatedAt,omitempty"`
	// 创建者
	CreatedBy *int32 `json:"CreatedBy,omitempty"`
	// API 文档描述
	Description *string `json:"Description,omitempty"`
	// API 文档简介
	Introduction *string `json:"Introduction,omitempty"`
	// 上次发布编号，编号为 0 代表没有发布过
	LatestReleaseCode *int32 `json:"LatestReleaseCode,omitempty"`
	// 上次发布状态
	LatestReleaseStatus *string `json:"LatestReleaseStatus,omitempty"`
	// 上次发布的文档类型
	LatestSourceType *string `json:"LatestSourceType,omitempty"`
	// 上次发布时间
	LatestUpdatedAt utils.NullableInt32 `json:"LatestUpdatedAt,omitempty"`
	// API 文档路由前缀
	PrefixUri *string `json:"PrefixUri,omitempty"`
	// API 文档是否私有访问
	PrivateAccess *bool `json:"PrivateAccess,omitempty"`
	// 发布次数
	ReleaseCount *int32 `json:"ReleaseCount,omitempty"`
	// 分享密码
	SharePassword utils.NullableString `json:"SharePassword,omitempty"`
	// API 文档标题
	Title *string `json:"Title,omitempty"`
	// 更新时间
	UpdatedAt *int32 `json:"UpdatedAt,omitempty"`
	// API 文档路由
	Uri *string `json:"Uri,omitempty"`
	// API 文档是否使用文件中的描述
	UseFileDes *bool `json:"UseFileDes,omitempty"`
	// API 文档是否使用文件中的配置
	UseFileSetting *bool `json:"UseFileSetting,omitempty"`
	// 查看次数
	ViewCount *int32 `json:"ViewCount,omitempty"`
}

// NewAPIDoc instantiates a new APIDoc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIDoc() *APIDoc {
	this := APIDoc{}
	var description string = ""
	this.Description = &description
	var introduction string = ""
	this.Introduction = &introduction
	var latestReleaseStatus string = ""
	this.LatestReleaseStatus = &latestReleaseStatus
	var latestSourceType string = ""
	this.LatestSourceType = &latestSourceType
	var prefixUri string = ""
	this.PrefixUri = &prefixUri
	var privateAccess bool = false
	this.PrivateAccess = &privateAccess
	var sharePassword string = ""
	this.SharePassword = *utils.NewNullableString(&sharePassword)
	var title string = ""
	this.Title = &title
	var uri string = ""
	this.Uri = &uri
	var useFileDes bool = false
	this.UseFileDes = &useFileDes
	var useFileSetting bool = false
	this.UseFileSetting = &useFileSetting
	return &this
}

// NewAPIDocWithDefaults instantiates a new APIDoc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIDocWithDefaults() *APIDoc {
	this := APIDoc{}
	var description string = ""
	this.Description = &description
	var introduction string = ""
	this.Introduction = &introduction
	var latestReleaseStatus string = ""
	this.LatestReleaseStatus = &latestReleaseStatus
	var latestSourceType string = ""
	this.LatestSourceType = &latestSourceType
	var prefixUri string = ""
	this.PrefixUri = &prefixUri
	var privateAccess bool = false
	this.PrivateAccess = &privateAccess
	var sharePassword string = ""
	this.SharePassword = *utils.NewNullableString(&sharePassword)
	var title string = ""
	this.Title = &title
	var uri string = ""
	this.Uri = &uri
	var useFileDes bool = false
	this.UseFileDes = &useFileDes
	var useFileSetting bool = false
	this.UseFileSetting = &useFileSetting
	return &this
}

// GetAPICount returns the APICount field value if set, zero value otherwise.
func (o *APIDoc) GetAPICount() int32 {
	if o == nil || utils.IsNil(o.APICount) {
		var ret int32
		return ret
	}
	return *o.APICount
}

// GetAPICountOk returns a tuple with the APICount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetAPICountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.APICount) {
		return nil, false
	}
	return o.APICount, true
}

// HasAPICount returns a boolean if a field has been set.
func (o *APIDoc) HasAPICount() bool {
	if o != nil && !utils.IsNil(o.APICount) {
		return true
	}

	return false
}

// SetAPICount gets a reference to the given int32 and assigns it to the APICount field.
func (o *APIDoc) SetAPICount(v int32) {
	o.APICount = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *APIDoc) GetCode() int32 {
	if o == nil || utils.IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetCodeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *APIDoc) HasCode() bool {
	if o != nil && !utils.IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *APIDoc) SetCode(v int32) {
	o.Code = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *APIDoc) GetCreatedAt() int32 {
	if o == nil || utils.IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetCreatedAtOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *APIDoc) HasCreatedAt() bool {
	if o != nil && !utils.IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *APIDoc) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *APIDoc) GetCreatedBy() int32 {
	if o == nil || utils.IsNil(o.CreatedBy) {
		var ret int32
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetCreatedByOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *APIDoc) HasCreatedBy() bool {
	if o != nil && !utils.IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given int32 and assigns it to the CreatedBy field.
func (o *APIDoc) SetCreatedBy(v int32) {
	o.CreatedBy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *APIDoc) GetDescription() string {
	if o == nil || utils.IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetDescriptionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *APIDoc) HasDescription() bool {
	if o != nil && !utils.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *APIDoc) SetDescription(v string) {
	o.Description = &v
}

// GetIntroduction returns the Introduction field value if set, zero value otherwise.
func (o *APIDoc) GetIntroduction() string {
	if o == nil || utils.IsNil(o.Introduction) {
		var ret string
		return ret
	}
	return *o.Introduction
}

// GetIntroductionOk returns a tuple with the Introduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetIntroductionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Introduction) {
		return nil, false
	}
	return o.Introduction, true
}

// HasIntroduction returns a boolean if a field has been set.
func (o *APIDoc) HasIntroduction() bool {
	if o != nil && !utils.IsNil(o.Introduction) {
		return true
	}

	return false
}

// SetIntroduction gets a reference to the given string and assigns it to the Introduction field.
func (o *APIDoc) SetIntroduction(v string) {
	o.Introduction = &v
}

// GetLatestReleaseCode returns the LatestReleaseCode field value if set, zero value otherwise.
func (o *APIDoc) GetLatestReleaseCode() int32 {
	if o == nil || utils.IsNil(o.LatestReleaseCode) {
		var ret int32
		return ret
	}
	return *o.LatestReleaseCode
}

// GetLatestReleaseCodeOk returns a tuple with the LatestReleaseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetLatestReleaseCodeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.LatestReleaseCode) {
		return nil, false
	}
	return o.LatestReleaseCode, true
}

// HasLatestReleaseCode returns a boolean if a field has been set.
func (o *APIDoc) HasLatestReleaseCode() bool {
	if o != nil && !utils.IsNil(o.LatestReleaseCode) {
		return true
	}

	return false
}

// SetLatestReleaseCode gets a reference to the given int32 and assigns it to the LatestReleaseCode field.
func (o *APIDoc) SetLatestReleaseCode(v int32) {
	o.LatestReleaseCode = &v
}

// GetLatestReleaseStatus returns the LatestReleaseStatus field value if set, zero value otherwise.
func (o *APIDoc) GetLatestReleaseStatus() string {
	if o == nil || utils.IsNil(o.LatestReleaseStatus) {
		var ret string
		return ret
	}
	return *o.LatestReleaseStatus
}

// GetLatestReleaseStatusOk returns a tuple with the LatestReleaseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetLatestReleaseStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.LatestReleaseStatus) {
		return nil, false
	}
	return o.LatestReleaseStatus, true
}

// HasLatestReleaseStatus returns a boolean if a field has been set.
func (o *APIDoc) HasLatestReleaseStatus() bool {
	if o != nil && !utils.IsNil(o.LatestReleaseStatus) {
		return true
	}

	return false
}

// SetLatestReleaseStatus gets a reference to the given string and assigns it to the LatestReleaseStatus field.
func (o *APIDoc) SetLatestReleaseStatus(v string) {
	o.LatestReleaseStatus = &v
}

// GetLatestSourceType returns the LatestSourceType field value if set, zero value otherwise.
func (o *APIDoc) GetLatestSourceType() string {
	if o == nil || utils.IsNil(o.LatestSourceType) {
		var ret string
		return ret
	}
	return *o.LatestSourceType
}

// GetLatestSourceTypeOk returns a tuple with the LatestSourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetLatestSourceTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.LatestSourceType) {
		return nil, false
	}
	return o.LatestSourceType, true
}

// HasLatestSourceType returns a boolean if a field has been set.
func (o *APIDoc) HasLatestSourceType() bool {
	if o != nil && !utils.IsNil(o.LatestSourceType) {
		return true
	}

	return false
}

// SetLatestSourceType gets a reference to the given string and assigns it to the LatestSourceType field.
func (o *APIDoc) SetLatestSourceType(v string) {
	o.LatestSourceType = &v
}

// GetLatestUpdatedAt returns the LatestUpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *APIDoc) GetLatestUpdatedAt() int32 {
	if o == nil || utils.IsNil(o.LatestUpdatedAt.Get()) {
		var ret int32
		return ret
	}
	return *o.LatestUpdatedAt.Get()
}

// GetLatestUpdatedAtOk returns a tuple with the LatestUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *APIDoc) GetLatestUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestUpdatedAt.Get(), o.LatestUpdatedAt.IsSet()
}

// HasLatestUpdatedAt returns a boolean if a field has been set.
func (o *APIDoc) HasLatestUpdatedAt() bool {
	if o != nil && o.LatestUpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetLatestUpdatedAt gets a reference to the given utils.NullableInt32 and assigns it to the LatestUpdatedAt field.
func (o *APIDoc) SetLatestUpdatedAt(v int32) {
	o.LatestUpdatedAt.Set(&v)
}
// SetLatestUpdatedAtNil sets the value for LatestUpdatedAt to be an explicit nil
func (o *APIDoc) SetLatestUpdatedAtNil() {
	o.LatestUpdatedAt.Set(nil)
}

// UnsetLatestUpdatedAt ensures that no value is present for LatestUpdatedAt, not even an explicit nil
func (o *APIDoc) UnsetLatestUpdatedAt() {
	o.LatestUpdatedAt.Unset()
}

// GetPrefixUri returns the PrefixUri field value if set, zero value otherwise.
func (o *APIDoc) GetPrefixUri() string {
	if o == nil || utils.IsNil(o.PrefixUri) {
		var ret string
		return ret
	}
	return *o.PrefixUri
}

// GetPrefixUriOk returns a tuple with the PrefixUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetPrefixUriOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PrefixUri) {
		return nil, false
	}
	return o.PrefixUri, true
}

// HasPrefixUri returns a boolean if a field has been set.
func (o *APIDoc) HasPrefixUri() bool {
	if o != nil && !utils.IsNil(o.PrefixUri) {
		return true
	}

	return false
}

// SetPrefixUri gets a reference to the given string and assigns it to the PrefixUri field.
func (o *APIDoc) SetPrefixUri(v string) {
	o.PrefixUri = &v
}

// GetPrivateAccess returns the PrivateAccess field value if set, zero value otherwise.
func (o *APIDoc) GetPrivateAccess() bool {
	if o == nil || utils.IsNil(o.PrivateAccess) {
		var ret bool
		return ret
	}
	return *o.PrivateAccess
}

// GetPrivateAccessOk returns a tuple with the PrivateAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetPrivateAccessOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.PrivateAccess) {
		return nil, false
	}
	return o.PrivateAccess, true
}

// HasPrivateAccess returns a boolean if a field has been set.
func (o *APIDoc) HasPrivateAccess() bool {
	if o != nil && !utils.IsNil(o.PrivateAccess) {
		return true
	}

	return false
}

// SetPrivateAccess gets a reference to the given bool and assigns it to the PrivateAccess field.
func (o *APIDoc) SetPrivateAccess(v bool) {
	o.PrivateAccess = &v
}

// GetReleaseCount returns the ReleaseCount field value if set, zero value otherwise.
func (o *APIDoc) GetReleaseCount() int32 {
	if o == nil || utils.IsNil(o.ReleaseCount) {
		var ret int32
		return ret
	}
	return *o.ReleaseCount
}

// GetReleaseCountOk returns a tuple with the ReleaseCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetReleaseCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ReleaseCount) {
		return nil, false
	}
	return o.ReleaseCount, true
}

// HasReleaseCount returns a boolean if a field has been set.
func (o *APIDoc) HasReleaseCount() bool {
	if o != nil && !utils.IsNil(o.ReleaseCount) {
		return true
	}

	return false
}

// SetReleaseCount gets a reference to the given int32 and assigns it to the ReleaseCount field.
func (o *APIDoc) SetReleaseCount(v int32) {
	o.ReleaseCount = &v
}

// GetSharePassword returns the SharePassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *APIDoc) GetSharePassword() string {
	if o == nil || utils.IsNil(o.SharePassword.Get()) {
		var ret string
		return ret
	}
	return *o.SharePassword.Get()
}

// GetSharePasswordOk returns a tuple with the SharePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *APIDoc) GetSharePasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SharePassword.Get(), o.SharePassword.IsSet()
}

// HasSharePassword returns a boolean if a field has been set.
func (o *APIDoc) HasSharePassword() bool {
	if o != nil && o.SharePassword.IsSet() {
		return true
	}

	return false
}

// SetSharePassword gets a reference to the given utils.NullableString and assigns it to the SharePassword field.
func (o *APIDoc) SetSharePassword(v string) {
	o.SharePassword.Set(&v)
}
// SetSharePasswordNil sets the value for SharePassword to be an explicit nil
func (o *APIDoc) SetSharePasswordNil() {
	o.SharePassword.Set(nil)
}

// UnsetSharePassword ensures that no value is present for SharePassword, not even an explicit nil
func (o *APIDoc) UnsetSharePassword() {
	o.SharePassword.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *APIDoc) GetTitle() string {
	if o == nil || utils.IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetTitleOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *APIDoc) HasTitle() bool {
	if o != nil && !utils.IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *APIDoc) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *APIDoc) GetUpdatedAt() int32 {
	if o == nil || utils.IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *APIDoc) HasUpdatedAt() bool {
	if o != nil && !utils.IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *APIDoc) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *APIDoc) GetUri() string {
	if o == nil || utils.IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetUriOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *APIDoc) HasUri() bool {
	if o != nil && !utils.IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *APIDoc) SetUri(v string) {
	o.Uri = &v
}

// GetUseFileDes returns the UseFileDes field value if set, zero value otherwise.
func (o *APIDoc) GetUseFileDes() bool {
	if o == nil || utils.IsNil(o.UseFileDes) {
		var ret bool
		return ret
	}
	return *o.UseFileDes
}

// GetUseFileDesOk returns a tuple with the UseFileDes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetUseFileDesOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.UseFileDes) {
		return nil, false
	}
	return o.UseFileDes, true
}

// HasUseFileDes returns a boolean if a field has been set.
func (o *APIDoc) HasUseFileDes() bool {
	if o != nil && !utils.IsNil(o.UseFileDes) {
		return true
	}

	return false
}

// SetUseFileDes gets a reference to the given bool and assigns it to the UseFileDes field.
func (o *APIDoc) SetUseFileDes(v bool) {
	o.UseFileDes = &v
}

// GetUseFileSetting returns the UseFileSetting field value if set, zero value otherwise.
func (o *APIDoc) GetUseFileSetting() bool {
	if o == nil || utils.IsNil(o.UseFileSetting) {
		var ret bool
		return ret
	}
	return *o.UseFileSetting
}

// GetUseFileSettingOk returns a tuple with the UseFileSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetUseFileSettingOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.UseFileSetting) {
		return nil, false
	}
	return o.UseFileSetting, true
}

// HasUseFileSetting returns a boolean if a field has been set.
func (o *APIDoc) HasUseFileSetting() bool {
	if o != nil && !utils.IsNil(o.UseFileSetting) {
		return true
	}

	return false
}

// SetUseFileSetting gets a reference to the given bool and assigns it to the UseFileSetting field.
func (o *APIDoc) SetUseFileSetting(v bool) {
	o.UseFileSetting = &v
}

// GetViewCount returns the ViewCount field value if set, zero value otherwise.
func (o *APIDoc) GetViewCount() int32 {
	if o == nil || utils.IsNil(o.ViewCount) {
		var ret int32
		return ret
	}
	return *o.ViewCount
}

// GetViewCountOk returns a tuple with the ViewCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDoc) GetViewCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ViewCount) {
		return nil, false
	}
	return o.ViewCount, true
}

// HasViewCount returns a boolean if a field has been set.
func (o *APIDoc) HasViewCount() bool {
	if o != nil && !utils.IsNil(o.ViewCount) {
		return true
	}

	return false
}

// SetViewCount gets a reference to the given int32 and assigns it to the ViewCount field.
func (o *APIDoc) SetViewCount(v int32) {
	o.ViewCount = &v
}

func (o APIDoc) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIDoc) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.APICount) {
		toSerialize["APICount"] = o.APICount
	}
	if !utils.IsNil(o.Code) {
		toSerialize["Code"] = o.Code
	}
	if !utils.IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !utils.IsNil(o.CreatedBy) {
		toSerialize["CreatedBy"] = o.CreatedBy
	}
	if !utils.IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !utils.IsNil(o.Introduction) {
		toSerialize["Introduction"] = o.Introduction
	}
	if !utils.IsNil(o.LatestReleaseCode) {
		toSerialize["LatestReleaseCode"] = o.LatestReleaseCode
	}
	if !utils.IsNil(o.LatestReleaseStatus) {
		toSerialize["LatestReleaseStatus"] = o.LatestReleaseStatus
	}
	if !utils.IsNil(o.LatestSourceType) {
		toSerialize["LatestSourceType"] = o.LatestSourceType
	}
	if o.LatestUpdatedAt.IsSet() {
		toSerialize["LatestUpdatedAt"] = o.LatestUpdatedAt.Get()
	}
	if !utils.IsNil(o.PrefixUri) {
		toSerialize["PrefixUri"] = o.PrefixUri
	}
	if !utils.IsNil(o.PrivateAccess) {
		toSerialize["PrivateAccess"] = o.PrivateAccess
	}
	if !utils.IsNil(o.ReleaseCount) {
		toSerialize["ReleaseCount"] = o.ReleaseCount
	}
	if o.SharePassword.IsSet() {
		toSerialize["SharePassword"] = o.SharePassword.Get()
	}
	if !utils.IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	if !utils.IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if !utils.IsNil(o.Uri) {
		toSerialize["Uri"] = o.Uri
	}
	if !utils.IsNil(o.UseFileDes) {
		toSerialize["UseFileDes"] = o.UseFileDes
	}
	if !utils.IsNil(o.UseFileSetting) {
		toSerialize["UseFileSetting"] = o.UseFileSetting
	}
	if !utils.IsNil(o.ViewCount) {
		toSerialize["ViewCount"] = o.ViewCount
	}
	return toSerialize, nil
}

type NullableAPIDoc struct {
	value *APIDoc
	isSet bool
}

func (v NullableAPIDoc) Get() *APIDoc {
	return v.value
}

func (v *NullableAPIDoc) Set(val *APIDoc) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIDoc) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIDoc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIDoc(val *APIDoc) *NullableAPIDoc {
	return &NullableAPIDoc{value: val, isSet: true}
}

func (v NullableAPIDoc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIDoc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


