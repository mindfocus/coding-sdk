/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ArtifactPackageBean type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ArtifactPackageBean{}

// ArtifactPackageBean 制品包（镜像）
type ArtifactPackageBean struct {
	// 创建时间
	CreatedAt *int64 `json:"CreatedAt,omitempty"`
	// 制品包描述
	Description utils.NullableString `json:"Description,omitempty"`
	// 制品包 ID
	Id *int32 `json:"Id,omitempty"`
	// 最新推送版本的版本号 ID
	LatestVersionId *int32 `json:"LatestVersionId,omitempty"`
	// 最新推送版本的版本号
	LatestVersionName *string `json:"LatestVersionName,omitempty"`
	// 最新推送版本的版本发布状态：1-未发布;2-已发布
	LatestVersionReleaseStatus *int64 `json:"LatestVersionReleaseStatus,omitempty"`
	// 制品包名称
	Name *string `json:"Name,omitempty"`
	// 版本发布策略：1-允许覆盖发布;2-不允许覆盖发布;3-快照策略;4-继承于仓库的策略
	ReleaseStrategy *int64 `json:"ReleaseStrategy,omitempty"`
	// 制品仓库 ID
	RepoId *int32 `json:"RepoId,omitempty"`
	// 包下的版本数量
	VersionCount *int32 `json:"VersionCount,omitempty"`
}

// NewArtifactPackageBean instantiates a new ArtifactPackageBean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactPackageBean() *ArtifactPackageBean {
	this := ArtifactPackageBean{}
	var description string = ""
	this.Description = *utils.NewNullableString(&description)
	var latestVersionName string = ""
	this.LatestVersionName = &latestVersionName
	var name string = ""
	this.Name = &name
	return &this
}

// NewArtifactPackageBeanWithDefaults instantiates a new ArtifactPackageBean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactPackageBeanWithDefaults() *ArtifactPackageBean {
	this := ArtifactPackageBean{}
	var description string = ""
	this.Description = *utils.NewNullableString(&description)
	var latestVersionName string = ""
	this.LatestVersionName = &latestVersionName
	var name string = ""
	this.Name = &name
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetCreatedAt() int64 {
	if o == nil || utils.IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetCreatedAtOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasCreatedAt() bool {
	if o != nil && !utils.IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *ArtifactPackageBean) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtifactPackageBean) GetDescription() string {
	if o == nil || utils.IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactPackageBean) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given utils.NullableString and assigns it to the Description field.
func (o *ArtifactPackageBean) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ArtifactPackageBean) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ArtifactPackageBean) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetId() int32 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ArtifactPackageBean) SetId(v int32) {
	o.Id = &v
}

// GetLatestVersionId returns the LatestVersionId field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetLatestVersionId() int32 {
	if o == nil || utils.IsNil(o.LatestVersionId) {
		var ret int32
		return ret
	}
	return *o.LatestVersionId
}

// GetLatestVersionIdOk returns a tuple with the LatestVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetLatestVersionIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.LatestVersionId) {
		return nil, false
	}
	return o.LatestVersionId, true
}

// HasLatestVersionId returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasLatestVersionId() bool {
	if o != nil && !utils.IsNil(o.LatestVersionId) {
		return true
	}

	return false
}

// SetLatestVersionId gets a reference to the given int32 and assigns it to the LatestVersionId field.
func (o *ArtifactPackageBean) SetLatestVersionId(v int32) {
	o.LatestVersionId = &v
}

// GetLatestVersionName returns the LatestVersionName field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetLatestVersionName() string {
	if o == nil || utils.IsNil(o.LatestVersionName) {
		var ret string
		return ret
	}
	return *o.LatestVersionName
}

// GetLatestVersionNameOk returns a tuple with the LatestVersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetLatestVersionNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.LatestVersionName) {
		return nil, false
	}
	return o.LatestVersionName, true
}

// HasLatestVersionName returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasLatestVersionName() bool {
	if o != nil && !utils.IsNil(o.LatestVersionName) {
		return true
	}

	return false
}

// SetLatestVersionName gets a reference to the given string and assigns it to the LatestVersionName field.
func (o *ArtifactPackageBean) SetLatestVersionName(v string) {
	o.LatestVersionName = &v
}

// GetLatestVersionReleaseStatus returns the LatestVersionReleaseStatus field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetLatestVersionReleaseStatus() int64 {
	if o == nil || utils.IsNil(o.LatestVersionReleaseStatus) {
		var ret int64
		return ret
	}
	return *o.LatestVersionReleaseStatus
}

// GetLatestVersionReleaseStatusOk returns a tuple with the LatestVersionReleaseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetLatestVersionReleaseStatusOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.LatestVersionReleaseStatus) {
		return nil, false
	}
	return o.LatestVersionReleaseStatus, true
}

// HasLatestVersionReleaseStatus returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasLatestVersionReleaseStatus() bool {
	if o != nil && !utils.IsNil(o.LatestVersionReleaseStatus) {
		return true
	}

	return false
}

// SetLatestVersionReleaseStatus gets a reference to the given int64 and assigns it to the LatestVersionReleaseStatus field.
func (o *ArtifactPackageBean) SetLatestVersionReleaseStatus(v int64) {
	o.LatestVersionReleaseStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ArtifactPackageBean) SetName(v string) {
	o.Name = &v
}

// GetReleaseStrategy returns the ReleaseStrategy field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetReleaseStrategy() int64 {
	if o == nil || utils.IsNil(o.ReleaseStrategy) {
		var ret int64
		return ret
	}
	return *o.ReleaseStrategy
}

// GetReleaseStrategyOk returns a tuple with the ReleaseStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetReleaseStrategyOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ReleaseStrategy) {
		return nil, false
	}
	return o.ReleaseStrategy, true
}

// HasReleaseStrategy returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasReleaseStrategy() bool {
	if o != nil && !utils.IsNil(o.ReleaseStrategy) {
		return true
	}

	return false
}

// SetReleaseStrategy gets a reference to the given int64 and assigns it to the ReleaseStrategy field.
func (o *ArtifactPackageBean) SetReleaseStrategy(v int64) {
	o.ReleaseStrategy = &v
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetRepoId() int32 {
	if o == nil || utils.IsNil(o.RepoId) {
		var ret int32
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetRepoIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.RepoId) {
		return nil, false
	}
	return o.RepoId, true
}

// HasRepoId returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasRepoId() bool {
	if o != nil && !utils.IsNil(o.RepoId) {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given int32 and assigns it to the RepoId field.
func (o *ArtifactPackageBean) SetRepoId(v int32) {
	o.RepoId = &v
}

// GetVersionCount returns the VersionCount field value if set, zero value otherwise.
func (o *ArtifactPackageBean) GetVersionCount() int32 {
	if o == nil || utils.IsNil(o.VersionCount) {
		var ret int32
		return ret
	}
	return *o.VersionCount
}

// GetVersionCountOk returns a tuple with the VersionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactPackageBean) GetVersionCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.VersionCount) {
		return nil, false
	}
	return o.VersionCount, true
}

// HasVersionCount returns a boolean if a field has been set.
func (o *ArtifactPackageBean) HasVersionCount() bool {
	if o != nil && !utils.IsNil(o.VersionCount) {
		return true
	}

	return false
}

// SetVersionCount gets a reference to the given int32 and assigns it to the VersionCount field.
func (o *ArtifactPackageBean) SetVersionCount(v int32) {
	o.VersionCount = &v
}

func (o ArtifactPackageBean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactPackageBean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !utils.IsNil(o.LatestVersionId) {
		toSerialize["LatestVersionId"] = o.LatestVersionId
	}
	if !utils.IsNil(o.LatestVersionName) {
		toSerialize["LatestVersionName"] = o.LatestVersionName
	}
	if !utils.IsNil(o.LatestVersionReleaseStatus) {
		toSerialize["LatestVersionReleaseStatus"] = o.LatestVersionReleaseStatus
	}
	if !utils.IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !utils.IsNil(o.ReleaseStrategy) {
		toSerialize["ReleaseStrategy"] = o.ReleaseStrategy
	}
	if !utils.IsNil(o.RepoId) {
		toSerialize["RepoId"] = o.RepoId
	}
	if !utils.IsNil(o.VersionCount) {
		toSerialize["VersionCount"] = o.VersionCount
	}
	return toSerialize, nil
}

type NullableArtifactPackageBean struct {
	value *ArtifactPackageBean
	isSet bool
}

func (v NullableArtifactPackageBean) Get() *ArtifactPackageBean {
	return v.value
}

func (v *NullableArtifactPackageBean) Set(val *ArtifactPackageBean) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactPackageBean) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactPackageBean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactPackageBean(val *ArtifactPackageBean) *NullableArtifactPackageBean {
	return &NullableArtifactPackageBean{value: val, isSet: true}
}

func (v NullableArtifactPackageBean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactPackageBean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


