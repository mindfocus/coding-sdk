/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateCodingCIJobByTeamTemplateRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateCodingCIJobByTeamTemplateRequest{}

// CreateCodingCIJobByTeamTemplateRequest struct for CreateCodingCIJobByTeamTemplateRequest
type CreateCodingCIJobByTeamTemplateRequest struct {
	// 描述信息
	DepotId int64 `json:"DepotId"`
	// 仓库类型
	DepotType string `json:"DepotType"`
	// 构建计划名称
	JobName string `json:"JobName"`
	// 项目 ID
	ProjectId int64 `json:"ProjectId"`
	// 团队构建模版 ID
	TemplateId int64 `json:"TemplateId"`
}

type _CreateCodingCIJobByTeamTemplateRequest CreateCodingCIJobByTeamTemplateRequest

// NewCreateCodingCIJobByTeamTemplateRequest instantiates a new CreateCodingCIJobByTeamTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCodingCIJobByTeamTemplateRequest(depotId int64, depotType string, jobName string, projectId int64, templateId int64) *CreateCodingCIJobByTeamTemplateRequest {
	this := CreateCodingCIJobByTeamTemplateRequest{}
	this.DepotId = depotId
	this.DepotType = depotType
	this.JobName = jobName
	this.ProjectId = projectId
	this.TemplateId = templateId
	return &this
}

// NewCreateCodingCIJobByTeamTemplateRequestWithDefaults instantiates a new CreateCodingCIJobByTeamTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCodingCIJobByTeamTemplateRequestWithDefaults() *CreateCodingCIJobByTeamTemplateRequest {
	this := CreateCodingCIJobByTeamTemplateRequest{}
	var depotId int64 = 0
	this.DepotId = depotId
	var jobName string = ""
	this.JobName = jobName
	var projectId int64 = 0
	this.ProjectId = projectId
	var templateId int64 = 0
	this.TemplateId = templateId
	return &this
}

// GetDepotId returns the DepotId field value
func (o *CreateCodingCIJobByTeamTemplateRequest) GetDepotId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DepotId
}

// GetDepotIdOk returns a tuple with the DepotId field value
// and a boolean to check if the value has been set.
func (o *CreateCodingCIJobByTeamTemplateRequest) GetDepotIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotId, true
}

// SetDepotId sets field value
func (o *CreateCodingCIJobByTeamTemplateRequest) SetDepotId(v int64) {
	o.DepotId = v
}

// GetDepotType returns the DepotType field value
func (o *CreateCodingCIJobByTeamTemplateRequest) GetDepotType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotType
}

// GetDepotTypeOk returns a tuple with the DepotType field value
// and a boolean to check if the value has been set.
func (o *CreateCodingCIJobByTeamTemplateRequest) GetDepotTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotType, true
}

// SetDepotType sets field value
func (o *CreateCodingCIJobByTeamTemplateRequest) SetDepotType(v string) {
	o.DepotType = v
}

// GetJobName returns the JobName field value
func (o *CreateCodingCIJobByTeamTemplateRequest) GetJobName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobName
}

// GetJobNameOk returns a tuple with the JobName field value
// and a boolean to check if the value has been set.
func (o *CreateCodingCIJobByTeamTemplateRequest) GetJobNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobName, true
}

// SetJobName sets field value
func (o *CreateCodingCIJobByTeamTemplateRequest) SetJobName(v string) {
	o.JobName = v
}

// GetProjectId returns the ProjectId field value
func (o *CreateCodingCIJobByTeamTemplateRequest) GetProjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *CreateCodingCIJobByTeamTemplateRequest) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *CreateCodingCIJobByTeamTemplateRequest) SetProjectId(v int64) {
	o.ProjectId = v
}

// GetTemplateId returns the TemplateId field value
func (o *CreateCodingCIJobByTeamTemplateRequest) GetTemplateId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value
// and a boolean to check if the value has been set.
func (o *CreateCodingCIJobByTeamTemplateRequest) GetTemplateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateId, true
}

// SetTemplateId sets field value
func (o *CreateCodingCIJobByTeamTemplateRequest) SetTemplateId(v int64) {
	o.TemplateId = v
}

func (o CreateCodingCIJobByTeamTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCodingCIJobByTeamTemplateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotId"] = o.DepotId
	toSerialize["DepotType"] = o.DepotType
	toSerialize["JobName"] = o.JobName
	toSerialize["ProjectId"] = o.ProjectId
	toSerialize["TemplateId"] = o.TemplateId
	return toSerialize, nil
}

func (o *CreateCodingCIJobByTeamTemplateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotId",
		"DepotType",
		"JobName",
		"ProjectId",
		"TemplateId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCodingCIJobByTeamTemplateRequest := _CreateCodingCIJobByTeamTemplateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCodingCIJobByTeamTemplateRequest)

	if err != nil {
		return err
	}

	*o = CreateCodingCIJobByTeamTemplateRequest(varCreateCodingCIJobByTeamTemplateRequest)

	return err
}

type NullableCreateCodingCIJobByTeamTemplateRequest struct {
	value *CreateCodingCIJobByTeamTemplateRequest
	isSet bool
}

func (v NullableCreateCodingCIJobByTeamTemplateRequest) Get() *CreateCodingCIJobByTeamTemplateRequest {
	return v.value
}

func (v *NullableCreateCodingCIJobByTeamTemplateRequest) Set(val *CreateCodingCIJobByTeamTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCodingCIJobByTeamTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCodingCIJobByTeamTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCodingCIJobByTeamTemplateRequest(val *CreateCodingCIJobByTeamTemplateRequest) *NullableCreateCodingCIJobByTeamTemplateRequest {
	return &NullableCreateCodingCIJobByTeamTemplateRequest{value: val, isSet: true}
}

func (v NullableCreateCodingCIJobByTeamTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCodingCIJobByTeamTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


