/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the BlobDetail type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &BlobDetail{}

// BlobDetail git Blob 信息
type BlobDetail struct {
	// blob 的 Sha 值
	BlobSha utils.NullableString `json:"BlobSha,omitempty"`
	// blob 内容使用 base64编码后的内容
	Content utils.NullableString `json:"Content,omitempty"`
	// 编码方式(目前就base64一种)
	Encoding utils.NullableString `json:"Encoding,omitempty"`
	// blob大小(byte)
	Size utils.NullableInt64 `json:"Size,omitempty"`
}

// NewBlobDetail instantiates a new BlobDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlobDetail() *BlobDetail {
	this := BlobDetail{}
	var blobSha string = ""
	this.BlobSha = *utils.NewNullableString(&blobSha)
	var content string = ""
	this.Content = *utils.NewNullableString(&content)
	var encoding string = ""
	this.Encoding = *utils.NewNullableString(&encoding)
	return &this
}

// NewBlobDetailWithDefaults instantiates a new BlobDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlobDetailWithDefaults() *BlobDetail {
	this := BlobDetail{}
	var blobSha string = ""
	this.BlobSha = *utils.NewNullableString(&blobSha)
	var content string = ""
	this.Content = *utils.NewNullableString(&content)
	var encoding string = ""
	this.Encoding = *utils.NewNullableString(&encoding)
	return &this
}

// GetBlobSha returns the BlobSha field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlobDetail) GetBlobSha() string {
	if o == nil || utils.IsNil(o.BlobSha.Get()) {
		var ret string
		return ret
	}
	return *o.BlobSha.Get()
}

// GetBlobShaOk returns a tuple with the BlobSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlobDetail) GetBlobShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlobSha.Get(), o.BlobSha.IsSet()
}

// HasBlobSha returns a boolean if a field has been set.
func (o *BlobDetail) HasBlobSha() bool {
	if o != nil && o.BlobSha.IsSet() {
		return true
	}

	return false
}

// SetBlobSha gets a reference to the given utils.NullableString and assigns it to the BlobSha field.
func (o *BlobDetail) SetBlobSha(v string) {
	o.BlobSha.Set(&v)
}
// SetBlobShaNil sets the value for BlobSha to be an explicit nil
func (o *BlobDetail) SetBlobShaNil() {
	o.BlobSha.Set(nil)
}

// UnsetBlobSha ensures that no value is present for BlobSha, not even an explicit nil
func (o *BlobDetail) UnsetBlobSha() {
	o.BlobSha.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlobDetail) GetContent() string {
	if o == nil || utils.IsNil(o.Content.Get()) {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlobDetail) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *BlobDetail) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given utils.NullableString and assigns it to the Content field.
func (o *BlobDetail) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *BlobDetail) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *BlobDetail) UnsetContent() {
	o.Content.Unset()
}

// GetEncoding returns the Encoding field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlobDetail) GetEncoding() string {
	if o == nil || utils.IsNil(o.Encoding.Get()) {
		var ret string
		return ret
	}
	return *o.Encoding.Get()
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlobDetail) GetEncodingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Encoding.Get(), o.Encoding.IsSet()
}

// HasEncoding returns a boolean if a field has been set.
func (o *BlobDetail) HasEncoding() bool {
	if o != nil && o.Encoding.IsSet() {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given utils.NullableString and assigns it to the Encoding field.
func (o *BlobDetail) SetEncoding(v string) {
	o.Encoding.Set(&v)
}
// SetEncodingNil sets the value for Encoding to be an explicit nil
func (o *BlobDetail) SetEncodingNil() {
	o.Encoding.Set(nil)
}

// UnsetEncoding ensures that no value is present for Encoding, not even an explicit nil
func (o *BlobDetail) UnsetEncoding() {
	o.Encoding.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlobDetail) GetSize() int64 {
	if o == nil || utils.IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlobDetail) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *BlobDetail) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given utils.NullableInt64 and assigns it to the Size field.
func (o *BlobDetail) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *BlobDetail) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *BlobDetail) UnsetSize() {
	o.Size.Unset()
}

func (o BlobDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlobDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BlobSha.IsSet() {
		toSerialize["BlobSha"] = o.BlobSha.Get()
	}
	if o.Content.IsSet() {
		toSerialize["Content"] = o.Content.Get()
	}
	if o.Encoding.IsSet() {
		toSerialize["Encoding"] = o.Encoding.Get()
	}
	if o.Size.IsSet() {
		toSerialize["Size"] = o.Size.Get()
	}
	return toSerialize, nil
}

type NullableBlobDetail struct {
	value *BlobDetail
	isSet bool
}

func (v NullableBlobDetail) Get() *BlobDetail {
	return v.value
}

func (v *NullableBlobDetail) Set(val *BlobDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableBlobDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableBlobDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlobDetail(val *BlobDetail) *NullableBlobDetail {
	return &NullableBlobDetail{value: val, isSet: true}
}

func (v NullableBlobDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlobDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


