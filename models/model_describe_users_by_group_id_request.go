/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeUsersByGroupIdRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeUsersByGroupIdRequest{}

// DescribeUsersByGroupIdRequest struct for DescribeUsersByGroupIdRequest
type DescribeUsersByGroupIdRequest struct {
	// 查询条件：GroupId
	GroupId int32 `json:"GroupId"`
	// 请求页数
	PageNumber int32 `json:"PageNumber"`
	// 请求条数
	PageSize int32 `json:"PageSize"`
}

type _DescribeUsersByGroupIdRequest DescribeUsersByGroupIdRequest

// NewDescribeUsersByGroupIdRequest instantiates a new DescribeUsersByGroupIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeUsersByGroupIdRequest(groupId int32, pageNumber int32, pageSize int32) *DescribeUsersByGroupIdRequest {
	this := DescribeUsersByGroupIdRequest{}
	this.GroupId = groupId
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	return &this
}

// NewDescribeUsersByGroupIdRequestWithDefaults instantiates a new DescribeUsersByGroupIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeUsersByGroupIdRequestWithDefaults() *DescribeUsersByGroupIdRequest {
	this := DescribeUsersByGroupIdRequest{}
	return &this
}

// GetGroupId returns the GroupId field value
func (o *DescribeUsersByGroupIdRequest) GetGroupId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *DescribeUsersByGroupIdRequest) GetGroupIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *DescribeUsersByGroupIdRequest) SetGroupId(v int32) {
	o.GroupId = v
}

// GetPageNumber returns the PageNumber field value
func (o *DescribeUsersByGroupIdRequest) GetPageNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *DescribeUsersByGroupIdRequest) GetPageNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *DescribeUsersByGroupIdRequest) SetPageNumber(v int32) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *DescribeUsersByGroupIdRequest) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *DescribeUsersByGroupIdRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *DescribeUsersByGroupIdRequest) SetPageSize(v int32) {
	o.PageSize = v
}

func (o DescribeUsersByGroupIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeUsersByGroupIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["GroupId"] = o.GroupId
	toSerialize["PageNumber"] = o.PageNumber
	toSerialize["PageSize"] = o.PageSize
	return toSerialize, nil
}

func (o *DescribeUsersByGroupIdRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"GroupId",
		"PageNumber",
		"PageSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeUsersByGroupIdRequest := _DescribeUsersByGroupIdRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeUsersByGroupIdRequest)

	if err != nil {
		return err
	}

	*o = DescribeUsersByGroupIdRequest(varDescribeUsersByGroupIdRequest)

	return err
}

type NullableDescribeUsersByGroupIdRequest struct {
	value *DescribeUsersByGroupIdRequest
	isSet bool
}

func (v NullableDescribeUsersByGroupIdRequest) Get() *DescribeUsersByGroupIdRequest {
	return v.value
}

func (v *NullableDescribeUsersByGroupIdRequest) Set(val *DescribeUsersByGroupIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeUsersByGroupIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeUsersByGroupIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeUsersByGroupIdRequest(val *DescribeUsersByGroupIdRequest) *NullableDescribeUsersByGroupIdRequest {
	return &NullableDescribeUsersByGroupIdRequest{value: val, isSet: true}
}

func (v NullableDescribeUsersByGroupIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeUsersByGroupIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


