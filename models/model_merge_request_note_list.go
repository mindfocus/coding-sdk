/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the MergeRequestNoteList type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MergeRequestNoteList{}

// MergeRequestNoteList 合并请求评论列表
type MergeRequestNoteList struct {
	// 合并请求中父子评论列表、diff信息同行评论列表
	Note []MergeRequestNote `json:"Note,omitempty"`
}

// NewMergeRequestNoteList instantiates a new MergeRequestNoteList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeRequestNoteList() *MergeRequestNoteList {
	this := MergeRequestNoteList{}
	return &this
}

// NewMergeRequestNoteListWithDefaults instantiates a new MergeRequestNoteList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeRequestNoteListWithDefaults() *MergeRequestNoteList {
	this := MergeRequestNoteList{}
	return &this
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *MergeRequestNoteList) GetNote() []MergeRequestNote {
	if o == nil || utils.IsNil(o.Note) {
		var ret []MergeRequestNote
		return ret
	}
	return o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeRequestNoteList) GetNoteOk() ([]MergeRequestNote, bool) {
	if o == nil || utils.IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *MergeRequestNoteList) HasNote() bool {
	if o != nil && !utils.IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given []MergeRequestNote and assigns it to the Note field.
func (o *MergeRequestNoteList) SetNote(v []MergeRequestNote) {
	o.Note = v
}

func (o MergeRequestNoteList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeRequestNoteList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Note) {
		toSerialize["Note"] = o.Note
	}
	return toSerialize, nil
}

type NullableMergeRequestNoteList struct {
	value *MergeRequestNoteList
	isSet bool
}

func (v NullableMergeRequestNoteList) Get() *MergeRequestNoteList {
	return v.value
}

func (v *NullableMergeRequestNoteList) Set(val *MergeRequestNoteList) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeRequestNoteList) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeRequestNoteList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeRequestNoteList(val *MergeRequestNoteList) *NullableMergeRequestNoteList {
	return &NullableMergeRequestNoteList{value: val, isSet: true}
}

func (v NullableMergeRequestNoteList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeRequestNoteList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


