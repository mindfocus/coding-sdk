/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DepotBranchType type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DepotBranchType{}

// DepotBranchType 仓库规范的分支类型
type DepotBranchType struct {
	// 分支类型的描述
	Description utils.NullableString `json:"Description,omitempty"`
	// 分支类型名字
	Name utils.NullableString `json:"Name,omitempty"`
	// 分支类型的规则
	Rule utils.NullableString `json:"Rule,omitempty"`
}

// NewDepotBranchType instantiates a new DepotBranchType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepotBranchType() *DepotBranchType {
	this := DepotBranchType{}
	var description string = ""
	this.Description = *utils.NewNullableString(&description)
	var name string = ""
	this.Name = *utils.NewNullableString(&name)
	var rule string = ""
	this.Rule = *utils.NewNullableString(&rule)
	return &this
}

// NewDepotBranchTypeWithDefaults instantiates a new DepotBranchType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepotBranchTypeWithDefaults() *DepotBranchType {
	this := DepotBranchType{}
	var description string = ""
	this.Description = *utils.NewNullableString(&description)
	var name string = ""
	this.Name = *utils.NewNullableString(&name)
	var rule string = ""
	this.Rule = *utils.NewNullableString(&rule)
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepotBranchType) GetDescription() string {
	if o == nil || utils.IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepotBranchType) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *DepotBranchType) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given utils.NullableString and assigns it to the Description field.
func (o *DepotBranchType) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *DepotBranchType) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *DepotBranchType) UnsetDescription() {
	o.Description.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepotBranchType) GetName() string {
	if o == nil || utils.IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepotBranchType) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *DepotBranchType) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given utils.NullableString and assigns it to the Name field.
func (o *DepotBranchType) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *DepotBranchType) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *DepotBranchType) UnsetName() {
	o.Name.Unset()
}

// GetRule returns the Rule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepotBranchType) GetRule() string {
	if o == nil || utils.IsNil(o.Rule.Get()) {
		var ret string
		return ret
	}
	return *o.Rule.Get()
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepotBranchType) GetRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rule.Get(), o.Rule.IsSet()
}

// HasRule returns a boolean if a field has been set.
func (o *DepotBranchType) HasRule() bool {
	if o != nil && o.Rule.IsSet() {
		return true
	}

	return false
}

// SetRule gets a reference to the given utils.NullableString and assigns it to the Rule field.
func (o *DepotBranchType) SetRule(v string) {
	o.Rule.Set(&v)
}
// SetRuleNil sets the value for Rule to be an explicit nil
func (o *DepotBranchType) SetRuleNil() {
	o.Rule.Set(nil)
}

// UnsetRule ensures that no value is present for Rule, not even an explicit nil
func (o *DepotBranchType) UnsetRule() {
	o.Rule.Unset()
}

func (o DepotBranchType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepotBranchType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Rule.IsSet() {
		toSerialize["Rule"] = o.Rule.Get()
	}
	return toSerialize, nil
}

type NullableDepotBranchType struct {
	value *DepotBranchType
	isSet bool
}

func (v NullableDepotBranchType) Get() *DepotBranchType {
	return v.value
}

func (v *NullableDepotBranchType) Set(val *DepotBranchType) {
	v.value = val
	v.isSet = true
}

func (v NullableDepotBranchType) IsSet() bool {
	return v.isSet
}

func (v *NullableDepotBranchType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepotBranchType(val *DepotBranchType) *NullableDepotBranchType {
	return &NullableDepotBranchType{value: val, isSet: true}
}

func (v NullableDepotBranchType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepotBranchType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


