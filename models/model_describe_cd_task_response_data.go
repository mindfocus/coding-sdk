/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeCdTaskResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeCdTaskResponseData{}

// DescribeCdTaskResponseData DescribeCdTaskResponseData 结构
type DescribeCdTaskResponseData struct {
	// 应用名
	Application *string `json:"Application,omitempty"`
	// CD 任务执行记录
	TaskExecutionJsonContent *string `json:"TaskExecutionJsonContent,omitempty"`
	// 任务执行状态
	TaskExecutionStatus *string `json:"TaskExecutionStatus,omitempty"`
}

// NewDescribeCdTaskResponseData instantiates a new DescribeCdTaskResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCdTaskResponseData() *DescribeCdTaskResponseData {
	this := DescribeCdTaskResponseData{}
	var application string = ""
	this.Application = &application
	var taskExecutionJsonContent string = ""
	this.TaskExecutionJsonContent = &taskExecutionJsonContent
	var taskExecutionStatus string = ""
	this.TaskExecutionStatus = &taskExecutionStatus
	return &this
}

// NewDescribeCdTaskResponseDataWithDefaults instantiates a new DescribeCdTaskResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCdTaskResponseDataWithDefaults() *DescribeCdTaskResponseData {
	this := DescribeCdTaskResponseData{}
	var application string = ""
	this.Application = &application
	var taskExecutionJsonContent string = ""
	this.TaskExecutionJsonContent = &taskExecutionJsonContent
	var taskExecutionStatus string = ""
	this.TaskExecutionStatus = &taskExecutionStatus
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *DescribeCdTaskResponseData) GetApplication() string {
	if o == nil || utils.IsNil(o.Application) {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdTaskResponseData) GetApplicationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *DescribeCdTaskResponseData) HasApplication() bool {
	if o != nil && !utils.IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *DescribeCdTaskResponseData) SetApplication(v string) {
	o.Application = &v
}

// GetTaskExecutionJsonContent returns the TaskExecutionJsonContent field value if set, zero value otherwise.
func (o *DescribeCdTaskResponseData) GetTaskExecutionJsonContent() string {
	if o == nil || utils.IsNil(o.TaskExecutionJsonContent) {
		var ret string
		return ret
	}
	return *o.TaskExecutionJsonContent
}

// GetTaskExecutionJsonContentOk returns a tuple with the TaskExecutionJsonContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdTaskResponseData) GetTaskExecutionJsonContentOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TaskExecutionJsonContent) {
		return nil, false
	}
	return o.TaskExecutionJsonContent, true
}

// HasTaskExecutionJsonContent returns a boolean if a field has been set.
func (o *DescribeCdTaskResponseData) HasTaskExecutionJsonContent() bool {
	if o != nil && !utils.IsNil(o.TaskExecutionJsonContent) {
		return true
	}

	return false
}

// SetTaskExecutionJsonContent gets a reference to the given string and assigns it to the TaskExecutionJsonContent field.
func (o *DescribeCdTaskResponseData) SetTaskExecutionJsonContent(v string) {
	o.TaskExecutionJsonContent = &v
}

// GetTaskExecutionStatus returns the TaskExecutionStatus field value if set, zero value otherwise.
func (o *DescribeCdTaskResponseData) GetTaskExecutionStatus() string {
	if o == nil || utils.IsNil(o.TaskExecutionStatus) {
		var ret string
		return ret
	}
	return *o.TaskExecutionStatus
}

// GetTaskExecutionStatusOk returns a tuple with the TaskExecutionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdTaskResponseData) GetTaskExecutionStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TaskExecutionStatus) {
		return nil, false
	}
	return o.TaskExecutionStatus, true
}

// HasTaskExecutionStatus returns a boolean if a field has been set.
func (o *DescribeCdTaskResponseData) HasTaskExecutionStatus() bool {
	if o != nil && !utils.IsNil(o.TaskExecutionStatus) {
		return true
	}

	return false
}

// SetTaskExecutionStatus gets a reference to the given string and assigns it to the TaskExecutionStatus field.
func (o *DescribeCdTaskResponseData) SetTaskExecutionStatus(v string) {
	o.TaskExecutionStatus = &v
}

func (o DescribeCdTaskResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCdTaskResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Application) {
		toSerialize["Application"] = o.Application
	}
	if !utils.IsNil(o.TaskExecutionJsonContent) {
		toSerialize["TaskExecutionJsonContent"] = o.TaskExecutionJsonContent
	}
	if !utils.IsNil(o.TaskExecutionStatus) {
		toSerialize["TaskExecutionStatus"] = o.TaskExecutionStatus
	}
	return toSerialize, nil
}

type NullableDescribeCdTaskResponseData struct {
	value *DescribeCdTaskResponseData
	isSet bool
}

func (v NullableDescribeCdTaskResponseData) Get() *DescribeCdTaskResponseData {
	return v.value
}

func (v *NullableDescribeCdTaskResponseData) Set(val *DescribeCdTaskResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCdTaskResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCdTaskResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCdTaskResponseData(val *DescribeCdTaskResponseData) *NullableDescribeCdTaskResponseData {
	return &NullableDescribeCdTaskResponseData{value: val, isSet: true}
}

func (v NullableDescribeCdTaskResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCdTaskResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


