/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the IssueFilterListData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &IssueFilterListData{}

// IssueFilterListData 事项过滤器列表数据结构
type IssueFilterListData struct {
	// 自定义过滤器列表
	CustomFilterList []IssueFilter `json:"CustomFilterList,omitempty"`
	// 系统过滤器列表
	SystemFilterList []IssueFilter `json:"SystemFilterList,omitempty"`
}

// NewIssueFilterListData instantiates a new IssueFilterListData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueFilterListData() *IssueFilterListData {
	this := IssueFilterListData{}
	return &this
}

// NewIssueFilterListDataWithDefaults instantiates a new IssueFilterListData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueFilterListDataWithDefaults() *IssueFilterListData {
	this := IssueFilterListData{}
	return &this
}

// GetCustomFilterList returns the CustomFilterList field value if set, zero value otherwise.
func (o *IssueFilterListData) GetCustomFilterList() []IssueFilter {
	if o == nil || utils.IsNil(o.CustomFilterList) {
		var ret []IssueFilter
		return ret
	}
	return o.CustomFilterList
}

// GetCustomFilterListOk returns a tuple with the CustomFilterList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueFilterListData) GetCustomFilterListOk() ([]IssueFilter, bool) {
	if o == nil || utils.IsNil(o.CustomFilterList) {
		return nil, false
	}
	return o.CustomFilterList, true
}

// HasCustomFilterList returns a boolean if a field has been set.
func (o *IssueFilterListData) HasCustomFilterList() bool {
	if o != nil && !utils.IsNil(o.CustomFilterList) {
		return true
	}

	return false
}

// SetCustomFilterList gets a reference to the given []IssueFilter and assigns it to the CustomFilterList field.
func (o *IssueFilterListData) SetCustomFilterList(v []IssueFilter) {
	o.CustomFilterList = v
}

// GetSystemFilterList returns the SystemFilterList field value if set, zero value otherwise.
func (o *IssueFilterListData) GetSystemFilterList() []IssueFilter {
	if o == nil || utils.IsNil(o.SystemFilterList) {
		var ret []IssueFilter
		return ret
	}
	return o.SystemFilterList
}

// GetSystemFilterListOk returns a tuple with the SystemFilterList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueFilterListData) GetSystemFilterListOk() ([]IssueFilter, bool) {
	if o == nil || utils.IsNil(o.SystemFilterList) {
		return nil, false
	}
	return o.SystemFilterList, true
}

// HasSystemFilterList returns a boolean if a field has been set.
func (o *IssueFilterListData) HasSystemFilterList() bool {
	if o != nil && !utils.IsNil(o.SystemFilterList) {
		return true
	}

	return false
}

// SetSystemFilterList gets a reference to the given []IssueFilter and assigns it to the SystemFilterList field.
func (o *IssueFilterListData) SetSystemFilterList(v []IssueFilter) {
	o.SystemFilterList = v
}

func (o IssueFilterListData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueFilterListData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CustomFilterList) {
		toSerialize["CustomFilterList"] = o.CustomFilterList
	}
	if !utils.IsNil(o.SystemFilterList) {
		toSerialize["SystemFilterList"] = o.SystemFilterList
	}
	return toSerialize, nil
}

type NullableIssueFilterListData struct {
	value *IssueFilterListData
	isSet bool
}

func (v NullableIssueFilterListData) Get() *IssueFilterListData {
	return v.value
}

func (v *NullableIssueFilterListData) Set(val *IssueFilterListData) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueFilterListData) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueFilterListData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueFilterListData(val *IssueFilterListData) *NullableIssueFilterListData {
	return &NullableIssueFilterListData{value: val, isSet: true}
}

func (v NullableIssueFilterListData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueFilterListData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


