/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DeleteAllUsersOnGroupRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DeleteAllUsersOnGroupRequest{}

// DeleteAllUsersOnGroupRequest struct for DeleteAllUsersOnGroupRequest
type DeleteAllUsersOnGroupRequest struct {
	// 用户组id
	GroupId int64 `json:"GroupId"`
}

type _DeleteAllUsersOnGroupRequest DeleteAllUsersOnGroupRequest

// NewDeleteAllUsersOnGroupRequest instantiates a new DeleteAllUsersOnGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAllUsersOnGroupRequest(groupId int64) *DeleteAllUsersOnGroupRequest {
	this := DeleteAllUsersOnGroupRequest{}
	this.GroupId = groupId
	return &this
}

// NewDeleteAllUsersOnGroupRequestWithDefaults instantiates a new DeleteAllUsersOnGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAllUsersOnGroupRequestWithDefaults() *DeleteAllUsersOnGroupRequest {
	this := DeleteAllUsersOnGroupRequest{}
	return &this
}

// GetGroupId returns the GroupId field value
func (o *DeleteAllUsersOnGroupRequest) GetGroupId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *DeleteAllUsersOnGroupRequest) GetGroupIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *DeleteAllUsersOnGroupRequest) SetGroupId(v int64) {
	o.GroupId = v
}

func (o DeleteAllUsersOnGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteAllUsersOnGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["GroupId"] = o.GroupId
	return toSerialize, nil
}

func (o *DeleteAllUsersOnGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"GroupId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteAllUsersOnGroupRequest := _DeleteAllUsersOnGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteAllUsersOnGroupRequest)

	if err != nil {
		return err
	}

	*o = DeleteAllUsersOnGroupRequest(varDeleteAllUsersOnGroupRequest)

	return err
}

type NullableDeleteAllUsersOnGroupRequest struct {
	value *DeleteAllUsersOnGroupRequest
	isSet bool
}

func (v NullableDeleteAllUsersOnGroupRequest) Get() *DeleteAllUsersOnGroupRequest {
	return v.value
}

func (v *NullableDeleteAllUsersOnGroupRequest) Set(val *DeleteAllUsersOnGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAllUsersOnGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAllUsersOnGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAllUsersOnGroupRequest(val *DeleteAllUsersOnGroupRequest) *NullableDeleteAllUsersOnGroupRequest {
	return &NullableDeleteAllUsersOnGroupRequest{value: val, isSet: true}
}

func (v NullableDeleteAllUsersOnGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAllUsersOnGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


