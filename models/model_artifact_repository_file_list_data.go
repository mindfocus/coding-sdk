/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ArtifactRepositoryFileListData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ArtifactRepositoryFileListData{}

// ArtifactRepositoryFileListData 制品仓库文件列表
type ArtifactRepositoryFileListData struct {
	// 翻页符，最后一页该字段为空
	ContinuationToken *string `json:"ContinuationToken,omitempty"`
	// 文件列表
	InstanceSet []ArtifactRepositoryFile `json:"InstanceSet,omitempty"`
}

// NewArtifactRepositoryFileListData instantiates a new ArtifactRepositoryFileListData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactRepositoryFileListData() *ArtifactRepositoryFileListData {
	this := ArtifactRepositoryFileListData{}
	var continuationToken string = ""
	this.ContinuationToken = &continuationToken
	return &this
}

// NewArtifactRepositoryFileListDataWithDefaults instantiates a new ArtifactRepositoryFileListData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactRepositoryFileListDataWithDefaults() *ArtifactRepositoryFileListData {
	this := ArtifactRepositoryFileListData{}
	var continuationToken string = ""
	this.ContinuationToken = &continuationToken
	return &this
}

// GetContinuationToken returns the ContinuationToken field value if set, zero value otherwise.
func (o *ArtifactRepositoryFileListData) GetContinuationToken() string {
	if o == nil || utils.IsNil(o.ContinuationToken) {
		var ret string
		return ret
	}
	return *o.ContinuationToken
}

// GetContinuationTokenOk returns a tuple with the ContinuationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryFileListData) GetContinuationTokenOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ContinuationToken) {
		return nil, false
	}
	return o.ContinuationToken, true
}

// HasContinuationToken returns a boolean if a field has been set.
func (o *ArtifactRepositoryFileListData) HasContinuationToken() bool {
	if o != nil && !utils.IsNil(o.ContinuationToken) {
		return true
	}

	return false
}

// SetContinuationToken gets a reference to the given string and assigns it to the ContinuationToken field.
func (o *ArtifactRepositoryFileListData) SetContinuationToken(v string) {
	o.ContinuationToken = &v
}

// GetInstanceSet returns the InstanceSet field value if set, zero value otherwise.
func (o *ArtifactRepositoryFileListData) GetInstanceSet() []ArtifactRepositoryFile {
	if o == nil || utils.IsNil(o.InstanceSet) {
		var ret []ArtifactRepositoryFile
		return ret
	}
	return o.InstanceSet
}

// GetInstanceSetOk returns a tuple with the InstanceSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryFileListData) GetInstanceSetOk() ([]ArtifactRepositoryFile, bool) {
	if o == nil || utils.IsNil(o.InstanceSet) {
		return nil, false
	}
	return o.InstanceSet, true
}

// HasInstanceSet returns a boolean if a field has been set.
func (o *ArtifactRepositoryFileListData) HasInstanceSet() bool {
	if o != nil && !utils.IsNil(o.InstanceSet) {
		return true
	}

	return false
}

// SetInstanceSet gets a reference to the given []ArtifactRepositoryFile and assigns it to the InstanceSet field.
func (o *ArtifactRepositoryFileListData) SetInstanceSet(v []ArtifactRepositoryFile) {
	o.InstanceSet = v
}

func (o ArtifactRepositoryFileListData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactRepositoryFileListData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.ContinuationToken) {
		toSerialize["ContinuationToken"] = o.ContinuationToken
	}
	if !utils.IsNil(o.InstanceSet) {
		toSerialize["InstanceSet"] = o.InstanceSet
	}
	return toSerialize, nil
}

type NullableArtifactRepositoryFileListData struct {
	value *ArtifactRepositoryFileListData
	isSet bool
}

func (v NullableArtifactRepositoryFileListData) Get() *ArtifactRepositoryFileListData {
	return v.value
}

func (v *NullableArtifactRepositoryFileListData) Set(val *ArtifactRepositoryFileListData) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactRepositoryFileListData) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactRepositoryFileListData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactRepositoryFileListData(val *ArtifactRepositoryFileListData) *NullableArtifactRepositoryFileListData {
	return &NullableArtifactRepositoryFileListData{value: val, isSet: true}
}

func (v NullableArtifactRepositoryFileListData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactRepositoryFileListData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


