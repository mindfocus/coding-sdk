/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DeleteDepotFilePushRuleDenyPrivilegeRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DeleteDepotFilePushRuleDenyPrivilegeRequest{}

// DeleteDepotFilePushRuleDenyPrivilegeRequest struct for DeleteDepotFilePushRuleDenyPrivilegeRequest
type DeleteDepotFilePushRuleDenyPrivilegeRequest struct {
	// 仓库路径
	DepotPath string `json:"DepotPath"`
	// 文件推送规则 ID
	FilePushRuleId int64 `json:"FilePushRuleId"`
	// 特权者是角色（IsUser和IsRole有且只能有一个为true）
	IsRole bool `json:"IsRole"`
	// 特权者是用户（IsUser和IsRole有且只能有一个为true）
	IsUser bool `json:"IsUser"`
	// 角色 ID
	RoleId *int64 `json:"RoleId,omitempty"`
	// 用户全局 key
	UserGlobalKey string `json:"UserGlobalKey"`
}

type _DeleteDepotFilePushRuleDenyPrivilegeRequest DeleteDepotFilePushRuleDenyPrivilegeRequest

// NewDeleteDepotFilePushRuleDenyPrivilegeRequest instantiates a new DeleteDepotFilePushRuleDenyPrivilegeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDepotFilePushRuleDenyPrivilegeRequest(depotPath string, filePushRuleId int64, isRole bool, isUser bool, userGlobalKey string) *DeleteDepotFilePushRuleDenyPrivilegeRequest {
	this := DeleteDepotFilePushRuleDenyPrivilegeRequest{}
	this.DepotPath = depotPath
	this.FilePushRuleId = filePushRuleId
	this.IsRole = isRole
	this.IsUser = isUser
	this.UserGlobalKey = userGlobalKey
	return &this
}

// NewDeleteDepotFilePushRuleDenyPrivilegeRequestWithDefaults instantiates a new DeleteDepotFilePushRuleDenyPrivilegeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDepotFilePushRuleDenyPrivilegeRequestWithDefaults() *DeleteDepotFilePushRuleDenyPrivilegeRequest {
	this := DeleteDepotFilePushRuleDenyPrivilegeRequest{}
	return &this
}

// GetDepotPath returns the DepotPath field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetDepotPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value
// and a boolean to check if the value has been set.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetDepotPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotPath, true
}

// SetDepotPath sets field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) SetDepotPath(v string) {
	o.DepotPath = v
}

// GetFilePushRuleId returns the FilePushRuleId field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetFilePushRuleId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FilePushRuleId
}

// GetFilePushRuleIdOk returns a tuple with the FilePushRuleId field value
// and a boolean to check if the value has been set.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetFilePushRuleIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilePushRuleId, true
}

// SetFilePushRuleId sets field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) SetFilePushRuleId(v int64) {
	o.FilePushRuleId = v
}

// GetIsRole returns the IsRole field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetIsRole() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRole
}

// GetIsRoleOk returns a tuple with the IsRole field value
// and a boolean to check if the value has been set.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetIsRoleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRole, true
}

// SetIsRole sets field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) SetIsRole(v bool) {
	o.IsRole = v
}

// GetIsUser returns the IsUser field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetIsUser() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUser
}

// GetIsUserOk returns a tuple with the IsUser field value
// and a boolean to check if the value has been set.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetIsUserOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUser, true
}

// SetIsUser sets field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) SetIsUser(v bool) {
	o.IsUser = v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetRoleId() int64 {
	if o == nil || utils.IsNil(o.RoleId) {
		var ret int64
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetRoleIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) HasRoleId() bool {
	if o != nil && !utils.IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int64 and assigns it to the RoleId field.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) SetRoleId(v int64) {
	o.RoleId = &v
}

// GetUserGlobalKey returns the UserGlobalKey field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetUserGlobalKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserGlobalKey
}

// GetUserGlobalKeyOk returns a tuple with the UserGlobalKey field value
// and a boolean to check if the value has been set.
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) GetUserGlobalKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserGlobalKey, true
}

// SetUserGlobalKey sets field value
func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) SetUserGlobalKey(v string) {
	o.UserGlobalKey = v
}

func (o DeleteDepotFilePushRuleDenyPrivilegeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteDepotFilePushRuleDenyPrivilegeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotPath"] = o.DepotPath
	toSerialize["FilePushRuleId"] = o.FilePushRuleId
	toSerialize["IsRole"] = o.IsRole
	toSerialize["IsUser"] = o.IsUser
	if !utils.IsNil(o.RoleId) {
		toSerialize["RoleId"] = o.RoleId
	}
	toSerialize["UserGlobalKey"] = o.UserGlobalKey
	return toSerialize, nil
}

func (o *DeleteDepotFilePushRuleDenyPrivilegeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotPath",
		"FilePushRuleId",
		"IsRole",
		"IsUser",
		"UserGlobalKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteDepotFilePushRuleDenyPrivilegeRequest := _DeleteDepotFilePushRuleDenyPrivilegeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteDepotFilePushRuleDenyPrivilegeRequest)

	if err != nil {
		return err
	}

	*o = DeleteDepotFilePushRuleDenyPrivilegeRequest(varDeleteDepotFilePushRuleDenyPrivilegeRequest)

	return err
}

type NullableDeleteDepotFilePushRuleDenyPrivilegeRequest struct {
	value *DeleteDepotFilePushRuleDenyPrivilegeRequest
	isSet bool
}

func (v NullableDeleteDepotFilePushRuleDenyPrivilegeRequest) Get() *DeleteDepotFilePushRuleDenyPrivilegeRequest {
	return v.value
}

func (v *NullableDeleteDepotFilePushRuleDenyPrivilegeRequest) Set(val *DeleteDepotFilePushRuleDenyPrivilegeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDepotFilePushRuleDenyPrivilegeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDepotFilePushRuleDenyPrivilegeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDepotFilePushRuleDenyPrivilegeRequest(val *DeleteDepotFilePushRuleDenyPrivilegeRequest) *NullableDeleteDepotFilePushRuleDenyPrivilegeRequest {
	return &NullableDeleteDepotFilePushRuleDenyPrivilegeRequest{value: val, isSet: true}
}

func (v NullableDeleteDepotFilePushRuleDenyPrivilegeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDepotFilePushRuleDenyPrivilegeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


