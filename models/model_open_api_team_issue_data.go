/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the OpenApiTeamIssueData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &OpenApiTeamIssueData{}

// OpenApiTeamIssueData 工作台个人事项
type OpenApiTeamIssueData struct {
	// 工作台事项
	IssueList []OpenApiWorkbenchIssue `json:"IssueList,omitempty"`
	// 页码
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 分页大小
	PageSize *int64 `json:"PageSize,omitempty"`
	// 所有数据条目
	TotalCount *int64 `json:"TotalCount,omitempty"`
	// 总页数
	TotalPage *int64 `json:"TotalPage,omitempty"`
}

// NewOpenApiTeamIssueData instantiates a new OpenApiTeamIssueData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenApiTeamIssueData() *OpenApiTeamIssueData {
	this := OpenApiTeamIssueData{}
	return &this
}

// NewOpenApiTeamIssueDataWithDefaults instantiates a new OpenApiTeamIssueData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenApiTeamIssueDataWithDefaults() *OpenApiTeamIssueData {
	this := OpenApiTeamIssueData{}
	return &this
}

// GetIssueList returns the IssueList field value if set, zero value otherwise.
func (o *OpenApiTeamIssueData) GetIssueList() []OpenApiWorkbenchIssue {
	if o == nil || utils.IsNil(o.IssueList) {
		var ret []OpenApiWorkbenchIssue
		return ret
	}
	return o.IssueList
}

// GetIssueListOk returns a tuple with the IssueList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiTeamIssueData) GetIssueListOk() ([]OpenApiWorkbenchIssue, bool) {
	if o == nil || utils.IsNil(o.IssueList) {
		return nil, false
	}
	return o.IssueList, true
}

// HasIssueList returns a boolean if a field has been set.
func (o *OpenApiTeamIssueData) HasIssueList() bool {
	if o != nil && !utils.IsNil(o.IssueList) {
		return true
	}

	return false
}

// SetIssueList gets a reference to the given []OpenApiWorkbenchIssue and assigns it to the IssueList field.
func (o *OpenApiTeamIssueData) SetIssueList(v []OpenApiWorkbenchIssue) {
	o.IssueList = v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *OpenApiTeamIssueData) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiTeamIssueData) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *OpenApiTeamIssueData) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *OpenApiTeamIssueData) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *OpenApiTeamIssueData) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiTeamIssueData) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *OpenApiTeamIssueData) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *OpenApiTeamIssueData) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *OpenApiTeamIssueData) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiTeamIssueData) GetTotalCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *OpenApiTeamIssueData) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *OpenApiTeamIssueData) SetTotalCount(v int64) {
	o.TotalCount = &v
}

// GetTotalPage returns the TotalPage field value if set, zero value otherwise.
func (o *OpenApiTeamIssueData) GetTotalPage() int64 {
	if o == nil || utils.IsNil(o.TotalPage) {
		var ret int64
		return ret
	}
	return *o.TotalPage
}

// GetTotalPageOk returns a tuple with the TotalPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiTeamIssueData) GetTotalPageOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalPage) {
		return nil, false
	}
	return o.TotalPage, true
}

// HasTotalPage returns a boolean if a field has been set.
func (o *OpenApiTeamIssueData) HasTotalPage() bool {
	if o != nil && !utils.IsNil(o.TotalPage) {
		return true
	}

	return false
}

// SetTotalPage gets a reference to the given int64 and assigns it to the TotalPage field.
func (o *OpenApiTeamIssueData) SetTotalPage(v int64) {
	o.TotalPage = &v
}

func (o OpenApiTeamIssueData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenApiTeamIssueData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.IssueList) {
		toSerialize["IssueList"] = o.IssueList
	}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	if !utils.IsNil(o.TotalPage) {
		toSerialize["TotalPage"] = o.TotalPage
	}
	return toSerialize, nil
}

type NullableOpenApiTeamIssueData struct {
	value *OpenApiTeamIssueData
	isSet bool
}

func (v NullableOpenApiTeamIssueData) Get() *OpenApiTeamIssueData {
	return v.value
}

func (v *NullableOpenApiTeamIssueData) Set(val *OpenApiTeamIssueData) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenApiTeamIssueData) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenApiTeamIssueData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenApiTeamIssueData(val *OpenApiTeamIssueData) *NullableOpenApiTeamIssueData {
	return &NullableOpenApiTeamIssueData{value: val, isSet: true}
}

func (v NullableOpenApiTeamIssueData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenApiTeamIssueData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


