/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the BranchProtection type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &BranchProtection{}

// BranchProtection 保护分支规则详情信息
type BranchProtection struct {
	// 自动添加评审着
	AutoAddReviewer *bool `json:"AutoAddReviewer,omitempty"`
	// 保护分支规则id
	BranchProtectionId *int64 `json:"BranchProtectionId,omitempty"`
	// 是否禁止强制推送
	DenyForcePush *bool `json:"DenyForcePush,omitempty"`
	// 是否使用squash推送
	ForceSquash *bool `json:"ForceSquash,omitempty"`
	// 匹配到的分支数量
	MatcherCount *int64 `json:"MatcherCount,omitempty"`
	// 是否需要文件 owner 授权
	RequiredCodeOwnerGrant *bool `json:"RequiredCodeOwnerGrant,omitempty"`
	// 已解决必需的讨论
	RequiredDiscussionResolved *bool `json:"RequiredDiscussionResolved,omitempty"`
	// 合并请求允许合并授权数量
	RequiredGrantCount *int64 `json:"RequiredGrantCount,omitempty"`
	// 是否开启状态检查
	RequiredStatusCheck *bool `json:"RequiredStatusCheck,omitempty"`
	// 保护分支规则
	Rule *string `json:"Rule,omitempty"`
	// 源分支必须已经合并到的某个分支,默认位空串
	SrcMustMergedTo *string `json:"SrcMustMergedTo,omitempty"`
}

// NewBranchProtection instantiates a new BranchProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBranchProtection() *BranchProtection {
	this := BranchProtection{}
	var autoAddReviewer bool = false
	this.AutoAddReviewer = &autoAddReviewer
	var denyForcePush bool = false
	this.DenyForcePush = &denyForcePush
	var forceSquash bool = false
	this.ForceSquash = &forceSquash
	var requiredCodeOwnerGrant bool = false
	this.RequiredCodeOwnerGrant = &requiredCodeOwnerGrant
	var requiredDiscussionResolved bool = false
	this.RequiredDiscussionResolved = &requiredDiscussionResolved
	var requiredStatusCheck bool = false
	this.RequiredStatusCheck = &requiredStatusCheck
	var rule string = ""
	this.Rule = &rule
	var srcMustMergedTo string = ""
	this.SrcMustMergedTo = &srcMustMergedTo
	return &this
}

// NewBranchProtectionWithDefaults instantiates a new BranchProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBranchProtectionWithDefaults() *BranchProtection {
	this := BranchProtection{}
	var autoAddReviewer bool = false
	this.AutoAddReviewer = &autoAddReviewer
	var denyForcePush bool = false
	this.DenyForcePush = &denyForcePush
	var forceSquash bool = false
	this.ForceSquash = &forceSquash
	var requiredCodeOwnerGrant bool = false
	this.RequiredCodeOwnerGrant = &requiredCodeOwnerGrant
	var requiredDiscussionResolved bool = false
	this.RequiredDiscussionResolved = &requiredDiscussionResolved
	var requiredStatusCheck bool = false
	this.RequiredStatusCheck = &requiredStatusCheck
	var rule string = ""
	this.Rule = &rule
	var srcMustMergedTo string = ""
	this.SrcMustMergedTo = &srcMustMergedTo
	return &this
}

// GetAutoAddReviewer returns the AutoAddReviewer field value if set, zero value otherwise.
func (o *BranchProtection) GetAutoAddReviewer() bool {
	if o == nil || utils.IsNil(o.AutoAddReviewer) {
		var ret bool
		return ret
	}
	return *o.AutoAddReviewer
}

// GetAutoAddReviewerOk returns a tuple with the AutoAddReviewer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetAutoAddReviewerOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.AutoAddReviewer) {
		return nil, false
	}
	return o.AutoAddReviewer, true
}

// HasAutoAddReviewer returns a boolean if a field has been set.
func (o *BranchProtection) HasAutoAddReviewer() bool {
	if o != nil && !utils.IsNil(o.AutoAddReviewer) {
		return true
	}

	return false
}

// SetAutoAddReviewer gets a reference to the given bool and assigns it to the AutoAddReviewer field.
func (o *BranchProtection) SetAutoAddReviewer(v bool) {
	o.AutoAddReviewer = &v
}

// GetBranchProtectionId returns the BranchProtectionId field value if set, zero value otherwise.
func (o *BranchProtection) GetBranchProtectionId() int64 {
	if o == nil || utils.IsNil(o.BranchProtectionId) {
		var ret int64
		return ret
	}
	return *o.BranchProtectionId
}

// GetBranchProtectionIdOk returns a tuple with the BranchProtectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetBranchProtectionIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.BranchProtectionId) {
		return nil, false
	}
	return o.BranchProtectionId, true
}

// HasBranchProtectionId returns a boolean if a field has been set.
func (o *BranchProtection) HasBranchProtectionId() bool {
	if o != nil && !utils.IsNil(o.BranchProtectionId) {
		return true
	}

	return false
}

// SetBranchProtectionId gets a reference to the given int64 and assigns it to the BranchProtectionId field.
func (o *BranchProtection) SetBranchProtectionId(v int64) {
	o.BranchProtectionId = &v
}

// GetDenyForcePush returns the DenyForcePush field value if set, zero value otherwise.
func (o *BranchProtection) GetDenyForcePush() bool {
	if o == nil || utils.IsNil(o.DenyForcePush) {
		var ret bool
		return ret
	}
	return *o.DenyForcePush
}

// GetDenyForcePushOk returns a tuple with the DenyForcePush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetDenyForcePushOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.DenyForcePush) {
		return nil, false
	}
	return o.DenyForcePush, true
}

// HasDenyForcePush returns a boolean if a field has been set.
func (o *BranchProtection) HasDenyForcePush() bool {
	if o != nil && !utils.IsNil(o.DenyForcePush) {
		return true
	}

	return false
}

// SetDenyForcePush gets a reference to the given bool and assigns it to the DenyForcePush field.
func (o *BranchProtection) SetDenyForcePush(v bool) {
	o.DenyForcePush = &v
}

// GetForceSquash returns the ForceSquash field value if set, zero value otherwise.
func (o *BranchProtection) GetForceSquash() bool {
	if o == nil || utils.IsNil(o.ForceSquash) {
		var ret bool
		return ret
	}
	return *o.ForceSquash
}

// GetForceSquashOk returns a tuple with the ForceSquash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetForceSquashOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.ForceSquash) {
		return nil, false
	}
	return o.ForceSquash, true
}

// HasForceSquash returns a boolean if a field has been set.
func (o *BranchProtection) HasForceSquash() bool {
	if o != nil && !utils.IsNil(o.ForceSquash) {
		return true
	}

	return false
}

// SetForceSquash gets a reference to the given bool and assigns it to the ForceSquash field.
func (o *BranchProtection) SetForceSquash(v bool) {
	o.ForceSquash = &v
}

// GetMatcherCount returns the MatcherCount field value if set, zero value otherwise.
func (o *BranchProtection) GetMatcherCount() int64 {
	if o == nil || utils.IsNil(o.MatcherCount) {
		var ret int64
		return ret
	}
	return *o.MatcherCount
}

// GetMatcherCountOk returns a tuple with the MatcherCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetMatcherCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.MatcherCount) {
		return nil, false
	}
	return o.MatcherCount, true
}

// HasMatcherCount returns a boolean if a field has been set.
func (o *BranchProtection) HasMatcherCount() bool {
	if o != nil && !utils.IsNil(o.MatcherCount) {
		return true
	}

	return false
}

// SetMatcherCount gets a reference to the given int64 and assigns it to the MatcherCount field.
func (o *BranchProtection) SetMatcherCount(v int64) {
	o.MatcherCount = &v
}

// GetRequiredCodeOwnerGrant returns the RequiredCodeOwnerGrant field value if set, zero value otherwise.
func (o *BranchProtection) GetRequiredCodeOwnerGrant() bool {
	if o == nil || utils.IsNil(o.RequiredCodeOwnerGrant) {
		var ret bool
		return ret
	}
	return *o.RequiredCodeOwnerGrant
}

// GetRequiredCodeOwnerGrantOk returns a tuple with the RequiredCodeOwnerGrant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetRequiredCodeOwnerGrantOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.RequiredCodeOwnerGrant) {
		return nil, false
	}
	return o.RequiredCodeOwnerGrant, true
}

// HasRequiredCodeOwnerGrant returns a boolean if a field has been set.
func (o *BranchProtection) HasRequiredCodeOwnerGrant() bool {
	if o != nil && !utils.IsNil(o.RequiredCodeOwnerGrant) {
		return true
	}

	return false
}

// SetRequiredCodeOwnerGrant gets a reference to the given bool and assigns it to the RequiredCodeOwnerGrant field.
func (o *BranchProtection) SetRequiredCodeOwnerGrant(v bool) {
	o.RequiredCodeOwnerGrant = &v
}

// GetRequiredDiscussionResolved returns the RequiredDiscussionResolved field value if set, zero value otherwise.
func (o *BranchProtection) GetRequiredDiscussionResolved() bool {
	if o == nil || utils.IsNil(o.RequiredDiscussionResolved) {
		var ret bool
		return ret
	}
	return *o.RequiredDiscussionResolved
}

// GetRequiredDiscussionResolvedOk returns a tuple with the RequiredDiscussionResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetRequiredDiscussionResolvedOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.RequiredDiscussionResolved) {
		return nil, false
	}
	return o.RequiredDiscussionResolved, true
}

// HasRequiredDiscussionResolved returns a boolean if a field has been set.
func (o *BranchProtection) HasRequiredDiscussionResolved() bool {
	if o != nil && !utils.IsNil(o.RequiredDiscussionResolved) {
		return true
	}

	return false
}

// SetRequiredDiscussionResolved gets a reference to the given bool and assigns it to the RequiredDiscussionResolved field.
func (o *BranchProtection) SetRequiredDiscussionResolved(v bool) {
	o.RequiredDiscussionResolved = &v
}

// GetRequiredGrantCount returns the RequiredGrantCount field value if set, zero value otherwise.
func (o *BranchProtection) GetRequiredGrantCount() int64 {
	if o == nil || utils.IsNil(o.RequiredGrantCount) {
		var ret int64
		return ret
	}
	return *o.RequiredGrantCount
}

// GetRequiredGrantCountOk returns a tuple with the RequiredGrantCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetRequiredGrantCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.RequiredGrantCount) {
		return nil, false
	}
	return o.RequiredGrantCount, true
}

// HasRequiredGrantCount returns a boolean if a field has been set.
func (o *BranchProtection) HasRequiredGrantCount() bool {
	if o != nil && !utils.IsNil(o.RequiredGrantCount) {
		return true
	}

	return false
}

// SetRequiredGrantCount gets a reference to the given int64 and assigns it to the RequiredGrantCount field.
func (o *BranchProtection) SetRequiredGrantCount(v int64) {
	o.RequiredGrantCount = &v
}

// GetRequiredStatusCheck returns the RequiredStatusCheck field value if set, zero value otherwise.
func (o *BranchProtection) GetRequiredStatusCheck() bool {
	if o == nil || utils.IsNil(o.RequiredStatusCheck) {
		var ret bool
		return ret
	}
	return *o.RequiredStatusCheck
}

// GetRequiredStatusCheckOk returns a tuple with the RequiredStatusCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetRequiredStatusCheckOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.RequiredStatusCheck) {
		return nil, false
	}
	return o.RequiredStatusCheck, true
}

// HasRequiredStatusCheck returns a boolean if a field has been set.
func (o *BranchProtection) HasRequiredStatusCheck() bool {
	if o != nil && !utils.IsNil(o.RequiredStatusCheck) {
		return true
	}

	return false
}

// SetRequiredStatusCheck gets a reference to the given bool and assigns it to the RequiredStatusCheck field.
func (o *BranchProtection) SetRequiredStatusCheck(v bool) {
	o.RequiredStatusCheck = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *BranchProtection) GetRule() string {
	if o == nil || utils.IsNil(o.Rule) {
		var ret string
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetRuleOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *BranchProtection) HasRule() bool {
	if o != nil && !utils.IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given string and assigns it to the Rule field.
func (o *BranchProtection) SetRule(v string) {
	o.Rule = &v
}

// GetSrcMustMergedTo returns the SrcMustMergedTo field value if set, zero value otherwise.
func (o *BranchProtection) GetSrcMustMergedTo() string {
	if o == nil || utils.IsNil(o.SrcMustMergedTo) {
		var ret string
		return ret
	}
	return *o.SrcMustMergedTo
}

// GetSrcMustMergedToOk returns a tuple with the SrcMustMergedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchProtection) GetSrcMustMergedToOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SrcMustMergedTo) {
		return nil, false
	}
	return o.SrcMustMergedTo, true
}

// HasSrcMustMergedTo returns a boolean if a field has been set.
func (o *BranchProtection) HasSrcMustMergedTo() bool {
	if o != nil && !utils.IsNil(o.SrcMustMergedTo) {
		return true
	}

	return false
}

// SetSrcMustMergedTo gets a reference to the given string and assigns it to the SrcMustMergedTo field.
func (o *BranchProtection) SetSrcMustMergedTo(v string) {
	o.SrcMustMergedTo = &v
}

func (o BranchProtection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BranchProtection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AutoAddReviewer) {
		toSerialize["AutoAddReviewer"] = o.AutoAddReviewer
	}
	if !utils.IsNil(o.BranchProtectionId) {
		toSerialize["BranchProtectionId"] = o.BranchProtectionId
	}
	if !utils.IsNil(o.DenyForcePush) {
		toSerialize["DenyForcePush"] = o.DenyForcePush
	}
	if !utils.IsNil(o.ForceSquash) {
		toSerialize["ForceSquash"] = o.ForceSquash
	}
	if !utils.IsNil(o.MatcherCount) {
		toSerialize["MatcherCount"] = o.MatcherCount
	}
	if !utils.IsNil(o.RequiredCodeOwnerGrant) {
		toSerialize["RequiredCodeOwnerGrant"] = o.RequiredCodeOwnerGrant
	}
	if !utils.IsNil(o.RequiredDiscussionResolved) {
		toSerialize["RequiredDiscussionResolved"] = o.RequiredDiscussionResolved
	}
	if !utils.IsNil(o.RequiredGrantCount) {
		toSerialize["RequiredGrantCount"] = o.RequiredGrantCount
	}
	if !utils.IsNil(o.RequiredStatusCheck) {
		toSerialize["RequiredStatusCheck"] = o.RequiredStatusCheck
	}
	if !utils.IsNil(o.Rule) {
		toSerialize["Rule"] = o.Rule
	}
	if !utils.IsNil(o.SrcMustMergedTo) {
		toSerialize["SrcMustMergedTo"] = o.SrcMustMergedTo
	}
	return toSerialize, nil
}

type NullableBranchProtection struct {
	value *BranchProtection
	isSet bool
}

func (v NullableBranchProtection) Get() *BranchProtection {
	return v.value
}

func (v *NullableBranchProtection) Set(val *BranchProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableBranchProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableBranchProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBranchProtection(val *BranchProtection) *NullableBranchProtection {
	return &NullableBranchProtection{value: val, isSet: true}
}

func (v NullableBranchProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBranchProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


