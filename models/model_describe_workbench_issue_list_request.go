/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeWorkbenchIssueListRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeWorkbenchIssueListRequest{}

// DescribeWorkbenchIssueListRequest struct for DescribeWorkbenchIssueListRequest
type DescribeWorkbenchIssueListRequest struct {
	// 关键字
	Keyword *string `json:"Keyword,omitempty"`
	// 分页查询的分页数，不填的话从第一页开始查询
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 每页展示数，默认 20 ，最大值 500
	PageSize *int64 `json:"PageSize,omitempty"`
	// 不填或者填0则查询团队内参与的所有项目
	ProjectId *int64 `json:"ProjectId,omitempty"`
	// 事项类型，取值如“REQUIREMENT”、“DEFECT”等
	Type *string `json:"Type,omitempty"`
}

// NewDescribeWorkbenchIssueListRequest instantiates a new DescribeWorkbenchIssueListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeWorkbenchIssueListRequest() *DescribeWorkbenchIssueListRequest {
	this := DescribeWorkbenchIssueListRequest{}
	return &this
}

// NewDescribeWorkbenchIssueListRequestWithDefaults instantiates a new DescribeWorkbenchIssueListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeWorkbenchIssueListRequestWithDefaults() *DescribeWorkbenchIssueListRequest {
	this := DescribeWorkbenchIssueListRequest{}
	return &this
}

// GetKeyword returns the Keyword field value if set, zero value otherwise.
func (o *DescribeWorkbenchIssueListRequest) GetKeyword() string {
	if o == nil || utils.IsNil(o.Keyword) {
		var ret string
		return ret
	}
	return *o.Keyword
}

// GetKeywordOk returns a tuple with the Keyword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeWorkbenchIssueListRequest) GetKeywordOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Keyword) {
		return nil, false
	}
	return o.Keyword, true
}

// HasKeyword returns a boolean if a field has been set.
func (o *DescribeWorkbenchIssueListRequest) HasKeyword() bool {
	if o != nil && !utils.IsNil(o.Keyword) {
		return true
	}

	return false
}

// SetKeyword gets a reference to the given string and assigns it to the Keyword field.
func (o *DescribeWorkbenchIssueListRequest) SetKeyword(v string) {
	o.Keyword = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeWorkbenchIssueListRequest) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeWorkbenchIssueListRequest) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeWorkbenchIssueListRequest) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *DescribeWorkbenchIssueListRequest) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeWorkbenchIssueListRequest) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeWorkbenchIssueListRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeWorkbenchIssueListRequest) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *DescribeWorkbenchIssueListRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *DescribeWorkbenchIssueListRequest) GetProjectId() int64 {
	if o == nil || utils.IsNil(o.ProjectId) {
		var ret int64
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeWorkbenchIssueListRequest) GetProjectIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *DescribeWorkbenchIssueListRequest) HasProjectId() bool {
	if o != nil && !utils.IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int64 and assigns it to the ProjectId field.
func (o *DescribeWorkbenchIssueListRequest) SetProjectId(v int64) {
	o.ProjectId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DescribeWorkbenchIssueListRequest) GetType() string {
	if o == nil || utils.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeWorkbenchIssueListRequest) GetTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DescribeWorkbenchIssueListRequest) HasType() bool {
	if o != nil && !utils.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DescribeWorkbenchIssueListRequest) SetType(v string) {
	o.Type = &v
}

func (o DescribeWorkbenchIssueListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeWorkbenchIssueListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Keyword) {
		toSerialize["Keyword"] = o.Keyword
	}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.ProjectId) {
		toSerialize["ProjectId"] = o.ProjectId
	}
	if !utils.IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	return toSerialize, nil
}

type NullableDescribeWorkbenchIssueListRequest struct {
	value *DescribeWorkbenchIssueListRequest
	isSet bool
}

func (v NullableDescribeWorkbenchIssueListRequest) Get() *DescribeWorkbenchIssueListRequest {
	return v.value
}

func (v *NullableDescribeWorkbenchIssueListRequest) Set(val *DescribeWorkbenchIssueListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeWorkbenchIssueListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeWorkbenchIssueListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeWorkbenchIssueListRequest(val *DescribeWorkbenchIssueListRequest) *NullableDescribeWorkbenchIssueListRequest {
	return &NullableDescribeWorkbenchIssueListRequest{value: val, isSet: true}
}

func (v NullableDescribeWorkbenchIssueListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeWorkbenchIssueListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


