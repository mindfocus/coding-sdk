/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DepotMergeRequestRule type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DepotMergeRequestRule{}

// DepotMergeRequestRule 仓库规范的合并方向规则
type DepotMergeRequestRule struct {
	// 源分支类型名字
	SourceBranchTypeName utils.NullableString `json:"SourceBranchTypeName,omitempty"`
	// 源分支类型规则
	SourceBranchTypeRule utils.NullableString `json:"SourceBranchTypeRule,omitempty"`
	// 目标分支类型名字
	TargetBranchTypeName utils.NullableString `json:"TargetBranchTypeName,omitempty"`
	// 目标分支类型规则
	TargetBranchTypeRule utils.NullableString `json:"TargetBranchTypeRule,omitempty"`
}

// NewDepotMergeRequestRule instantiates a new DepotMergeRequestRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepotMergeRequestRule() *DepotMergeRequestRule {
	this := DepotMergeRequestRule{}
	var sourceBranchTypeName string = ""
	this.SourceBranchTypeName = *utils.NewNullableString(&sourceBranchTypeName)
	var sourceBranchTypeRule string = ""
	this.SourceBranchTypeRule = *utils.NewNullableString(&sourceBranchTypeRule)
	var targetBranchTypeName string = ""
	this.TargetBranchTypeName = *utils.NewNullableString(&targetBranchTypeName)
	var targetBranchTypeRule string = ""
	this.TargetBranchTypeRule = *utils.NewNullableString(&targetBranchTypeRule)
	return &this
}

// NewDepotMergeRequestRuleWithDefaults instantiates a new DepotMergeRequestRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepotMergeRequestRuleWithDefaults() *DepotMergeRequestRule {
	this := DepotMergeRequestRule{}
	var sourceBranchTypeName string = ""
	this.SourceBranchTypeName = *utils.NewNullableString(&sourceBranchTypeName)
	var sourceBranchTypeRule string = ""
	this.SourceBranchTypeRule = *utils.NewNullableString(&sourceBranchTypeRule)
	var targetBranchTypeName string = ""
	this.TargetBranchTypeName = *utils.NewNullableString(&targetBranchTypeName)
	var targetBranchTypeRule string = ""
	this.TargetBranchTypeRule = *utils.NewNullableString(&targetBranchTypeRule)
	return &this
}

// GetSourceBranchTypeName returns the SourceBranchTypeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepotMergeRequestRule) GetSourceBranchTypeName() string {
	if o == nil || utils.IsNil(o.SourceBranchTypeName.Get()) {
		var ret string
		return ret
	}
	return *o.SourceBranchTypeName.Get()
}

// GetSourceBranchTypeNameOk returns a tuple with the SourceBranchTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepotMergeRequestRule) GetSourceBranchTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceBranchTypeName.Get(), o.SourceBranchTypeName.IsSet()
}

// HasSourceBranchTypeName returns a boolean if a field has been set.
func (o *DepotMergeRequestRule) HasSourceBranchTypeName() bool {
	if o != nil && o.SourceBranchTypeName.IsSet() {
		return true
	}

	return false
}

// SetSourceBranchTypeName gets a reference to the given utils.NullableString and assigns it to the SourceBranchTypeName field.
func (o *DepotMergeRequestRule) SetSourceBranchTypeName(v string) {
	o.SourceBranchTypeName.Set(&v)
}
// SetSourceBranchTypeNameNil sets the value for SourceBranchTypeName to be an explicit nil
func (o *DepotMergeRequestRule) SetSourceBranchTypeNameNil() {
	o.SourceBranchTypeName.Set(nil)
}

// UnsetSourceBranchTypeName ensures that no value is present for SourceBranchTypeName, not even an explicit nil
func (o *DepotMergeRequestRule) UnsetSourceBranchTypeName() {
	o.SourceBranchTypeName.Unset()
}

// GetSourceBranchTypeRule returns the SourceBranchTypeRule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepotMergeRequestRule) GetSourceBranchTypeRule() string {
	if o == nil || utils.IsNil(o.SourceBranchTypeRule.Get()) {
		var ret string
		return ret
	}
	return *o.SourceBranchTypeRule.Get()
}

// GetSourceBranchTypeRuleOk returns a tuple with the SourceBranchTypeRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepotMergeRequestRule) GetSourceBranchTypeRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceBranchTypeRule.Get(), o.SourceBranchTypeRule.IsSet()
}

// HasSourceBranchTypeRule returns a boolean if a field has been set.
func (o *DepotMergeRequestRule) HasSourceBranchTypeRule() bool {
	if o != nil && o.SourceBranchTypeRule.IsSet() {
		return true
	}

	return false
}

// SetSourceBranchTypeRule gets a reference to the given utils.NullableString and assigns it to the SourceBranchTypeRule field.
func (o *DepotMergeRequestRule) SetSourceBranchTypeRule(v string) {
	o.SourceBranchTypeRule.Set(&v)
}
// SetSourceBranchTypeRuleNil sets the value for SourceBranchTypeRule to be an explicit nil
func (o *DepotMergeRequestRule) SetSourceBranchTypeRuleNil() {
	o.SourceBranchTypeRule.Set(nil)
}

// UnsetSourceBranchTypeRule ensures that no value is present for SourceBranchTypeRule, not even an explicit nil
func (o *DepotMergeRequestRule) UnsetSourceBranchTypeRule() {
	o.SourceBranchTypeRule.Unset()
}

// GetTargetBranchTypeName returns the TargetBranchTypeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepotMergeRequestRule) GetTargetBranchTypeName() string {
	if o == nil || utils.IsNil(o.TargetBranchTypeName.Get()) {
		var ret string
		return ret
	}
	return *o.TargetBranchTypeName.Get()
}

// GetTargetBranchTypeNameOk returns a tuple with the TargetBranchTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepotMergeRequestRule) GetTargetBranchTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetBranchTypeName.Get(), o.TargetBranchTypeName.IsSet()
}

// HasTargetBranchTypeName returns a boolean if a field has been set.
func (o *DepotMergeRequestRule) HasTargetBranchTypeName() bool {
	if o != nil && o.TargetBranchTypeName.IsSet() {
		return true
	}

	return false
}

// SetTargetBranchTypeName gets a reference to the given utils.NullableString and assigns it to the TargetBranchTypeName field.
func (o *DepotMergeRequestRule) SetTargetBranchTypeName(v string) {
	o.TargetBranchTypeName.Set(&v)
}
// SetTargetBranchTypeNameNil sets the value for TargetBranchTypeName to be an explicit nil
func (o *DepotMergeRequestRule) SetTargetBranchTypeNameNil() {
	o.TargetBranchTypeName.Set(nil)
}

// UnsetTargetBranchTypeName ensures that no value is present for TargetBranchTypeName, not even an explicit nil
func (o *DepotMergeRequestRule) UnsetTargetBranchTypeName() {
	o.TargetBranchTypeName.Unset()
}

// GetTargetBranchTypeRule returns the TargetBranchTypeRule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepotMergeRequestRule) GetTargetBranchTypeRule() string {
	if o == nil || utils.IsNil(o.TargetBranchTypeRule.Get()) {
		var ret string
		return ret
	}
	return *o.TargetBranchTypeRule.Get()
}

// GetTargetBranchTypeRuleOk returns a tuple with the TargetBranchTypeRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepotMergeRequestRule) GetTargetBranchTypeRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetBranchTypeRule.Get(), o.TargetBranchTypeRule.IsSet()
}

// HasTargetBranchTypeRule returns a boolean if a field has been set.
func (o *DepotMergeRequestRule) HasTargetBranchTypeRule() bool {
	if o != nil && o.TargetBranchTypeRule.IsSet() {
		return true
	}

	return false
}

// SetTargetBranchTypeRule gets a reference to the given utils.NullableString and assigns it to the TargetBranchTypeRule field.
func (o *DepotMergeRequestRule) SetTargetBranchTypeRule(v string) {
	o.TargetBranchTypeRule.Set(&v)
}
// SetTargetBranchTypeRuleNil sets the value for TargetBranchTypeRule to be an explicit nil
func (o *DepotMergeRequestRule) SetTargetBranchTypeRuleNil() {
	o.TargetBranchTypeRule.Set(nil)
}

// UnsetTargetBranchTypeRule ensures that no value is present for TargetBranchTypeRule, not even an explicit nil
func (o *DepotMergeRequestRule) UnsetTargetBranchTypeRule() {
	o.TargetBranchTypeRule.Unset()
}

func (o DepotMergeRequestRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepotMergeRequestRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceBranchTypeName.IsSet() {
		toSerialize["SourceBranchTypeName"] = o.SourceBranchTypeName.Get()
	}
	if o.SourceBranchTypeRule.IsSet() {
		toSerialize["SourceBranchTypeRule"] = o.SourceBranchTypeRule.Get()
	}
	if o.TargetBranchTypeName.IsSet() {
		toSerialize["TargetBranchTypeName"] = o.TargetBranchTypeName.Get()
	}
	if o.TargetBranchTypeRule.IsSet() {
		toSerialize["TargetBranchTypeRule"] = o.TargetBranchTypeRule.Get()
	}
	return toSerialize, nil
}

type NullableDepotMergeRequestRule struct {
	value *DepotMergeRequestRule
	isSet bool
}

func (v NullableDepotMergeRequestRule) Get() *DepotMergeRequestRule {
	return v.value
}

func (v *NullableDepotMergeRequestRule) Set(val *DepotMergeRequestRule) {
	v.value = val
	v.isSet = true
}

func (v NullableDepotMergeRequestRule) IsSet() bool {
	return v.isSet
}

func (v *NullableDepotMergeRequestRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepotMergeRequestRule(val *DepotMergeRequestRule) *NullableDepotMergeRequestRule {
	return &NullableDepotMergeRequestRule{value: val, isSet: true}
}

func (v NullableDepotMergeRequestRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepotMergeRequestRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


