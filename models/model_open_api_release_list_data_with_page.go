/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the OpenApiReleaseListDataWithPage type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &OpenApiReleaseListDataWithPage{}

// OpenApiReleaseListDataWithPage 版本列表
type OpenApiReleaseListDataWithPage struct {
	// 版本信息列表
	List []OpenApiRelease `json:"List,omitempty"`
	// 页码
	PageNumber utils.NullableInt64 `json:"PageNumber,omitempty"`
	// 页数
	PageSize utils.NullableInt64 `json:"PageSize,omitempty"`
	// 数据总条数
	TotalCount utils.NullableInt64 `json:"TotalCount,omitempty"`
	// 总页数
	TotalPage utils.NullableInt64 `json:"TotalPage,omitempty"`
}

// NewOpenApiReleaseListDataWithPage instantiates a new OpenApiReleaseListDataWithPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenApiReleaseListDataWithPage() *OpenApiReleaseListDataWithPage {
	this := OpenApiReleaseListDataWithPage{}
	return &this
}

// NewOpenApiReleaseListDataWithPageWithDefaults instantiates a new OpenApiReleaseListDataWithPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenApiReleaseListDataWithPageWithDefaults() *OpenApiReleaseListDataWithPage {
	this := OpenApiReleaseListDataWithPage{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenApiReleaseListDataWithPage) GetList() []OpenApiRelease {
	if o == nil {
		var ret []OpenApiRelease
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenApiReleaseListDataWithPage) GetListOk() ([]OpenApiRelease, bool) {
	if o == nil || utils.IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *OpenApiReleaseListDataWithPage) HasList() bool {
	if o != nil && !utils.IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []OpenApiRelease and assigns it to the List field.
func (o *OpenApiReleaseListDataWithPage) SetList(v []OpenApiRelease) {
	o.List = v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenApiReleaseListDataWithPage) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber.Get()) {
		var ret int64
		return ret
	}
	return *o.PageNumber.Get()
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenApiReleaseListDataWithPage) GetPageNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageNumber.Get(), o.PageNumber.IsSet()
}

// HasPageNumber returns a boolean if a field has been set.
func (o *OpenApiReleaseListDataWithPage) HasPageNumber() bool {
	if o != nil && o.PageNumber.IsSet() {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given utils.NullableInt64 and assigns it to the PageNumber field.
func (o *OpenApiReleaseListDataWithPage) SetPageNumber(v int64) {
	o.PageNumber.Set(&v)
}
// SetPageNumberNil sets the value for PageNumber to be an explicit nil
func (o *OpenApiReleaseListDataWithPage) SetPageNumberNil() {
	o.PageNumber.Set(nil)
}

// UnsetPageNumber ensures that no value is present for PageNumber, not even an explicit nil
func (o *OpenApiReleaseListDataWithPage) UnsetPageNumber() {
	o.PageNumber.Unset()
}

// GetPageSize returns the PageSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenApiReleaseListDataWithPage) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize.Get()) {
		var ret int64
		return ret
	}
	return *o.PageSize.Get()
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenApiReleaseListDataWithPage) GetPageSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageSize.Get(), o.PageSize.IsSet()
}

// HasPageSize returns a boolean if a field has been set.
func (o *OpenApiReleaseListDataWithPage) HasPageSize() bool {
	if o != nil && o.PageSize.IsSet() {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given utils.NullableInt64 and assigns it to the PageSize field.
func (o *OpenApiReleaseListDataWithPage) SetPageSize(v int64) {
	o.PageSize.Set(&v)
}
// SetPageSizeNil sets the value for PageSize to be an explicit nil
func (o *OpenApiReleaseListDataWithPage) SetPageSizeNil() {
	o.PageSize.Set(nil)
}

// UnsetPageSize ensures that no value is present for PageSize, not even an explicit nil
func (o *OpenApiReleaseListDataWithPage) UnsetPageSize() {
	o.PageSize.Unset()
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenApiReleaseListDataWithPage) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount.Get()) {
		var ret int64
		return ret
	}
	return *o.TotalCount.Get()
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenApiReleaseListDataWithPage) GetTotalCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCount.Get(), o.TotalCount.IsSet()
}

// HasTotalCount returns a boolean if a field has been set.
func (o *OpenApiReleaseListDataWithPage) HasTotalCount() bool {
	if o != nil && o.TotalCount.IsSet() {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given utils.NullableInt64 and assigns it to the TotalCount field.
func (o *OpenApiReleaseListDataWithPage) SetTotalCount(v int64) {
	o.TotalCount.Set(&v)
}
// SetTotalCountNil sets the value for TotalCount to be an explicit nil
func (o *OpenApiReleaseListDataWithPage) SetTotalCountNil() {
	o.TotalCount.Set(nil)
}

// UnsetTotalCount ensures that no value is present for TotalCount, not even an explicit nil
func (o *OpenApiReleaseListDataWithPage) UnsetTotalCount() {
	o.TotalCount.Unset()
}

// GetTotalPage returns the TotalPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenApiReleaseListDataWithPage) GetTotalPage() int64 {
	if o == nil || utils.IsNil(o.TotalPage.Get()) {
		var ret int64
		return ret
	}
	return *o.TotalPage.Get()
}

// GetTotalPageOk returns a tuple with the TotalPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenApiReleaseListDataWithPage) GetTotalPageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalPage.Get(), o.TotalPage.IsSet()
}

// HasTotalPage returns a boolean if a field has been set.
func (o *OpenApiReleaseListDataWithPage) HasTotalPage() bool {
	if o != nil && o.TotalPage.IsSet() {
		return true
	}

	return false
}

// SetTotalPage gets a reference to the given utils.NullableInt64 and assigns it to the TotalPage field.
func (o *OpenApiReleaseListDataWithPage) SetTotalPage(v int64) {
	o.TotalPage.Set(&v)
}
// SetTotalPageNil sets the value for TotalPage to be an explicit nil
func (o *OpenApiReleaseListDataWithPage) SetTotalPageNil() {
	o.TotalPage.Set(nil)
}

// UnsetTotalPage ensures that no value is present for TotalPage, not even an explicit nil
func (o *OpenApiReleaseListDataWithPage) UnsetTotalPage() {
	o.TotalPage.Unset()
}

func (o OpenApiReleaseListDataWithPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenApiReleaseListDataWithPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.List != nil {
		toSerialize["List"] = o.List
	}
	if o.PageNumber.IsSet() {
		toSerialize["PageNumber"] = o.PageNumber.Get()
	}
	if o.PageSize.IsSet() {
		toSerialize["PageSize"] = o.PageSize.Get()
	}
	if o.TotalCount.IsSet() {
		toSerialize["TotalCount"] = o.TotalCount.Get()
	}
	if o.TotalPage.IsSet() {
		toSerialize["TotalPage"] = o.TotalPage.Get()
	}
	return toSerialize, nil
}

type NullableOpenApiReleaseListDataWithPage struct {
	value *OpenApiReleaseListDataWithPage
	isSet bool
}

func (v NullableOpenApiReleaseListDataWithPage) Get() *OpenApiReleaseListDataWithPage {
	return v.value
}

func (v *NullableOpenApiReleaseListDataWithPage) Set(val *OpenApiReleaseListDataWithPage) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenApiReleaseListDataWithPage) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenApiReleaseListDataWithPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenApiReleaseListDataWithPage(val *OpenApiReleaseListDataWithPage) *NullableOpenApiReleaseListDataWithPage {
	return &NullableOpenApiReleaseListDataWithPage{value: val, isSet: true}
}

func (v NullableOpenApiReleaseListDataWithPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenApiReleaseListDataWithPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


