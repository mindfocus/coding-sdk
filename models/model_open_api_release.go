/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the OpenApiRelease type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &OpenApiRelease{}

// OpenApiRelease open-api 版本数据类型
type OpenApiRelease struct {
	// 处理人
	Assignee *int64 `json:"Assignee,omitempty"`
	// 版本code
	Code *int64 `json:"Code,omitempty"`
	// 已完成事项数目 
	CompletedCount *int64 `json:"CompletedCount,omitempty"`
	// 事项完成率 
	CompletedPercent utils.NullableFloat32 `json:"CompletedPercent,omitempty"`
	// 创建时间
	CreatedAt *int64 `json:"CreatedAt,omitempty"`
	// 创建人
	Creator *int64 `json:"Creator,omitempty"`
	// 描述
	Description utils.NullableString `json:"Description,omitempty"`
	// 版本ID
	Id *int64 `json:"Id,omitempty"`
	// 版本关联迭代列表 
	Iterations []IterationSimple `json:"Iterations,omitempty"`
	// 版本名称
	Name *string `json:"Name,omitempty"`
	// 处理中事项数目 
	ProcessingCount *int64 `json:"ProcessingCount,omitempty"`
	// 项目ID
	ProjectId *int64 `json:"ProjectId,omitempty"`
	// 发哺乳期
	ReleaseDate *int64 `json:"ReleaseDate,omitempty"`
	// 开始日期
	StartDate *int64 `json:"StartDate,omitempty"`
	// 状态
	Status *string `json:"Status,omitempty"`
	// 更新时间
	UpdatedAt *int64 `json:"UpdatedAt,omitempty"`
	// 待处理事项数目 
	WaitProcessCount *int64 `json:"WaitProcessCount,omitempty"`
}

// NewOpenApiRelease instantiates a new OpenApiRelease object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenApiRelease() *OpenApiRelease {
	this := OpenApiRelease{}
	var description string = ""
	this.Description = *utils.NewNullableString(&description)
	var name string = ""
	this.Name = &name
	var status string = ""
	this.Status = &status
	return &this
}

// NewOpenApiReleaseWithDefaults instantiates a new OpenApiRelease object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenApiReleaseWithDefaults() *OpenApiRelease {
	this := OpenApiRelease{}
	var description string = ""
	this.Description = *utils.NewNullableString(&description)
	var name string = ""
	this.Name = &name
	var status string = ""
	this.Status = &status
	return &this
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *OpenApiRelease) GetAssignee() int64 {
	if o == nil || utils.IsNil(o.Assignee) {
		var ret int64
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetAssigneeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *OpenApiRelease) HasAssignee() bool {
	if o != nil && !utils.IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given int64 and assigns it to the Assignee field.
func (o *OpenApiRelease) SetAssignee(v int64) {
	o.Assignee = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OpenApiRelease) GetCode() int64 {
	if o == nil || utils.IsNil(o.Code) {
		var ret int64
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetCodeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OpenApiRelease) HasCode() bool {
	if o != nil && !utils.IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int64 and assigns it to the Code field.
func (o *OpenApiRelease) SetCode(v int64) {
	o.Code = &v
}

// GetCompletedCount returns the CompletedCount field value if set, zero value otherwise.
func (o *OpenApiRelease) GetCompletedCount() int64 {
	if o == nil || utils.IsNil(o.CompletedCount) {
		var ret int64
		return ret
	}
	return *o.CompletedCount
}

// GetCompletedCountOk returns a tuple with the CompletedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetCompletedCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CompletedCount) {
		return nil, false
	}
	return o.CompletedCount, true
}

// HasCompletedCount returns a boolean if a field has been set.
func (o *OpenApiRelease) HasCompletedCount() bool {
	if o != nil && !utils.IsNil(o.CompletedCount) {
		return true
	}

	return false
}

// SetCompletedCount gets a reference to the given int64 and assigns it to the CompletedCount field.
func (o *OpenApiRelease) SetCompletedCount(v int64) {
	o.CompletedCount = &v
}

// GetCompletedPercent returns the CompletedPercent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenApiRelease) GetCompletedPercent() float32 {
	if o == nil || utils.IsNil(o.CompletedPercent.Get()) {
		var ret float32
		return ret
	}
	return *o.CompletedPercent.Get()
}

// GetCompletedPercentOk returns a tuple with the CompletedPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenApiRelease) GetCompletedPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedPercent.Get(), o.CompletedPercent.IsSet()
}

// HasCompletedPercent returns a boolean if a field has been set.
func (o *OpenApiRelease) HasCompletedPercent() bool {
	if o != nil && o.CompletedPercent.IsSet() {
		return true
	}

	return false
}

// SetCompletedPercent gets a reference to the given utils.NullableFloat32 and assigns it to the CompletedPercent field.
func (o *OpenApiRelease) SetCompletedPercent(v float32) {
	o.CompletedPercent.Set(&v)
}
// SetCompletedPercentNil sets the value for CompletedPercent to be an explicit nil
func (o *OpenApiRelease) SetCompletedPercentNil() {
	o.CompletedPercent.Set(nil)
}

// UnsetCompletedPercent ensures that no value is present for CompletedPercent, not even an explicit nil
func (o *OpenApiRelease) UnsetCompletedPercent() {
	o.CompletedPercent.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OpenApiRelease) GetCreatedAt() int64 {
	if o == nil || utils.IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetCreatedAtOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OpenApiRelease) HasCreatedAt() bool {
	if o != nil && !utils.IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *OpenApiRelease) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *OpenApiRelease) GetCreator() int64 {
	if o == nil || utils.IsNil(o.Creator) {
		var ret int64
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetCreatorOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *OpenApiRelease) HasCreator() bool {
	if o != nil && !utils.IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given int64 and assigns it to the Creator field.
func (o *OpenApiRelease) SetCreator(v int64) {
	o.Creator = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenApiRelease) GetDescription() string {
	if o == nil || utils.IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenApiRelease) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *OpenApiRelease) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given utils.NullableString and assigns it to the Description field.
func (o *OpenApiRelease) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *OpenApiRelease) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *OpenApiRelease) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpenApiRelease) GetId() int64 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpenApiRelease) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OpenApiRelease) SetId(v int64) {
	o.Id = &v
}

// GetIterations returns the Iterations field value if set, zero value otherwise.
func (o *OpenApiRelease) GetIterations() []IterationSimple {
	if o == nil || utils.IsNil(o.Iterations) {
		var ret []IterationSimple
		return ret
	}
	return o.Iterations
}

// GetIterationsOk returns a tuple with the Iterations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetIterationsOk() ([]IterationSimple, bool) {
	if o == nil || utils.IsNil(o.Iterations) {
		return nil, false
	}
	return o.Iterations, true
}

// HasIterations returns a boolean if a field has been set.
func (o *OpenApiRelease) HasIterations() bool {
	if o != nil && !utils.IsNil(o.Iterations) {
		return true
	}

	return false
}

// SetIterations gets a reference to the given []IterationSimple and assigns it to the Iterations field.
func (o *OpenApiRelease) SetIterations(v []IterationSimple) {
	o.Iterations = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenApiRelease) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenApiRelease) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenApiRelease) SetName(v string) {
	o.Name = &v
}

// GetProcessingCount returns the ProcessingCount field value if set, zero value otherwise.
func (o *OpenApiRelease) GetProcessingCount() int64 {
	if o == nil || utils.IsNil(o.ProcessingCount) {
		var ret int64
		return ret
	}
	return *o.ProcessingCount
}

// GetProcessingCountOk returns a tuple with the ProcessingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetProcessingCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ProcessingCount) {
		return nil, false
	}
	return o.ProcessingCount, true
}

// HasProcessingCount returns a boolean if a field has been set.
func (o *OpenApiRelease) HasProcessingCount() bool {
	if o != nil && !utils.IsNil(o.ProcessingCount) {
		return true
	}

	return false
}

// SetProcessingCount gets a reference to the given int64 and assigns it to the ProcessingCount field.
func (o *OpenApiRelease) SetProcessingCount(v int64) {
	o.ProcessingCount = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *OpenApiRelease) GetProjectId() int64 {
	if o == nil || utils.IsNil(o.ProjectId) {
		var ret int64
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetProjectIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *OpenApiRelease) HasProjectId() bool {
	if o != nil && !utils.IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int64 and assigns it to the ProjectId field.
func (o *OpenApiRelease) SetProjectId(v int64) {
	o.ProjectId = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *OpenApiRelease) GetReleaseDate() int64 {
	if o == nil || utils.IsNil(o.ReleaseDate) {
		var ret int64
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetReleaseDateOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *OpenApiRelease) HasReleaseDate() bool {
	if o != nil && !utils.IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given int64 and assigns it to the ReleaseDate field.
func (o *OpenApiRelease) SetReleaseDate(v int64) {
	o.ReleaseDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *OpenApiRelease) GetStartDate() int64 {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret int64
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetStartDateOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *OpenApiRelease) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int64 and assigns it to the StartDate field.
func (o *OpenApiRelease) SetStartDate(v int64) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpenApiRelease) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpenApiRelease) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpenApiRelease) SetStatus(v string) {
	o.Status = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OpenApiRelease) GetUpdatedAt() int64 {
	if o == nil || utils.IsNil(o.UpdatedAt) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OpenApiRelease) HasUpdatedAt() bool {
	if o != nil && !utils.IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *OpenApiRelease) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetWaitProcessCount returns the WaitProcessCount field value if set, zero value otherwise.
func (o *OpenApiRelease) GetWaitProcessCount() int64 {
	if o == nil || utils.IsNil(o.WaitProcessCount) {
		var ret int64
		return ret
	}
	return *o.WaitProcessCount
}

// GetWaitProcessCountOk returns a tuple with the WaitProcessCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenApiRelease) GetWaitProcessCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.WaitProcessCount) {
		return nil, false
	}
	return o.WaitProcessCount, true
}

// HasWaitProcessCount returns a boolean if a field has been set.
func (o *OpenApiRelease) HasWaitProcessCount() bool {
	if o != nil && !utils.IsNil(o.WaitProcessCount) {
		return true
	}

	return false
}

// SetWaitProcessCount gets a reference to the given int64 and assigns it to the WaitProcessCount field.
func (o *OpenApiRelease) SetWaitProcessCount(v int64) {
	o.WaitProcessCount = &v
}

func (o OpenApiRelease) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenApiRelease) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Assignee) {
		toSerialize["Assignee"] = o.Assignee
	}
	if !utils.IsNil(o.Code) {
		toSerialize["Code"] = o.Code
	}
	if !utils.IsNil(o.CompletedCount) {
		toSerialize["CompletedCount"] = o.CompletedCount
	}
	if o.CompletedPercent.IsSet() {
		toSerialize["CompletedPercent"] = o.CompletedPercent.Get()
	}
	if !utils.IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !utils.IsNil(o.Creator) {
		toSerialize["Creator"] = o.Creator
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !utils.IsNil(o.Iterations) {
		toSerialize["Iterations"] = o.Iterations
	}
	if !utils.IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !utils.IsNil(o.ProcessingCount) {
		toSerialize["ProcessingCount"] = o.ProcessingCount
	}
	if !utils.IsNil(o.ProjectId) {
		toSerialize["ProjectId"] = o.ProjectId
	}
	if !utils.IsNil(o.ReleaseDate) {
		toSerialize["ReleaseDate"] = o.ReleaseDate
	}
	if !utils.IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !utils.IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !utils.IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if !utils.IsNil(o.WaitProcessCount) {
		toSerialize["WaitProcessCount"] = o.WaitProcessCount
	}
	return toSerialize, nil
}

type NullableOpenApiRelease struct {
	value *OpenApiRelease
	isSet bool
}

func (v NullableOpenApiRelease) Get() *OpenApiRelease {
	return v.value
}

func (v *NullableOpenApiRelease) Set(val *OpenApiRelease) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenApiRelease) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenApiRelease) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenApiRelease(val *OpenApiRelease) *NullableOpenApiRelease {
	return &NullableOpenApiRelease{value: val, isSet: true}
}

func (v NullableOpenApiRelease) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenApiRelease) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


