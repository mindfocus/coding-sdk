/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeTeamArtifactsRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeTeamArtifactsRequest{}

// DescribeTeamArtifactsRequest struct for DescribeTeamArtifactsRequest
type DescribeTeamArtifactsRequest struct {
	// 页码，默认：1
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 每页展示数量，默认：10
	PageSize *int64 `json:"PageSize,omitempty"`
	Rule *ArtifactFilterRule `json:"Rule,omitempty"`
}

// NewDescribeTeamArtifactsRequest instantiates a new DescribeTeamArtifactsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeTeamArtifactsRequest() *DescribeTeamArtifactsRequest {
	this := DescribeTeamArtifactsRequest{}
	return &this
}

// NewDescribeTeamArtifactsRequestWithDefaults instantiates a new DescribeTeamArtifactsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeTeamArtifactsRequestWithDefaults() *DescribeTeamArtifactsRequest {
	this := DescribeTeamArtifactsRequest{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeTeamArtifactsRequest) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeTeamArtifactsRequest) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeTeamArtifactsRequest) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *DescribeTeamArtifactsRequest) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeTeamArtifactsRequest) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeTeamArtifactsRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeTeamArtifactsRequest) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *DescribeTeamArtifactsRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *DescribeTeamArtifactsRequest) GetRule() ArtifactFilterRule {
	if o == nil || utils.IsNil(o.Rule) {
		var ret ArtifactFilterRule
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeTeamArtifactsRequest) GetRuleOk() (*ArtifactFilterRule, bool) {
	if o == nil || utils.IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *DescribeTeamArtifactsRequest) HasRule() bool {
	if o != nil && !utils.IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given ArtifactFilterRule and assigns it to the Rule field.
func (o *DescribeTeamArtifactsRequest) SetRule(v ArtifactFilterRule) {
	o.Rule = &v
}

func (o DescribeTeamArtifactsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeTeamArtifactsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.Rule) {
		toSerialize["Rule"] = o.Rule
	}
	return toSerialize, nil
}

type NullableDescribeTeamArtifactsRequest struct {
	value *DescribeTeamArtifactsRequest
	isSet bool
}

func (v NullableDescribeTeamArtifactsRequest) Get() *DescribeTeamArtifactsRequest {
	return v.value
}

func (v *NullableDescribeTeamArtifactsRequest) Set(val *DescribeTeamArtifactsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeTeamArtifactsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeTeamArtifactsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeTeamArtifactsRequest(val *DescribeTeamArtifactsRequest) *NullableDescribeTeamArtifactsRequest {
	return &NullableDescribeTeamArtifactsRequest{value: val, isSet: true}
}

func (v NullableDescribeTeamArtifactsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeTeamArtifactsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


