/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeDepotMergeRequestsRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeDepotMergeRequestsRequest{}

// DescribeDepotMergeRequestsRequest struct for DescribeDepotMergeRequestsRequest
type DescribeDepotMergeRequestsRequest struct {
	// mr创建结束时间
	CreatedAtEndDate *string `json:"CreatedAtEndDate,omitempty"`
	// mr创建开始时间
	CreatedAtStartDate *string `json:"CreatedAtStartDate,omitempty"`
	// 合并请求创建者邮箱列表
	CreatorEmails []string `json:"CreatorEmails,omitempty"`
	// 合并请求创建者 Global Key 列表
	CreatorGlobalKeys []string `json:"CreatorGlobalKeys,omitempty"`
	// 仓库 ID
	DepotId int64 `json:"DepotId"`
	// 仓库路径
	DepotPath *string `json:"DepotPath,omitempty"`
	// 是否升序
	IsSortDirectionAsc *bool `json:"IsSortDirectionAsc,omitempty"`
	// 关键词
	KeyWord *string `json:"KeyWord,omitempty"`
	// 关联标签
	Labels []string `json:"Labels,omitempty"`
	// 合并请求合并者邮箱列表
	MergerEmails []string `json:"MergerEmails,omitempty"`
	// 合并请求合并者 Global Key 列表
	MergerGlobalKeys []string `json:"MergerGlobalKeys,omitempty"`
	// 页数 默认为1
	PageNumber *int64 `json:"PageNumber,omitempty"`
	// 每页数量 默认为10
	PageSize *int64 `json:"PageSize,omitempty"`
	// 合并请求评审者邮箱列表
	ReviewerEmails []string `json:"ReviewerEmails,omitempty"`
	// 评审者 Global Key 列表
	ReviewerGlobalKeys []string `json:"ReviewerGlobalKeys,omitempty"`
	// 排序 created_at merged_at action_at
	Sort *string `json:"Sort,omitempty"`
	// 源分支
	SourceBranches []string `json:"SourceBranches,omitempty"`
	// 合并请求状态 OPEN CLOSE ALL ACCEPTED
	Status *string `json:"Status,omitempty"`
	// 目标分支
	TargetBranches []string `json:"TargetBranches,omitempty"`
	// mr更新结束时间
	UpdatedAtEndDate *string `json:"UpdatedAtEndDate,omitempty"`
	// mr更新开始时间
	UpdatedAtStartDate *string `json:"UpdatedAtStartDate,omitempty"`
}

type _DescribeDepotMergeRequestsRequest DescribeDepotMergeRequestsRequest

// NewDescribeDepotMergeRequestsRequest instantiates a new DescribeDepotMergeRequestsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeDepotMergeRequestsRequest(depotId int64) *DescribeDepotMergeRequestsRequest {
	this := DescribeDepotMergeRequestsRequest{}
	this.DepotId = depotId
	return &this
}

// NewDescribeDepotMergeRequestsRequestWithDefaults instantiates a new DescribeDepotMergeRequestsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeDepotMergeRequestsRequestWithDefaults() *DescribeDepotMergeRequestsRequest {
	this := DescribeDepotMergeRequestsRequest{}
	return &this
}

// GetCreatedAtEndDate returns the CreatedAtEndDate field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetCreatedAtEndDate() string {
	if o == nil || utils.IsNil(o.CreatedAtEndDate) {
		var ret string
		return ret
	}
	return *o.CreatedAtEndDate
}

// GetCreatedAtEndDateOk returns a tuple with the CreatedAtEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetCreatedAtEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatedAtEndDate) {
		return nil, false
	}
	return o.CreatedAtEndDate, true
}

// HasCreatedAtEndDate returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasCreatedAtEndDate() bool {
	if o != nil && !utils.IsNil(o.CreatedAtEndDate) {
		return true
	}

	return false
}

// SetCreatedAtEndDate gets a reference to the given string and assigns it to the CreatedAtEndDate field.
func (o *DescribeDepotMergeRequestsRequest) SetCreatedAtEndDate(v string) {
	o.CreatedAtEndDate = &v
}

// GetCreatedAtStartDate returns the CreatedAtStartDate field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetCreatedAtStartDate() string {
	if o == nil || utils.IsNil(o.CreatedAtStartDate) {
		var ret string
		return ret
	}
	return *o.CreatedAtStartDate
}

// GetCreatedAtStartDateOk returns a tuple with the CreatedAtStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetCreatedAtStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CreatedAtStartDate) {
		return nil, false
	}
	return o.CreatedAtStartDate, true
}

// HasCreatedAtStartDate returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasCreatedAtStartDate() bool {
	if o != nil && !utils.IsNil(o.CreatedAtStartDate) {
		return true
	}

	return false
}

// SetCreatedAtStartDate gets a reference to the given string and assigns it to the CreatedAtStartDate field.
func (o *DescribeDepotMergeRequestsRequest) SetCreatedAtStartDate(v string) {
	o.CreatedAtStartDate = &v
}

// GetCreatorEmails returns the CreatorEmails field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetCreatorEmails() []string {
	if o == nil || utils.IsNil(o.CreatorEmails) {
		var ret []string
		return ret
	}
	return o.CreatorEmails
}

// GetCreatorEmailsOk returns a tuple with the CreatorEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetCreatorEmailsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.CreatorEmails) {
		return nil, false
	}
	return o.CreatorEmails, true
}

// HasCreatorEmails returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasCreatorEmails() bool {
	if o != nil && !utils.IsNil(o.CreatorEmails) {
		return true
	}

	return false
}

// SetCreatorEmails gets a reference to the given []string and assigns it to the CreatorEmails field.
func (o *DescribeDepotMergeRequestsRequest) SetCreatorEmails(v []string) {
	o.CreatorEmails = v
}

// GetCreatorGlobalKeys returns the CreatorGlobalKeys field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetCreatorGlobalKeys() []string {
	if o == nil || utils.IsNil(o.CreatorGlobalKeys) {
		var ret []string
		return ret
	}
	return o.CreatorGlobalKeys
}

// GetCreatorGlobalKeysOk returns a tuple with the CreatorGlobalKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetCreatorGlobalKeysOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.CreatorGlobalKeys) {
		return nil, false
	}
	return o.CreatorGlobalKeys, true
}

// HasCreatorGlobalKeys returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasCreatorGlobalKeys() bool {
	if o != nil && !utils.IsNil(o.CreatorGlobalKeys) {
		return true
	}

	return false
}

// SetCreatorGlobalKeys gets a reference to the given []string and assigns it to the CreatorGlobalKeys field.
func (o *DescribeDepotMergeRequestsRequest) SetCreatorGlobalKeys(v []string) {
	o.CreatorGlobalKeys = v
}

// GetDepotId returns the DepotId field value
func (o *DescribeDepotMergeRequestsRequest) GetDepotId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DepotId
}

// GetDepotIdOk returns a tuple with the DepotId field value
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetDepotIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotId, true
}

// SetDepotId sets field value
func (o *DescribeDepotMergeRequestsRequest) SetDepotId(v int64) {
	o.DepotId = v
}

// GetDepotPath returns the DepotPath field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetDepotPath() string {
	if o == nil || utils.IsNil(o.DepotPath) {
		var ret string
		return ret
	}
	return *o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetDepotPathOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DepotPath) {
		return nil, false
	}
	return o.DepotPath, true
}

// HasDepotPath returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasDepotPath() bool {
	if o != nil && !utils.IsNil(o.DepotPath) {
		return true
	}

	return false
}

// SetDepotPath gets a reference to the given string and assigns it to the DepotPath field.
func (o *DescribeDepotMergeRequestsRequest) SetDepotPath(v string) {
	o.DepotPath = &v
}

// GetIsSortDirectionAsc returns the IsSortDirectionAsc field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetIsSortDirectionAsc() bool {
	if o == nil || utils.IsNil(o.IsSortDirectionAsc) {
		var ret bool
		return ret
	}
	return *o.IsSortDirectionAsc
}

// GetIsSortDirectionAscOk returns a tuple with the IsSortDirectionAsc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetIsSortDirectionAscOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.IsSortDirectionAsc) {
		return nil, false
	}
	return o.IsSortDirectionAsc, true
}

// HasIsSortDirectionAsc returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasIsSortDirectionAsc() bool {
	if o != nil && !utils.IsNil(o.IsSortDirectionAsc) {
		return true
	}

	return false
}

// SetIsSortDirectionAsc gets a reference to the given bool and assigns it to the IsSortDirectionAsc field.
func (o *DescribeDepotMergeRequestsRequest) SetIsSortDirectionAsc(v bool) {
	o.IsSortDirectionAsc = &v
}

// GetKeyWord returns the KeyWord field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetKeyWord() string {
	if o == nil || utils.IsNil(o.KeyWord) {
		var ret string
		return ret
	}
	return *o.KeyWord
}

// GetKeyWordOk returns a tuple with the KeyWord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetKeyWordOk() (*string, bool) {
	if o == nil || utils.IsNil(o.KeyWord) {
		return nil, false
	}
	return o.KeyWord, true
}

// HasKeyWord returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasKeyWord() bool {
	if o != nil && !utils.IsNil(o.KeyWord) {
		return true
	}

	return false
}

// SetKeyWord gets a reference to the given string and assigns it to the KeyWord field.
func (o *DescribeDepotMergeRequestsRequest) SetKeyWord(v string) {
	o.KeyWord = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetLabels() []string {
	if o == nil || utils.IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetLabelsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasLabels() bool {
	if o != nil && !utils.IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *DescribeDepotMergeRequestsRequest) SetLabels(v []string) {
	o.Labels = v
}

// GetMergerEmails returns the MergerEmails field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetMergerEmails() []string {
	if o == nil || utils.IsNil(o.MergerEmails) {
		var ret []string
		return ret
	}
	return o.MergerEmails
}

// GetMergerEmailsOk returns a tuple with the MergerEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetMergerEmailsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.MergerEmails) {
		return nil, false
	}
	return o.MergerEmails, true
}

// HasMergerEmails returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasMergerEmails() bool {
	if o != nil && !utils.IsNil(o.MergerEmails) {
		return true
	}

	return false
}

// SetMergerEmails gets a reference to the given []string and assigns it to the MergerEmails field.
func (o *DescribeDepotMergeRequestsRequest) SetMergerEmails(v []string) {
	o.MergerEmails = v
}

// GetMergerGlobalKeys returns the MergerGlobalKeys field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetMergerGlobalKeys() []string {
	if o == nil || utils.IsNil(o.MergerGlobalKeys) {
		var ret []string
		return ret
	}
	return o.MergerGlobalKeys
}

// GetMergerGlobalKeysOk returns a tuple with the MergerGlobalKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetMergerGlobalKeysOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.MergerGlobalKeys) {
		return nil, false
	}
	return o.MergerGlobalKeys, true
}

// HasMergerGlobalKeys returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasMergerGlobalKeys() bool {
	if o != nil && !utils.IsNil(o.MergerGlobalKeys) {
		return true
	}

	return false
}

// SetMergerGlobalKeys gets a reference to the given []string and assigns it to the MergerGlobalKeys field.
func (o *DescribeDepotMergeRequestsRequest) SetMergerGlobalKeys(v []string) {
	o.MergerGlobalKeys = v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetPageNumberOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasPageNumber() bool {
	if o != nil && !utils.IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *DescribeDepotMergeRequestsRequest) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasPageSize() bool {
	if o != nil && !utils.IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *DescribeDepotMergeRequestsRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetReviewerEmails returns the ReviewerEmails field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetReviewerEmails() []string {
	if o == nil || utils.IsNil(o.ReviewerEmails) {
		var ret []string
		return ret
	}
	return o.ReviewerEmails
}

// GetReviewerEmailsOk returns a tuple with the ReviewerEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetReviewerEmailsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.ReviewerEmails) {
		return nil, false
	}
	return o.ReviewerEmails, true
}

// HasReviewerEmails returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasReviewerEmails() bool {
	if o != nil && !utils.IsNil(o.ReviewerEmails) {
		return true
	}

	return false
}

// SetReviewerEmails gets a reference to the given []string and assigns it to the ReviewerEmails field.
func (o *DescribeDepotMergeRequestsRequest) SetReviewerEmails(v []string) {
	o.ReviewerEmails = v
}

// GetReviewerGlobalKeys returns the ReviewerGlobalKeys field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetReviewerGlobalKeys() []string {
	if o == nil || utils.IsNil(o.ReviewerGlobalKeys) {
		var ret []string
		return ret
	}
	return o.ReviewerGlobalKeys
}

// GetReviewerGlobalKeysOk returns a tuple with the ReviewerGlobalKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetReviewerGlobalKeysOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.ReviewerGlobalKeys) {
		return nil, false
	}
	return o.ReviewerGlobalKeys, true
}

// HasReviewerGlobalKeys returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasReviewerGlobalKeys() bool {
	if o != nil && !utils.IsNil(o.ReviewerGlobalKeys) {
		return true
	}

	return false
}

// SetReviewerGlobalKeys gets a reference to the given []string and assigns it to the ReviewerGlobalKeys field.
func (o *DescribeDepotMergeRequestsRequest) SetReviewerGlobalKeys(v []string) {
	o.ReviewerGlobalKeys = v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetSort() string {
	if o == nil || utils.IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetSortOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasSort() bool {
	if o != nil && !utils.IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *DescribeDepotMergeRequestsRequest) SetSort(v string) {
	o.Sort = &v
}

// GetSourceBranches returns the SourceBranches field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetSourceBranches() []string {
	if o == nil || utils.IsNil(o.SourceBranches) {
		var ret []string
		return ret
	}
	return o.SourceBranches
}

// GetSourceBranchesOk returns a tuple with the SourceBranches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetSourceBranchesOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.SourceBranches) {
		return nil, false
	}
	return o.SourceBranches, true
}

// HasSourceBranches returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasSourceBranches() bool {
	if o != nil && !utils.IsNil(o.SourceBranches) {
		return true
	}

	return false
}

// SetSourceBranches gets a reference to the given []string and assigns it to the SourceBranches field.
func (o *DescribeDepotMergeRequestsRequest) SetSourceBranches(v []string) {
	o.SourceBranches = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DescribeDepotMergeRequestsRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTargetBranches returns the TargetBranches field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetTargetBranches() []string {
	if o == nil || utils.IsNil(o.TargetBranches) {
		var ret []string
		return ret
	}
	return o.TargetBranches
}

// GetTargetBranchesOk returns a tuple with the TargetBranches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetTargetBranchesOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.TargetBranches) {
		return nil, false
	}
	return o.TargetBranches, true
}

// HasTargetBranches returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasTargetBranches() bool {
	if o != nil && !utils.IsNil(o.TargetBranches) {
		return true
	}

	return false
}

// SetTargetBranches gets a reference to the given []string and assigns it to the TargetBranches field.
func (o *DescribeDepotMergeRequestsRequest) SetTargetBranches(v []string) {
	o.TargetBranches = v
}

// GetUpdatedAtEndDate returns the UpdatedAtEndDate field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetUpdatedAtEndDate() string {
	if o == nil || utils.IsNil(o.UpdatedAtEndDate) {
		var ret string
		return ret
	}
	return *o.UpdatedAtEndDate
}

// GetUpdatedAtEndDateOk returns a tuple with the UpdatedAtEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetUpdatedAtEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.UpdatedAtEndDate) {
		return nil, false
	}
	return o.UpdatedAtEndDate, true
}

// HasUpdatedAtEndDate returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasUpdatedAtEndDate() bool {
	if o != nil && !utils.IsNil(o.UpdatedAtEndDate) {
		return true
	}

	return false
}

// SetUpdatedAtEndDate gets a reference to the given string and assigns it to the UpdatedAtEndDate field.
func (o *DescribeDepotMergeRequestsRequest) SetUpdatedAtEndDate(v string) {
	o.UpdatedAtEndDate = &v
}

// GetUpdatedAtStartDate returns the UpdatedAtStartDate field value if set, zero value otherwise.
func (o *DescribeDepotMergeRequestsRequest) GetUpdatedAtStartDate() string {
	if o == nil || utils.IsNil(o.UpdatedAtStartDate) {
		var ret string
		return ret
	}
	return *o.UpdatedAtStartDate
}

// GetUpdatedAtStartDateOk returns a tuple with the UpdatedAtStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDepotMergeRequestsRequest) GetUpdatedAtStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.UpdatedAtStartDate) {
		return nil, false
	}
	return o.UpdatedAtStartDate, true
}

// HasUpdatedAtStartDate returns a boolean if a field has been set.
func (o *DescribeDepotMergeRequestsRequest) HasUpdatedAtStartDate() bool {
	if o != nil && !utils.IsNil(o.UpdatedAtStartDate) {
		return true
	}

	return false
}

// SetUpdatedAtStartDate gets a reference to the given string and assigns it to the UpdatedAtStartDate field.
func (o *DescribeDepotMergeRequestsRequest) SetUpdatedAtStartDate(v string) {
	o.UpdatedAtStartDate = &v
}

func (o DescribeDepotMergeRequestsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeDepotMergeRequestsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CreatedAtEndDate) {
		toSerialize["CreatedAtEndDate"] = o.CreatedAtEndDate
	}
	if !utils.IsNil(o.CreatedAtStartDate) {
		toSerialize["CreatedAtStartDate"] = o.CreatedAtStartDate
	}
	if !utils.IsNil(o.CreatorEmails) {
		toSerialize["CreatorEmails"] = o.CreatorEmails
	}
	if !utils.IsNil(o.CreatorGlobalKeys) {
		toSerialize["CreatorGlobalKeys"] = o.CreatorGlobalKeys
	}
	toSerialize["DepotId"] = o.DepotId
	if !utils.IsNil(o.DepotPath) {
		toSerialize["DepotPath"] = o.DepotPath
	}
	if !utils.IsNil(o.IsSortDirectionAsc) {
		toSerialize["IsSortDirectionAsc"] = o.IsSortDirectionAsc
	}
	if !utils.IsNil(o.KeyWord) {
		toSerialize["KeyWord"] = o.KeyWord
	}
	if !utils.IsNil(o.Labels) {
		toSerialize["Labels"] = o.Labels
	}
	if !utils.IsNil(o.MergerEmails) {
		toSerialize["MergerEmails"] = o.MergerEmails
	}
	if !utils.IsNil(o.MergerGlobalKeys) {
		toSerialize["MergerGlobalKeys"] = o.MergerGlobalKeys
	}
	if !utils.IsNil(o.PageNumber) {
		toSerialize["PageNumber"] = o.PageNumber
	}
	if !utils.IsNil(o.PageSize) {
		toSerialize["PageSize"] = o.PageSize
	}
	if !utils.IsNil(o.ReviewerEmails) {
		toSerialize["ReviewerEmails"] = o.ReviewerEmails
	}
	if !utils.IsNil(o.ReviewerGlobalKeys) {
		toSerialize["ReviewerGlobalKeys"] = o.ReviewerGlobalKeys
	}
	if !utils.IsNil(o.Sort) {
		toSerialize["Sort"] = o.Sort
	}
	if !utils.IsNil(o.SourceBranches) {
		toSerialize["SourceBranches"] = o.SourceBranches
	}
	if !utils.IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !utils.IsNil(o.TargetBranches) {
		toSerialize["TargetBranches"] = o.TargetBranches
	}
	if !utils.IsNil(o.UpdatedAtEndDate) {
		toSerialize["UpdatedAtEndDate"] = o.UpdatedAtEndDate
	}
	if !utils.IsNil(o.UpdatedAtStartDate) {
		toSerialize["UpdatedAtStartDate"] = o.UpdatedAtStartDate
	}
	return toSerialize, nil
}

func (o *DescribeDepotMergeRequestsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeDepotMergeRequestsRequest := _DescribeDepotMergeRequestsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeDepotMergeRequestsRequest)

	if err != nil {
		return err
	}

	*o = DescribeDepotMergeRequestsRequest(varDescribeDepotMergeRequestsRequest)

	return err
}

type NullableDescribeDepotMergeRequestsRequest struct {
	value *DescribeDepotMergeRequestsRequest
	isSet bool
}

func (v NullableDescribeDepotMergeRequestsRequest) Get() *DescribeDepotMergeRequestsRequest {
	return v.value
}

func (v *NullableDescribeDepotMergeRequestsRequest) Set(val *DescribeDepotMergeRequestsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeDepotMergeRequestsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeDepotMergeRequestsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeDepotMergeRequestsRequest(val *DescribeDepotMergeRequestsRequest) *NullableDescribeDepotMergeRequestsRequest {
	return &NullableDescribeDepotMergeRequestsRequest{value: val, isSet: true}
}

func (v NullableDescribeDepotMergeRequestsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeDepotMergeRequestsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


