/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the MergeRequestDetail type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MergeRequestDetail{}

// MergeRequestDetail 合并请求详细数据
type MergeRequestDetail struct {
	// 是否允许合并时间
	ActionAt utils.NullableInt64 `json:"ActionAt,omitempty"`
	ActionAuthor *CodingUser `json:"ActionAuthor,omitempty"`
	Author *CodingUser `json:"Author,omitempty"`
	// 合并请求描述
	Content utils.NullableString `json:"Content,omitempty"`
	// 合并请求描述（html 格式）
	ContentHtml utils.NullableString `json:"ContentHtml,omitempty"`
	// 创建时间
	CreateAt utils.NullableInt64 `json:"CreateAt,omitempty"`
	// 仓库 Id
	DepotId utils.NullableInt64 `json:"DepotId,omitempty"`
	// 合并请求 Id
	Id utils.NullableInt64 `json:"Id,omitempty"`
	// 合并请求 Iid
	MergeId utils.NullableInt64 `json:"MergeId,omitempty"`
	// 合并请求状态
	MergeStatus utils.NullableString `json:"MergeStatus,omitempty"`
	// 合并 Sha
	MergedSha utils.NullableString `json:"MergedSha,omitempty"`
	// 源分支名
	SourceBranch utils.NullableString `json:"SourceBranch,omitempty"`
	// 源分支 Sha
	SourceSha utils.NullableString `json:"SourceSha,omitempty"`
	// 目标分支名
	TargetBranch utils.NullableString `json:"TargetBranch,omitempty"`
	// 目标分支 Sha
	TargetSha utils.NullableString `json:"TargetSha,omitempty"`
	// 合并请求标题
	Title utils.NullableString `json:"Title,omitempty"`
	// 更新时间
	UpdateAt utils.NullableInt64 `json:"UpdateAt,omitempty"`
}

// NewMergeRequestDetail instantiates a new MergeRequestDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeRequestDetail() *MergeRequestDetail {
	this := MergeRequestDetail{}
	var content string = ""
	this.Content = *utils.NewNullableString(&content)
	var contentHtml string = ""
	this.ContentHtml = *utils.NewNullableString(&contentHtml)
	var mergeStatus string = ""
	this.MergeStatus = *utils.NewNullableString(&mergeStatus)
	var mergedSha string = ""
	this.MergedSha = *utils.NewNullableString(&mergedSha)
	var sourceBranch string = ""
	this.SourceBranch = *utils.NewNullableString(&sourceBranch)
	var sourceSha string = ""
	this.SourceSha = *utils.NewNullableString(&sourceSha)
	var targetBranch string = ""
	this.TargetBranch = *utils.NewNullableString(&targetBranch)
	var targetSha string = ""
	this.TargetSha = *utils.NewNullableString(&targetSha)
	var title string = ""
	this.Title = *utils.NewNullableString(&title)
	return &this
}

// NewMergeRequestDetailWithDefaults instantiates a new MergeRequestDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeRequestDetailWithDefaults() *MergeRequestDetail {
	this := MergeRequestDetail{}
	var content string = ""
	this.Content = *utils.NewNullableString(&content)
	var contentHtml string = ""
	this.ContentHtml = *utils.NewNullableString(&contentHtml)
	var mergeStatus string = ""
	this.MergeStatus = *utils.NewNullableString(&mergeStatus)
	var mergedSha string = ""
	this.MergedSha = *utils.NewNullableString(&mergedSha)
	var sourceBranch string = ""
	this.SourceBranch = *utils.NewNullableString(&sourceBranch)
	var sourceSha string = ""
	this.SourceSha = *utils.NewNullableString(&sourceSha)
	var targetBranch string = ""
	this.TargetBranch = *utils.NewNullableString(&targetBranch)
	var targetSha string = ""
	this.TargetSha = *utils.NewNullableString(&targetSha)
	var title string = ""
	this.Title = *utils.NewNullableString(&title)
	return &this
}

// GetActionAt returns the ActionAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetActionAt() int64 {
	if o == nil || utils.IsNil(o.ActionAt.Get()) {
		var ret int64
		return ret
	}
	return *o.ActionAt.Get()
}

// GetActionAtOk returns a tuple with the ActionAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetActionAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActionAt.Get(), o.ActionAt.IsSet()
}

// HasActionAt returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasActionAt() bool {
	if o != nil && o.ActionAt.IsSet() {
		return true
	}

	return false
}

// SetActionAt gets a reference to the given utils.NullableInt64 and assigns it to the ActionAt field.
func (o *MergeRequestDetail) SetActionAt(v int64) {
	o.ActionAt.Set(&v)
}
// SetActionAtNil sets the value for ActionAt to be an explicit nil
func (o *MergeRequestDetail) SetActionAtNil() {
	o.ActionAt.Set(nil)
}

// UnsetActionAt ensures that no value is present for ActionAt, not even an explicit nil
func (o *MergeRequestDetail) UnsetActionAt() {
	o.ActionAt.Unset()
}

// GetActionAuthor returns the ActionAuthor field value if set, zero value otherwise.
func (o *MergeRequestDetail) GetActionAuthor() CodingUser {
	if o == nil || utils.IsNil(o.ActionAuthor) {
		var ret CodingUser
		return ret
	}
	return *o.ActionAuthor
}

// GetActionAuthorOk returns a tuple with the ActionAuthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeRequestDetail) GetActionAuthorOk() (*CodingUser, bool) {
	if o == nil || utils.IsNil(o.ActionAuthor) {
		return nil, false
	}
	return o.ActionAuthor, true
}

// HasActionAuthor returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasActionAuthor() bool {
	if o != nil && !utils.IsNil(o.ActionAuthor) {
		return true
	}

	return false
}

// SetActionAuthor gets a reference to the given CodingUser and assigns it to the ActionAuthor field.
func (o *MergeRequestDetail) SetActionAuthor(v CodingUser) {
	o.ActionAuthor = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *MergeRequestDetail) GetAuthor() CodingUser {
	if o == nil || utils.IsNil(o.Author) {
		var ret CodingUser
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeRequestDetail) GetAuthorOk() (*CodingUser, bool) {
	if o == nil || utils.IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasAuthor() bool {
	if o != nil && !utils.IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given CodingUser and assigns it to the Author field.
func (o *MergeRequestDetail) SetAuthor(v CodingUser) {
	o.Author = &v
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetContent() string {
	if o == nil || utils.IsNil(o.Content.Get()) {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given utils.NullableString and assigns it to the Content field.
func (o *MergeRequestDetail) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *MergeRequestDetail) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *MergeRequestDetail) UnsetContent() {
	o.Content.Unset()
}

// GetContentHtml returns the ContentHtml field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetContentHtml() string {
	if o == nil || utils.IsNil(o.ContentHtml.Get()) {
		var ret string
		return ret
	}
	return *o.ContentHtml.Get()
}

// GetContentHtmlOk returns a tuple with the ContentHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetContentHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentHtml.Get(), o.ContentHtml.IsSet()
}

// HasContentHtml returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasContentHtml() bool {
	if o != nil && o.ContentHtml.IsSet() {
		return true
	}

	return false
}

// SetContentHtml gets a reference to the given utils.NullableString and assigns it to the ContentHtml field.
func (o *MergeRequestDetail) SetContentHtml(v string) {
	o.ContentHtml.Set(&v)
}
// SetContentHtmlNil sets the value for ContentHtml to be an explicit nil
func (o *MergeRequestDetail) SetContentHtmlNil() {
	o.ContentHtml.Set(nil)
}

// UnsetContentHtml ensures that no value is present for ContentHtml, not even an explicit nil
func (o *MergeRequestDetail) UnsetContentHtml() {
	o.ContentHtml.Unset()
}

// GetCreateAt returns the CreateAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetCreateAt() int64 {
	if o == nil || utils.IsNil(o.CreateAt.Get()) {
		var ret int64
		return ret
	}
	return *o.CreateAt.Get()
}

// GetCreateAtOk returns a tuple with the CreateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetCreateAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreateAt.Get(), o.CreateAt.IsSet()
}

// HasCreateAt returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasCreateAt() bool {
	if o != nil && o.CreateAt.IsSet() {
		return true
	}

	return false
}

// SetCreateAt gets a reference to the given utils.NullableInt64 and assigns it to the CreateAt field.
func (o *MergeRequestDetail) SetCreateAt(v int64) {
	o.CreateAt.Set(&v)
}
// SetCreateAtNil sets the value for CreateAt to be an explicit nil
func (o *MergeRequestDetail) SetCreateAtNil() {
	o.CreateAt.Set(nil)
}

// UnsetCreateAt ensures that no value is present for CreateAt, not even an explicit nil
func (o *MergeRequestDetail) UnsetCreateAt() {
	o.CreateAt.Unset()
}

// GetDepotId returns the DepotId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetDepotId() int64 {
	if o == nil || utils.IsNil(o.DepotId.Get()) {
		var ret int64
		return ret
	}
	return *o.DepotId.Get()
}

// GetDepotIdOk returns a tuple with the DepotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetDepotIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DepotId.Get(), o.DepotId.IsSet()
}

// HasDepotId returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasDepotId() bool {
	if o != nil && o.DepotId.IsSet() {
		return true
	}

	return false
}

// SetDepotId gets a reference to the given utils.NullableInt64 and assigns it to the DepotId field.
func (o *MergeRequestDetail) SetDepotId(v int64) {
	o.DepotId.Set(&v)
}
// SetDepotIdNil sets the value for DepotId to be an explicit nil
func (o *MergeRequestDetail) SetDepotIdNil() {
	o.DepotId.Set(nil)
}

// UnsetDepotId ensures that no value is present for DepotId, not even an explicit nil
func (o *MergeRequestDetail) UnsetDepotId() {
	o.DepotId.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetId() int64 {
	if o == nil || utils.IsNil(o.Id.Get()) {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given utils.NullableInt64 and assigns it to the Id field.
func (o *MergeRequestDetail) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *MergeRequestDetail) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *MergeRequestDetail) UnsetId() {
	o.Id.Unset()
}

// GetMergeId returns the MergeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetMergeId() int64 {
	if o == nil || utils.IsNil(o.MergeId.Get()) {
		var ret int64
		return ret
	}
	return *o.MergeId.Get()
}

// GetMergeIdOk returns a tuple with the MergeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetMergeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MergeId.Get(), o.MergeId.IsSet()
}

// HasMergeId returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasMergeId() bool {
	if o != nil && o.MergeId.IsSet() {
		return true
	}

	return false
}

// SetMergeId gets a reference to the given utils.NullableInt64 and assigns it to the MergeId field.
func (o *MergeRequestDetail) SetMergeId(v int64) {
	o.MergeId.Set(&v)
}
// SetMergeIdNil sets the value for MergeId to be an explicit nil
func (o *MergeRequestDetail) SetMergeIdNil() {
	o.MergeId.Set(nil)
}

// UnsetMergeId ensures that no value is present for MergeId, not even an explicit nil
func (o *MergeRequestDetail) UnsetMergeId() {
	o.MergeId.Unset()
}

// GetMergeStatus returns the MergeStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetMergeStatus() string {
	if o == nil || utils.IsNil(o.MergeStatus.Get()) {
		var ret string
		return ret
	}
	return *o.MergeStatus.Get()
}

// GetMergeStatusOk returns a tuple with the MergeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetMergeStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MergeStatus.Get(), o.MergeStatus.IsSet()
}

// HasMergeStatus returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasMergeStatus() bool {
	if o != nil && o.MergeStatus.IsSet() {
		return true
	}

	return false
}

// SetMergeStatus gets a reference to the given utils.NullableString and assigns it to the MergeStatus field.
func (o *MergeRequestDetail) SetMergeStatus(v string) {
	o.MergeStatus.Set(&v)
}
// SetMergeStatusNil sets the value for MergeStatus to be an explicit nil
func (o *MergeRequestDetail) SetMergeStatusNil() {
	o.MergeStatus.Set(nil)
}

// UnsetMergeStatus ensures that no value is present for MergeStatus, not even an explicit nil
func (o *MergeRequestDetail) UnsetMergeStatus() {
	o.MergeStatus.Unset()
}

// GetMergedSha returns the MergedSha field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetMergedSha() string {
	if o == nil || utils.IsNil(o.MergedSha.Get()) {
		var ret string
		return ret
	}
	return *o.MergedSha.Get()
}

// GetMergedShaOk returns a tuple with the MergedSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetMergedShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MergedSha.Get(), o.MergedSha.IsSet()
}

// HasMergedSha returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasMergedSha() bool {
	if o != nil && o.MergedSha.IsSet() {
		return true
	}

	return false
}

// SetMergedSha gets a reference to the given utils.NullableString and assigns it to the MergedSha field.
func (o *MergeRequestDetail) SetMergedSha(v string) {
	o.MergedSha.Set(&v)
}
// SetMergedShaNil sets the value for MergedSha to be an explicit nil
func (o *MergeRequestDetail) SetMergedShaNil() {
	o.MergedSha.Set(nil)
}

// UnsetMergedSha ensures that no value is present for MergedSha, not even an explicit nil
func (o *MergeRequestDetail) UnsetMergedSha() {
	o.MergedSha.Unset()
}

// GetSourceBranch returns the SourceBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetSourceBranch() string {
	if o == nil || utils.IsNil(o.SourceBranch.Get()) {
		var ret string
		return ret
	}
	return *o.SourceBranch.Get()
}

// GetSourceBranchOk returns a tuple with the SourceBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetSourceBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceBranch.Get(), o.SourceBranch.IsSet()
}

// HasSourceBranch returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasSourceBranch() bool {
	if o != nil && o.SourceBranch.IsSet() {
		return true
	}

	return false
}

// SetSourceBranch gets a reference to the given utils.NullableString and assigns it to the SourceBranch field.
func (o *MergeRequestDetail) SetSourceBranch(v string) {
	o.SourceBranch.Set(&v)
}
// SetSourceBranchNil sets the value for SourceBranch to be an explicit nil
func (o *MergeRequestDetail) SetSourceBranchNil() {
	o.SourceBranch.Set(nil)
}

// UnsetSourceBranch ensures that no value is present for SourceBranch, not even an explicit nil
func (o *MergeRequestDetail) UnsetSourceBranch() {
	o.SourceBranch.Unset()
}

// GetSourceSha returns the SourceSha field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetSourceSha() string {
	if o == nil || utils.IsNil(o.SourceSha.Get()) {
		var ret string
		return ret
	}
	return *o.SourceSha.Get()
}

// GetSourceShaOk returns a tuple with the SourceSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetSourceShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceSha.Get(), o.SourceSha.IsSet()
}

// HasSourceSha returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasSourceSha() bool {
	if o != nil && o.SourceSha.IsSet() {
		return true
	}

	return false
}

// SetSourceSha gets a reference to the given utils.NullableString and assigns it to the SourceSha field.
func (o *MergeRequestDetail) SetSourceSha(v string) {
	o.SourceSha.Set(&v)
}
// SetSourceShaNil sets the value for SourceSha to be an explicit nil
func (o *MergeRequestDetail) SetSourceShaNil() {
	o.SourceSha.Set(nil)
}

// UnsetSourceSha ensures that no value is present for SourceSha, not even an explicit nil
func (o *MergeRequestDetail) UnsetSourceSha() {
	o.SourceSha.Unset()
}

// GetTargetBranch returns the TargetBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetTargetBranch() string {
	if o == nil || utils.IsNil(o.TargetBranch.Get()) {
		var ret string
		return ret
	}
	return *o.TargetBranch.Get()
}

// GetTargetBranchOk returns a tuple with the TargetBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetTargetBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetBranch.Get(), o.TargetBranch.IsSet()
}

// HasTargetBranch returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasTargetBranch() bool {
	if o != nil && o.TargetBranch.IsSet() {
		return true
	}

	return false
}

// SetTargetBranch gets a reference to the given utils.NullableString and assigns it to the TargetBranch field.
func (o *MergeRequestDetail) SetTargetBranch(v string) {
	o.TargetBranch.Set(&v)
}
// SetTargetBranchNil sets the value for TargetBranch to be an explicit nil
func (o *MergeRequestDetail) SetTargetBranchNil() {
	o.TargetBranch.Set(nil)
}

// UnsetTargetBranch ensures that no value is present for TargetBranch, not even an explicit nil
func (o *MergeRequestDetail) UnsetTargetBranch() {
	o.TargetBranch.Unset()
}

// GetTargetSha returns the TargetSha field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetTargetSha() string {
	if o == nil || utils.IsNil(o.TargetSha.Get()) {
		var ret string
		return ret
	}
	return *o.TargetSha.Get()
}

// GetTargetShaOk returns a tuple with the TargetSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetTargetShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetSha.Get(), o.TargetSha.IsSet()
}

// HasTargetSha returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasTargetSha() bool {
	if o != nil && o.TargetSha.IsSet() {
		return true
	}

	return false
}

// SetTargetSha gets a reference to the given utils.NullableString and assigns it to the TargetSha field.
func (o *MergeRequestDetail) SetTargetSha(v string) {
	o.TargetSha.Set(&v)
}
// SetTargetShaNil sets the value for TargetSha to be an explicit nil
func (o *MergeRequestDetail) SetTargetShaNil() {
	o.TargetSha.Set(nil)
}

// UnsetTargetSha ensures that no value is present for TargetSha, not even an explicit nil
func (o *MergeRequestDetail) UnsetTargetSha() {
	o.TargetSha.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetTitle() string {
	if o == nil || utils.IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given utils.NullableString and assigns it to the Title field.
func (o *MergeRequestDetail) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *MergeRequestDetail) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *MergeRequestDetail) UnsetTitle() {
	o.Title.Unset()
}

// GetUpdateAt returns the UpdateAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MergeRequestDetail) GetUpdateAt() int64 {
	if o == nil || utils.IsNil(o.UpdateAt.Get()) {
		var ret int64
		return ret
	}
	return *o.UpdateAt.Get()
}

// GetUpdateAtOk returns a tuple with the UpdateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MergeRequestDetail) GetUpdateAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdateAt.Get(), o.UpdateAt.IsSet()
}

// HasUpdateAt returns a boolean if a field has been set.
func (o *MergeRequestDetail) HasUpdateAt() bool {
	if o != nil && o.UpdateAt.IsSet() {
		return true
	}

	return false
}

// SetUpdateAt gets a reference to the given utils.NullableInt64 and assigns it to the UpdateAt field.
func (o *MergeRequestDetail) SetUpdateAt(v int64) {
	o.UpdateAt.Set(&v)
}
// SetUpdateAtNil sets the value for UpdateAt to be an explicit nil
func (o *MergeRequestDetail) SetUpdateAtNil() {
	o.UpdateAt.Set(nil)
}

// UnsetUpdateAt ensures that no value is present for UpdateAt, not even an explicit nil
func (o *MergeRequestDetail) UnsetUpdateAt() {
	o.UpdateAt.Unset()
}

func (o MergeRequestDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeRequestDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionAt.IsSet() {
		toSerialize["ActionAt"] = o.ActionAt.Get()
	}
	if !utils.IsNil(o.ActionAuthor) {
		toSerialize["ActionAuthor"] = o.ActionAuthor
	}
	if !utils.IsNil(o.Author) {
		toSerialize["Author"] = o.Author
	}
	if o.Content.IsSet() {
		toSerialize["Content"] = o.Content.Get()
	}
	if o.ContentHtml.IsSet() {
		toSerialize["ContentHtml"] = o.ContentHtml.Get()
	}
	if o.CreateAt.IsSet() {
		toSerialize["CreateAt"] = o.CreateAt.Get()
	}
	if o.DepotId.IsSet() {
		toSerialize["DepotId"] = o.DepotId.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.MergeId.IsSet() {
		toSerialize["MergeId"] = o.MergeId.Get()
	}
	if o.MergeStatus.IsSet() {
		toSerialize["MergeStatus"] = o.MergeStatus.Get()
	}
	if o.MergedSha.IsSet() {
		toSerialize["MergedSha"] = o.MergedSha.Get()
	}
	if o.SourceBranch.IsSet() {
		toSerialize["SourceBranch"] = o.SourceBranch.Get()
	}
	if o.SourceSha.IsSet() {
		toSerialize["SourceSha"] = o.SourceSha.Get()
	}
	if o.TargetBranch.IsSet() {
		toSerialize["TargetBranch"] = o.TargetBranch.Get()
	}
	if o.TargetSha.IsSet() {
		toSerialize["TargetSha"] = o.TargetSha.Get()
	}
	if o.Title.IsSet() {
		toSerialize["Title"] = o.Title.Get()
	}
	if o.UpdateAt.IsSet() {
		toSerialize["UpdateAt"] = o.UpdateAt.Get()
	}
	return toSerialize, nil
}

type NullableMergeRequestDetail struct {
	value *MergeRequestDetail
	isSet bool
}

func (v NullableMergeRequestDetail) Get() *MergeRequestDetail {
	return v.value
}

func (v *NullableMergeRequestDetail) Set(val *MergeRequestDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeRequestDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeRequestDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeRequestDetail(val *MergeRequestDetail) *NullableMergeRequestDetail {
	return &NullableMergeRequestDetail{value: val, isSet: true}
}

func (v NullableMergeRequestDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeRequestDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


