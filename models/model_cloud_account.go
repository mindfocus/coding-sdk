/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CloudAccount type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CloudAccount{}

// CloudAccount CloudAccount 结构
type CloudAccount struct {
	// 云账号类型
	CloudProvider *string `json:"CloudProvider,omitempty"`
	Credential *CloudAccountCredential `json:"Credential,omitempty"`
	// 云账号状态错误信息
	ErrorMessage utils.NullableString `json:"ErrorMessage,omitempty"`
	// 云账号 ID
	Id *int64 `json:"Id,omitempty"`
	// 云账号名称
	Name *string `json:"Name,omitempty"`
	// 云账号状态
	Status *string `json:"Status,omitempty"`
}

// NewCloudAccount instantiates a new CloudAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudAccount() *CloudAccount {
	this := CloudAccount{}
	var cloudProvider string = ""
	this.CloudProvider = &cloudProvider
	var errorMessage string = ""
	this.ErrorMessage = *utils.NewNullableString(&errorMessage)
	var name string = ""
	this.Name = &name
	var status string = ""
	this.Status = &status
	return &this
}

// NewCloudAccountWithDefaults instantiates a new CloudAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudAccountWithDefaults() *CloudAccount {
	this := CloudAccount{}
	var cloudProvider string = ""
	this.CloudProvider = &cloudProvider
	var errorMessage string = ""
	this.ErrorMessage = *utils.NewNullableString(&errorMessage)
	var name string = ""
	this.Name = &name
	var status string = ""
	this.Status = &status
	return &this
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *CloudAccount) GetCloudProvider() string {
	if o == nil || utils.IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAccount) GetCloudProviderOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *CloudAccount) HasCloudProvider() bool {
	if o != nil && !utils.IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *CloudAccount) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *CloudAccount) GetCredential() CloudAccountCredential {
	if o == nil || utils.IsNil(o.Credential) {
		var ret CloudAccountCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAccount) GetCredentialOk() (*CloudAccountCredential, bool) {
	if o == nil || utils.IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *CloudAccount) HasCredential() bool {
	if o != nil && !utils.IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given CloudAccountCredential and assigns it to the Credential field.
func (o *CloudAccount) SetCredential(v CloudAccountCredential) {
	o.Credential = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudAccount) GetErrorMessage() string {
	if o == nil || utils.IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudAccount) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *CloudAccount) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given utils.NullableString and assigns it to the ErrorMessage field.
func (o *CloudAccount) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *CloudAccount) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *CloudAccount) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CloudAccount) GetId() int64 {
	if o == nil || utils.IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAccount) GetIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CloudAccount) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CloudAccount) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloudAccount) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAccount) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CloudAccount) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloudAccount) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CloudAccount) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAccount) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudAccount) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CloudAccount) SetStatus(v string) {
	o.Status = &v
}

func (o CloudAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CloudProvider) {
		toSerialize["CloudProvider"] = o.CloudProvider
	}
	if !utils.IsNil(o.Credential) {
		toSerialize["Credential"] = o.Credential
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["ErrorMessage"] = o.ErrorMessage.Get()
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !utils.IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !utils.IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCloudAccount struct {
	value *CloudAccount
	isSet bool
}

func (v NullableCloudAccount) Get() *CloudAccount {
	return v.value
}

func (v *NullableCloudAccount) Set(val *CloudAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudAccount(val *CloudAccount) *NullableCloudAccount {
	return &NullableCloudAccount{value: val, isSet: true}
}

func (v NullableCloudAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


