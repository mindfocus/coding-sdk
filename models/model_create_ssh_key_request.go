/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateSshKeyRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateSshKeyRequest{}

// CreateSshKeyRequest struct for CreateSshKeyRequest
type CreateSshKeyRequest struct {
	// 公钥内容
	Content string `json:"Content"`
	// 过期时间，不填为永不过期 9999-12-31
	ExpirationDate *string `json:"ExpirationDate,omitempty"`
	// 导入的 ssh key 标识名
	Title string `json:"Title"`
}

type _CreateSshKeyRequest CreateSshKeyRequest

// NewCreateSshKeyRequest instantiates a new CreateSshKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSshKeyRequest(content string, title string) *CreateSshKeyRequest {
	this := CreateSshKeyRequest{}
	this.Content = content
	this.Title = title
	return &this
}

// NewCreateSshKeyRequestWithDefaults instantiates a new CreateSshKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSshKeyRequestWithDefaults() *CreateSshKeyRequest {
	this := CreateSshKeyRequest{}
	return &this
}

// GetContent returns the Content field value
func (o *CreateSshKeyRequest) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *CreateSshKeyRequest) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *CreateSshKeyRequest) SetContent(v string) {
	o.Content = v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *CreateSshKeyRequest) GetExpirationDate() string {
	if o == nil || utils.IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSshKeyRequest) GetExpirationDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *CreateSshKeyRequest) HasExpirationDate() bool {
	if o != nil && !utils.IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *CreateSshKeyRequest) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetTitle returns the Title field value
func (o *CreateSshKeyRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateSshKeyRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateSshKeyRequest) SetTitle(v string) {
	o.Title = v
}

func (o CreateSshKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSshKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Content"] = o.Content
	if !utils.IsNil(o.ExpirationDate) {
		toSerialize["ExpirationDate"] = o.ExpirationDate
	}
	toSerialize["Title"] = o.Title
	return toSerialize, nil
}

func (o *CreateSshKeyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Content",
		"Title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSshKeyRequest := _CreateSshKeyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSshKeyRequest)

	if err != nil {
		return err
	}

	*o = CreateSshKeyRequest(varCreateSshKeyRequest)

	return err
}

type NullableCreateSshKeyRequest struct {
	value *CreateSshKeyRequest
	isSet bool
}

func (v NullableCreateSshKeyRequest) Get() *CreateSshKeyRequest {
	return v.value
}

func (v *NullableCreateSshKeyRequest) Set(val *CreateSshKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSshKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSshKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSshKeyRequest(val *CreateSshKeyRequest) *NullableCreateSshKeyRequest {
	return &NullableCreateSshKeyRequest{value: val, isSet: true}
}

func (v NullableCreateSshKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSshKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


