/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeGitProjectDeployKeysRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeGitProjectDeployKeysRequest{}

// DescribeGitProjectDeployKeysRequest struct for DescribeGitProjectDeployKeysRequest
type DescribeGitProjectDeployKeysRequest struct {
	// 项目 Id
	ProjectId int64 `json:"ProjectId"`
}

type _DescribeGitProjectDeployKeysRequest DescribeGitProjectDeployKeysRequest

// NewDescribeGitProjectDeployKeysRequest instantiates a new DescribeGitProjectDeployKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeGitProjectDeployKeysRequest(projectId int64) *DescribeGitProjectDeployKeysRequest {
	this := DescribeGitProjectDeployKeysRequest{}
	this.ProjectId = projectId
	return &this
}

// NewDescribeGitProjectDeployKeysRequestWithDefaults instantiates a new DescribeGitProjectDeployKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeGitProjectDeployKeysRequestWithDefaults() *DescribeGitProjectDeployKeysRequest {
	this := DescribeGitProjectDeployKeysRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *DescribeGitProjectDeployKeysRequest) GetProjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DescribeGitProjectDeployKeysRequest) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DescribeGitProjectDeployKeysRequest) SetProjectId(v int64) {
	o.ProjectId = v
}

func (o DescribeGitProjectDeployKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeGitProjectDeployKeysRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ProjectId"] = o.ProjectId
	return toSerialize, nil
}

func (o *DescribeGitProjectDeployKeysRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ProjectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeGitProjectDeployKeysRequest := _DescribeGitProjectDeployKeysRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeGitProjectDeployKeysRequest)

	if err != nil {
		return err
	}

	*o = DescribeGitProjectDeployKeysRequest(varDescribeGitProjectDeployKeysRequest)

	return err
}

type NullableDescribeGitProjectDeployKeysRequest struct {
	value *DescribeGitProjectDeployKeysRequest
	isSet bool
}

func (v NullableDescribeGitProjectDeployKeysRequest) Get() *DescribeGitProjectDeployKeysRequest {
	return v.value
}

func (v *NullableDescribeGitProjectDeployKeysRequest) Set(val *DescribeGitProjectDeployKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeGitProjectDeployKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeGitProjectDeployKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeGitProjectDeployKeysRequest(val *DescribeGitProjectDeployKeysRequest) *NullableDescribeGitProjectDeployKeysRequest {
	return &NullableDescribeGitProjectDeployKeysRequest{value: val, isSet: true}
}

func (v NullableDescribeGitProjectDeployKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeGitProjectDeployKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


