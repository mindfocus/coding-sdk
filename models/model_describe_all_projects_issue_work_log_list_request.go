/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeAllProjectsIssueWorkLogListRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeAllProjectsIssueWorkLogListRequest{}

// DescribeAllProjectsIssueWorkLogListRequest struct for DescribeAllProjectsIssueWorkLogListRequest
type DescribeAllProjectsIssueWorkLogListRequest struct {
	// 结束时间
	EndAt *int64 `json:"EndAt,omitempty"`
	// 每页数量，默认 20，最大1000
	Limit *int32 `json:"Limit,omitempty"`
	// 偏移量，默认 0
	Offset *int32 `json:"Offset,omitempty"`
	// 项目名称
	ProjectName *string `json:"ProjectName,omitempty"`
	// 开始时间
	StartAt *int64 `json:"StartAt,omitempty"`
	// 用户 ID
	UserId *int64 `json:"UserId,omitempty"`
}

// NewDescribeAllProjectsIssueWorkLogListRequest instantiates a new DescribeAllProjectsIssueWorkLogListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeAllProjectsIssueWorkLogListRequest() *DescribeAllProjectsIssueWorkLogListRequest {
	this := DescribeAllProjectsIssueWorkLogListRequest{}
	return &this
}

// NewDescribeAllProjectsIssueWorkLogListRequestWithDefaults instantiates a new DescribeAllProjectsIssueWorkLogListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeAllProjectsIssueWorkLogListRequestWithDefaults() *DescribeAllProjectsIssueWorkLogListRequest {
	this := DescribeAllProjectsIssueWorkLogListRequest{}
	return &this
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetEndAt() int64 {
	if o == nil || utils.IsNil(o.EndAt) {
		var ret int64
		return ret
	}
	return *o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetEndAtOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndAt) {
		return nil, false
	}
	return o.EndAt, true
}

// HasEndAt returns a boolean if a field has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) HasEndAt() bool {
	if o != nil && !utils.IsNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given int64 and assigns it to the EndAt field.
func (o *DescribeAllProjectsIssueWorkLogListRequest) SetEndAt(v int64) {
	o.EndAt = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetLimit() int32 {
	if o == nil || utils.IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetLimitOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) HasLimit() bool {
	if o != nil && !utils.IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *DescribeAllProjectsIssueWorkLogListRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetOffset() int32 {
	if o == nil || utils.IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) HasOffset() bool {
	if o != nil && !utils.IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *DescribeAllProjectsIssueWorkLogListRequest) SetOffset(v int32) {
	o.Offset = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetProjectName() string {
	if o == nil || utils.IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetProjectNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) HasProjectName() bool {
	if o != nil && !utils.IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *DescribeAllProjectsIssueWorkLogListRequest) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetStartAt() int64 {
	if o == nil || utils.IsNil(o.StartAt) {
		var ret int64
		return ret
	}
	return *o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetStartAtOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.StartAt) {
		return nil, false
	}
	return o.StartAt, true
}

// HasStartAt returns a boolean if a field has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) HasStartAt() bool {
	if o != nil && !utils.IsNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given int64 and assigns it to the StartAt field.
func (o *DescribeAllProjectsIssueWorkLogListRequest) SetStartAt(v int64) {
	o.StartAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetUserId() int64 {
	if o == nil || utils.IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) GetUserIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DescribeAllProjectsIssueWorkLogListRequest) HasUserId() bool {
	if o != nil && !utils.IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *DescribeAllProjectsIssueWorkLogListRequest) SetUserId(v int64) {
	o.UserId = &v
}

func (o DescribeAllProjectsIssueWorkLogListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeAllProjectsIssueWorkLogListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.EndAt) {
		toSerialize["EndAt"] = o.EndAt
	}
	if !utils.IsNil(o.Limit) {
		toSerialize["Limit"] = o.Limit
	}
	if !utils.IsNil(o.Offset) {
		toSerialize["Offset"] = o.Offset
	}
	if !utils.IsNil(o.ProjectName) {
		toSerialize["ProjectName"] = o.ProjectName
	}
	if !utils.IsNil(o.StartAt) {
		toSerialize["StartAt"] = o.StartAt
	}
	if !utils.IsNil(o.UserId) {
		toSerialize["UserId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableDescribeAllProjectsIssueWorkLogListRequest struct {
	value *DescribeAllProjectsIssueWorkLogListRequest
	isSet bool
}

func (v NullableDescribeAllProjectsIssueWorkLogListRequest) Get() *DescribeAllProjectsIssueWorkLogListRequest {
	return v.value
}

func (v *NullableDescribeAllProjectsIssueWorkLogListRequest) Set(val *DescribeAllProjectsIssueWorkLogListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeAllProjectsIssueWorkLogListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeAllProjectsIssueWorkLogListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeAllProjectsIssueWorkLogListRequest(val *DescribeAllProjectsIssueWorkLogListRequest) *NullableDescribeAllProjectsIssueWorkLogListRequest {
	return &NullableDescribeAllProjectsIssueWorkLogListRequest{value: val, isSet: true}
}

func (v NullableDescribeAllProjectsIssueWorkLogListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeAllProjectsIssueWorkLogListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


