/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the TriggerCdPipelineResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TriggerCdPipelineResponseData{}

// TriggerCdPipelineResponseData TriggerCdPipelineResponseData 结构
type TriggerCdPipelineResponseData struct {
	// 部署流程执行记录 ID
	PipelineExecutionId *string `json:"PipelineExecutionId,omitempty"`
	// 部署流程执行记录引用
	PipelineExecutionRef *string `json:"PipelineExecutionRef,omitempty"`
}

// NewTriggerCdPipelineResponseData instantiates a new TriggerCdPipelineResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerCdPipelineResponseData() *TriggerCdPipelineResponseData {
	this := TriggerCdPipelineResponseData{}
	var pipelineExecutionId string = ""
	this.PipelineExecutionId = &pipelineExecutionId
	var pipelineExecutionRef string = ""
	this.PipelineExecutionRef = &pipelineExecutionRef
	return &this
}

// NewTriggerCdPipelineResponseDataWithDefaults instantiates a new TriggerCdPipelineResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerCdPipelineResponseDataWithDefaults() *TriggerCdPipelineResponseData {
	this := TriggerCdPipelineResponseData{}
	var pipelineExecutionId string = ""
	this.PipelineExecutionId = &pipelineExecutionId
	var pipelineExecutionRef string = ""
	this.PipelineExecutionRef = &pipelineExecutionRef
	return &this
}

// GetPipelineExecutionId returns the PipelineExecutionId field value if set, zero value otherwise.
func (o *TriggerCdPipelineResponseData) GetPipelineExecutionId() string {
	if o == nil || utils.IsNil(o.PipelineExecutionId) {
		var ret string
		return ret
	}
	return *o.PipelineExecutionId
}

// GetPipelineExecutionIdOk returns a tuple with the PipelineExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggerCdPipelineResponseData) GetPipelineExecutionIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PipelineExecutionId) {
		return nil, false
	}
	return o.PipelineExecutionId, true
}

// HasPipelineExecutionId returns a boolean if a field has been set.
func (o *TriggerCdPipelineResponseData) HasPipelineExecutionId() bool {
	if o != nil && !utils.IsNil(o.PipelineExecutionId) {
		return true
	}

	return false
}

// SetPipelineExecutionId gets a reference to the given string and assigns it to the PipelineExecutionId field.
func (o *TriggerCdPipelineResponseData) SetPipelineExecutionId(v string) {
	o.PipelineExecutionId = &v
}

// GetPipelineExecutionRef returns the PipelineExecutionRef field value if set, zero value otherwise.
func (o *TriggerCdPipelineResponseData) GetPipelineExecutionRef() string {
	if o == nil || utils.IsNil(o.PipelineExecutionRef) {
		var ret string
		return ret
	}
	return *o.PipelineExecutionRef
}

// GetPipelineExecutionRefOk returns a tuple with the PipelineExecutionRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggerCdPipelineResponseData) GetPipelineExecutionRefOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PipelineExecutionRef) {
		return nil, false
	}
	return o.PipelineExecutionRef, true
}

// HasPipelineExecutionRef returns a boolean if a field has been set.
func (o *TriggerCdPipelineResponseData) HasPipelineExecutionRef() bool {
	if o != nil && !utils.IsNil(o.PipelineExecutionRef) {
		return true
	}

	return false
}

// SetPipelineExecutionRef gets a reference to the given string and assigns it to the PipelineExecutionRef field.
func (o *TriggerCdPipelineResponseData) SetPipelineExecutionRef(v string) {
	o.PipelineExecutionRef = &v
}

func (o TriggerCdPipelineResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TriggerCdPipelineResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PipelineExecutionId) {
		toSerialize["PipelineExecutionId"] = o.PipelineExecutionId
	}
	if !utils.IsNil(o.PipelineExecutionRef) {
		toSerialize["PipelineExecutionRef"] = o.PipelineExecutionRef
	}
	return toSerialize, nil
}

type NullableTriggerCdPipelineResponseData struct {
	value *TriggerCdPipelineResponseData
	isSet bool
}

func (v NullableTriggerCdPipelineResponseData) Get() *TriggerCdPipelineResponseData {
	return v.value
}

func (v *NullableTriggerCdPipelineResponseData) Set(val *TriggerCdPipelineResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerCdPipelineResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerCdPipelineResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerCdPipelineResponseData(val *TriggerCdPipelineResponseData) *NullableTriggerCdPipelineResponseData {
	return &NullableTriggerCdPipelineResponseData{value: val, isSet: true}
}

func (v NullableTriggerCdPipelineResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerCdPipelineResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


