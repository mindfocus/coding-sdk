/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeAvailablePoliciesOnResourceRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeAvailablePoliciesOnResourceRequest{}

// DescribeAvailablePoliciesOnResourceRequest struct for DescribeAvailablePoliciesOnResourceRequest
type DescribeAvailablePoliciesOnResourceRequest struct {
	Filter DescribeAvailablePoliciesOnResourceRequestFilter `json:"Filter"`
	// 请求页数
	PageNumber int32 `json:"PageNumber"`
	// 请求条数
	PageSize int32 `json:"PageSize"`
	Resource ResourceInfoOfPolicyScope `json:"Resource"`
}

type _DescribeAvailablePoliciesOnResourceRequest DescribeAvailablePoliciesOnResourceRequest

// NewDescribeAvailablePoliciesOnResourceRequest instantiates a new DescribeAvailablePoliciesOnResourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeAvailablePoliciesOnResourceRequest(filter DescribeAvailablePoliciesOnResourceRequestFilter, pageNumber int32, pageSize int32, resource ResourceInfoOfPolicyScope) *DescribeAvailablePoliciesOnResourceRequest {
	this := DescribeAvailablePoliciesOnResourceRequest{}
	this.Filter = filter
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	this.Resource = resource
	return &this
}

// NewDescribeAvailablePoliciesOnResourceRequestWithDefaults instantiates a new DescribeAvailablePoliciesOnResourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeAvailablePoliciesOnResourceRequestWithDefaults() *DescribeAvailablePoliciesOnResourceRequest {
	this := DescribeAvailablePoliciesOnResourceRequest{}
	return &this
}

// GetFilter returns the Filter field value
func (o *DescribeAvailablePoliciesOnResourceRequest) GetFilter() DescribeAvailablePoliciesOnResourceRequestFilter {
	if o == nil {
		var ret DescribeAvailablePoliciesOnResourceRequestFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *DescribeAvailablePoliciesOnResourceRequest) GetFilterOk() (*DescribeAvailablePoliciesOnResourceRequestFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *DescribeAvailablePoliciesOnResourceRequest) SetFilter(v DescribeAvailablePoliciesOnResourceRequestFilter) {
	o.Filter = v
}

// GetPageNumber returns the PageNumber field value
func (o *DescribeAvailablePoliciesOnResourceRequest) GetPageNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *DescribeAvailablePoliciesOnResourceRequest) GetPageNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *DescribeAvailablePoliciesOnResourceRequest) SetPageNumber(v int32) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *DescribeAvailablePoliciesOnResourceRequest) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *DescribeAvailablePoliciesOnResourceRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *DescribeAvailablePoliciesOnResourceRequest) SetPageSize(v int32) {
	o.PageSize = v
}

// GetResource returns the Resource field value
func (o *DescribeAvailablePoliciesOnResourceRequest) GetResource() ResourceInfoOfPolicyScope {
	if o == nil {
		var ret ResourceInfoOfPolicyScope
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *DescribeAvailablePoliciesOnResourceRequest) GetResourceOk() (*ResourceInfoOfPolicyScope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *DescribeAvailablePoliciesOnResourceRequest) SetResource(v ResourceInfoOfPolicyScope) {
	o.Resource = v
}

func (o DescribeAvailablePoliciesOnResourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeAvailablePoliciesOnResourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Filter"] = o.Filter
	toSerialize["PageNumber"] = o.PageNumber
	toSerialize["PageSize"] = o.PageSize
	toSerialize["Resource"] = o.Resource
	return toSerialize, nil
}

func (o *DescribeAvailablePoliciesOnResourceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Filter",
		"PageNumber",
		"PageSize",
		"Resource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeAvailablePoliciesOnResourceRequest := _DescribeAvailablePoliciesOnResourceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeAvailablePoliciesOnResourceRequest)

	if err != nil {
		return err
	}

	*o = DescribeAvailablePoliciesOnResourceRequest(varDescribeAvailablePoliciesOnResourceRequest)

	return err
}

type NullableDescribeAvailablePoliciesOnResourceRequest struct {
	value *DescribeAvailablePoliciesOnResourceRequest
	isSet bool
}

func (v NullableDescribeAvailablePoliciesOnResourceRequest) Get() *DescribeAvailablePoliciesOnResourceRequest {
	return v.value
}

func (v *NullableDescribeAvailablePoliciesOnResourceRequest) Set(val *DescribeAvailablePoliciesOnResourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeAvailablePoliciesOnResourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeAvailablePoliciesOnResourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeAvailablePoliciesOnResourceRequest(val *DescribeAvailablePoliciesOnResourceRequest) *NullableDescribeAvailablePoliciesOnResourceRequest {
	return &NullableDescribeAvailablePoliciesOnResourceRequest{value: val, isSet: true}
}

func (v NullableDescribeAvailablePoliciesOnResourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeAvailablePoliciesOnResourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


