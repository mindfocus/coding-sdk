/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeCanMergeRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeCanMergeRequest{}

// DescribeCanMergeRequest struct for DescribeCanMergeRequest
type DescribeCanMergeRequest struct {
	// 仓库id
	DepotId int64 `json:"DepotId"`
	// 源分支
	Source string `json:"Source"`
	// 目标分支
	Target string `json:"Target"`
	// 仓库路径,与仓库Id二选一即可
	DepotPath *string `json:"DepotPath,omitempty"`
}

type _DescribeCanMergeRequest DescribeCanMergeRequest

// NewDescribeCanMergeRequest instantiates a new DescribeCanMergeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCanMergeRequest(depotId int64, source string, target string) *DescribeCanMergeRequest {
	this := DescribeCanMergeRequest{}
	this.DepotId = depotId
	this.Source = source
	this.Target = target
	return &this
}

// NewDescribeCanMergeRequestWithDefaults instantiates a new DescribeCanMergeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCanMergeRequestWithDefaults() *DescribeCanMergeRequest {
	this := DescribeCanMergeRequest{}
	return &this
}

// GetDepotId returns the DepotId field value
func (o *DescribeCanMergeRequest) GetDepotId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DepotId
}

// GetDepotIdOk returns a tuple with the DepotId field value
// and a boolean to check if the value has been set.
func (o *DescribeCanMergeRequest) GetDepotIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotId, true
}

// SetDepotId sets field value
func (o *DescribeCanMergeRequest) SetDepotId(v int64) {
	o.DepotId = v
}

// GetSource returns the Source field value
func (o *DescribeCanMergeRequest) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *DescribeCanMergeRequest) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *DescribeCanMergeRequest) SetSource(v string) {
	o.Source = v
}

// GetTarget returns the Target field value
func (o *DescribeCanMergeRequest) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *DescribeCanMergeRequest) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *DescribeCanMergeRequest) SetTarget(v string) {
	o.Target = v
}

// GetDepotPath returns the DepotPath field value if set, zero value otherwise.
func (o *DescribeCanMergeRequest) GetDepotPath() string {
	if o == nil || utils.IsNil(o.DepotPath) {
		var ret string
		return ret
	}
	return *o.DepotPath
}

// GetDepotPathOk returns a tuple with the DepotPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCanMergeRequest) GetDepotPathOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DepotPath) {
		return nil, false
	}
	return o.DepotPath, true
}

// HasDepotPath returns a boolean if a field has been set.
func (o *DescribeCanMergeRequest) HasDepotPath() bool {
	if o != nil && !utils.IsNil(o.DepotPath) {
		return true
	}

	return false
}

// SetDepotPath gets a reference to the given string and assigns it to the DepotPath field.
func (o *DescribeCanMergeRequest) SetDepotPath(v string) {
	o.DepotPath = &v
}

func (o DescribeCanMergeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCanMergeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotId"] = o.DepotId
	toSerialize["Source"] = o.Source
	toSerialize["Target"] = o.Target
	if !utils.IsNil(o.DepotPath) {
		toSerialize["DepotPath"] = o.DepotPath
	}
	return toSerialize, nil
}

func (o *DescribeCanMergeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotId",
		"Source",
		"Target",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeCanMergeRequest := _DescribeCanMergeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeCanMergeRequest)

	if err != nil {
		return err
	}

	*o = DescribeCanMergeRequest(varDescribeCanMergeRequest)

	return err
}

type NullableDescribeCanMergeRequest struct {
	value *DescribeCanMergeRequest
	isSet bool
}

func (v NullableDescribeCanMergeRequest) Get() *DescribeCanMergeRequest {
	return v.value
}

func (v *NullableDescribeCanMergeRequest) Set(val *DescribeCanMergeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCanMergeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCanMergeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCanMergeRequest(val *DescribeCanMergeRequest) *NullableDescribeCanMergeRequest {
	return &NullableDescribeCanMergeRequest{value: val, isSet: true}
}

func (v NullableDescribeCanMergeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCanMergeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


