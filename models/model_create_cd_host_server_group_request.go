/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CreateCdHostServerGroupRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateCdHostServerGroupRequest{}

// CreateCdHostServerGroupRequest struct for CreateCdHostServerGroupRequest
type CreateCdHostServerGroupRequest struct {
	// 堡垒机 ID
	AgentMachineId int64 `json:"AgentMachineId"`
	// SSH 认证方式（可选值：PUBLIC_KEY、PASSWORD）
	AuthMethod string `json:"AuthMethod"`
	// 主机组名称
	DisplayName string `json:"DisplayName"`
	// 实例 IP 列表
	Ips []string `json:"Ips"`
	// 主机组标签
	Labels []HostServerGroupLabel `json:"Labels,omitempty"`
	// SSH 密码
	Password *string `json:"Password,omitempty"`
	// SSH 端口
	Port int64 `json:"Port"`
	// SSH 用户名
	UserName string `json:"UserName"`
}

type _CreateCdHostServerGroupRequest CreateCdHostServerGroupRequest

// NewCreateCdHostServerGroupRequest instantiates a new CreateCdHostServerGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCdHostServerGroupRequest(agentMachineId int64, authMethod string, displayName string, ips []string, port int64, userName string) *CreateCdHostServerGroupRequest {
	this := CreateCdHostServerGroupRequest{}
	this.AgentMachineId = agentMachineId
	this.AuthMethod = authMethod
	this.DisplayName = displayName
	this.Ips = ips
	this.Port = port
	this.UserName = userName
	return &this
}

// NewCreateCdHostServerGroupRequestWithDefaults instantiates a new CreateCdHostServerGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCdHostServerGroupRequestWithDefaults() *CreateCdHostServerGroupRequest {
	this := CreateCdHostServerGroupRequest{}
	return &this
}

// GetAgentMachineId returns the AgentMachineId field value
func (o *CreateCdHostServerGroupRequest) GetAgentMachineId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AgentMachineId
}

// GetAgentMachineIdOk returns a tuple with the AgentMachineId field value
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetAgentMachineIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentMachineId, true
}

// SetAgentMachineId sets field value
func (o *CreateCdHostServerGroupRequest) SetAgentMachineId(v int64) {
	o.AgentMachineId = v
}

// GetAuthMethod returns the AuthMethod field value
func (o *CreateCdHostServerGroupRequest) GetAuthMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetAuthMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthMethod, true
}

// SetAuthMethod sets field value
func (o *CreateCdHostServerGroupRequest) SetAuthMethod(v string) {
	o.AuthMethod = v
}

// GetDisplayName returns the DisplayName field value
func (o *CreateCdHostServerGroupRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CreateCdHostServerGroupRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetIps returns the Ips field value
func (o *CreateCdHostServerGroupRequest) GetIps() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetIpsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ips, true
}

// SetIps sets field value
func (o *CreateCdHostServerGroupRequest) SetIps(v []string) {
	o.Ips = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateCdHostServerGroupRequest) GetLabels() []HostServerGroupLabel {
	if o == nil || utils.IsNil(o.Labels) {
		var ret []HostServerGroupLabel
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetLabelsOk() ([]HostServerGroupLabel, bool) {
	if o == nil || utils.IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateCdHostServerGroupRequest) HasLabels() bool {
	if o != nil && !utils.IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []HostServerGroupLabel and assigns it to the Labels field.
func (o *CreateCdHostServerGroupRequest) SetLabels(v []HostServerGroupLabel) {
	o.Labels = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateCdHostServerGroupRequest) GetPassword() string {
	if o == nil || utils.IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetPasswordOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateCdHostServerGroupRequest) HasPassword() bool {
	if o != nil && !utils.IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateCdHostServerGroupRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPort returns the Port field value
func (o *CreateCdHostServerGroupRequest) GetPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *CreateCdHostServerGroupRequest) SetPort(v int64) {
	o.Port = v
}

// GetUserName returns the UserName field value
func (o *CreateCdHostServerGroupRequest) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *CreateCdHostServerGroupRequest) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *CreateCdHostServerGroupRequest) SetUserName(v string) {
	o.UserName = v
}

func (o CreateCdHostServerGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCdHostServerGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["AgentMachineId"] = o.AgentMachineId
	toSerialize["AuthMethod"] = o.AuthMethod
	toSerialize["DisplayName"] = o.DisplayName
	toSerialize["Ips"] = o.Ips
	if !utils.IsNil(o.Labels) {
		toSerialize["Labels"] = o.Labels
	}
	if !utils.IsNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	toSerialize["Port"] = o.Port
	toSerialize["UserName"] = o.UserName
	return toSerialize, nil
}

func (o *CreateCdHostServerGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"AgentMachineId",
		"AuthMethod",
		"DisplayName",
		"Ips",
		"Port",
		"UserName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCdHostServerGroupRequest := _CreateCdHostServerGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCdHostServerGroupRequest)

	if err != nil {
		return err
	}

	*o = CreateCdHostServerGroupRequest(varCreateCdHostServerGroupRequest)

	return err
}

type NullableCreateCdHostServerGroupRequest struct {
	value *CreateCdHostServerGroupRequest
	isSet bool
}

func (v NullableCreateCdHostServerGroupRequest) Get() *CreateCdHostServerGroupRequest {
	return v.value
}

func (v *NullableCreateCdHostServerGroupRequest) Set(val *CreateCdHostServerGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCdHostServerGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCdHostServerGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCdHostServerGroupRequest(val *CreateCdHostServerGroupRequest) *NullableCreateCdHostServerGroupRequest {
	return &NullableCreateCdHostServerGroupRequest{value: val, isSet: true}
}

func (v NullableCreateCdHostServerGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCdHostServerGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


