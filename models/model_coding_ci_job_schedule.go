/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CodingCIJobSchedule type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CodingCIJobSchedule{}

// CodingCIJobSchedule 针对 CRON TriggerMethod 的设置
type CodingCIJobSchedule struct {
	// 目标触发的分支
	Branch string `json:"Branch"`
	// 结束时间。如果是单次触发，结束时间为空
	EndTime string `json:"EndTime"`
	// 间隔
	Interval string `json:"Interval"`
	// 代码无变化时是否触发
	RefChangeTrigger bool `json:"RefChangeTrigger"`
	// 是否周期触发（周期触发/单次触发）
	Repeat bool `json:"Repeat"`
	// 开始时间。如果是周期触发，精确到小时（ 8 ）如果是单次触发，精确到分钟数（ 8:20 ）
	StartTime string `json:"StartTime"`
	// 星期几
	Weekend string `json:"Weekend"`
}

type _CodingCIJobSchedule CodingCIJobSchedule

// NewCodingCIJobSchedule instantiates a new CodingCIJobSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodingCIJobSchedule(branch string, endTime string, interval string, refChangeTrigger bool, repeat bool, startTime string, weekend string) *CodingCIJobSchedule {
	this := CodingCIJobSchedule{}
	this.Branch = branch
	this.EndTime = endTime
	this.Interval = interval
	this.RefChangeTrigger = refChangeTrigger
	this.Repeat = repeat
	this.StartTime = startTime
	this.Weekend = weekend
	return &this
}

// NewCodingCIJobScheduleWithDefaults instantiates a new CodingCIJobSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodingCIJobScheduleWithDefaults() *CodingCIJobSchedule {
	this := CodingCIJobSchedule{}
	var branch string = ""
	this.Branch = branch
	var endTime string = ""
	this.EndTime = endTime
	var interval string = ""
	this.Interval = interval
	var refChangeTrigger bool = false
	this.RefChangeTrigger = refChangeTrigger
	var repeat bool = false
	this.Repeat = repeat
	var startTime string = ""
	this.StartTime = startTime
	var weekend string = ""
	this.Weekend = weekend
	return &this
}

// GetBranch returns the Branch field value
func (o *CodingCIJobSchedule) GetBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value
// and a boolean to check if the value has been set.
func (o *CodingCIJobSchedule) GetBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Branch, true
}

// SetBranch sets field value
func (o *CodingCIJobSchedule) SetBranch(v string) {
	o.Branch = v
}

// GetEndTime returns the EndTime field value
func (o *CodingCIJobSchedule) GetEndTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *CodingCIJobSchedule) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *CodingCIJobSchedule) SetEndTime(v string) {
	o.EndTime = v
}

// GetInterval returns the Interval field value
func (o *CodingCIJobSchedule) GetInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *CodingCIJobSchedule) GetIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *CodingCIJobSchedule) SetInterval(v string) {
	o.Interval = v
}

// GetRefChangeTrigger returns the RefChangeTrigger field value
func (o *CodingCIJobSchedule) GetRefChangeTrigger() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RefChangeTrigger
}

// GetRefChangeTriggerOk returns a tuple with the RefChangeTrigger field value
// and a boolean to check if the value has been set.
func (o *CodingCIJobSchedule) GetRefChangeTriggerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefChangeTrigger, true
}

// SetRefChangeTrigger sets field value
func (o *CodingCIJobSchedule) SetRefChangeTrigger(v bool) {
	o.RefChangeTrigger = v
}

// GetRepeat returns the Repeat field value
func (o *CodingCIJobSchedule) GetRepeat() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Repeat
}

// GetRepeatOk returns a tuple with the Repeat field value
// and a boolean to check if the value has been set.
func (o *CodingCIJobSchedule) GetRepeatOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repeat, true
}

// SetRepeat sets field value
func (o *CodingCIJobSchedule) SetRepeat(v bool) {
	o.Repeat = v
}

// GetStartTime returns the StartTime field value
func (o *CodingCIJobSchedule) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *CodingCIJobSchedule) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *CodingCIJobSchedule) SetStartTime(v string) {
	o.StartTime = v
}

// GetWeekend returns the Weekend field value
func (o *CodingCIJobSchedule) GetWeekend() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Weekend
}

// GetWeekendOk returns a tuple with the Weekend field value
// and a boolean to check if the value has been set.
func (o *CodingCIJobSchedule) GetWeekendOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weekend, true
}

// SetWeekend sets field value
func (o *CodingCIJobSchedule) SetWeekend(v string) {
	o.Weekend = v
}

func (o CodingCIJobSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CodingCIJobSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Branch"] = o.Branch
	toSerialize["EndTime"] = o.EndTime
	toSerialize["Interval"] = o.Interval
	toSerialize["RefChangeTrigger"] = o.RefChangeTrigger
	toSerialize["Repeat"] = o.Repeat
	toSerialize["StartTime"] = o.StartTime
	toSerialize["Weekend"] = o.Weekend
	return toSerialize, nil
}

func (o *CodingCIJobSchedule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Branch",
		"EndTime",
		"Interval",
		"RefChangeTrigger",
		"Repeat",
		"StartTime",
		"Weekend",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCodingCIJobSchedule := _CodingCIJobSchedule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCodingCIJobSchedule)

	if err != nil {
		return err
	}

	*o = CodingCIJobSchedule(varCodingCIJobSchedule)

	return err
}

type NullableCodingCIJobSchedule struct {
	value *CodingCIJobSchedule
	isSet bool
}

func (v NullableCodingCIJobSchedule) Get() *CodingCIJobSchedule {
	return v.value
}

func (v *NullableCodingCIJobSchedule) Set(val *CodingCIJobSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableCodingCIJobSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableCodingCIJobSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodingCIJobSchedule(val *CodingCIJobSchedule) *NullableCodingCIJobSchedule {
	return &NullableCodingCIJobSchedule{value: val, isSet: true}
}

func (v NullableCodingCIJobSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodingCIJobSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


