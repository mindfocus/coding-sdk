/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeProjectMembersRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeProjectMembersRequest{}

// DescribeProjectMembersRequest struct for DescribeProjectMembersRequest
type DescribeProjectMembersRequest struct {
	// 请求页数
	PageNumber int32 `json:"PageNumber"`
	// 请求条数
	PageSize int32 `json:"PageSize"`
	// 项目Id
	ProjectId int32 `json:"ProjectId"`
	// 用户组Id
	RoleId *int32 `json:"RoleId,omitempty"`
}

type _DescribeProjectMembersRequest DescribeProjectMembersRequest

// NewDescribeProjectMembersRequest instantiates a new DescribeProjectMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeProjectMembersRequest(pageNumber int32, pageSize int32, projectId int32) *DescribeProjectMembersRequest {
	this := DescribeProjectMembersRequest{}
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	this.ProjectId = projectId
	return &this
}

// NewDescribeProjectMembersRequestWithDefaults instantiates a new DescribeProjectMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeProjectMembersRequestWithDefaults() *DescribeProjectMembersRequest {
	this := DescribeProjectMembersRequest{}
	return &this
}

// GetPageNumber returns the PageNumber field value
func (o *DescribeProjectMembersRequest) GetPageNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *DescribeProjectMembersRequest) GetPageNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *DescribeProjectMembersRequest) SetPageNumber(v int32) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *DescribeProjectMembersRequest) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *DescribeProjectMembersRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *DescribeProjectMembersRequest) SetPageSize(v int32) {
	o.PageSize = v
}

// GetProjectId returns the ProjectId field value
func (o *DescribeProjectMembersRequest) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DescribeProjectMembersRequest) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DescribeProjectMembersRequest) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *DescribeProjectMembersRequest) GetRoleId() int32 {
	if o == nil || utils.IsNil(o.RoleId) {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeProjectMembersRequest) GetRoleIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *DescribeProjectMembersRequest) HasRoleId() bool {
	if o != nil && !utils.IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *DescribeProjectMembersRequest) SetRoleId(v int32) {
	o.RoleId = &v
}

func (o DescribeProjectMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeProjectMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["PageNumber"] = o.PageNumber
	toSerialize["PageSize"] = o.PageSize
	toSerialize["ProjectId"] = o.ProjectId
	if !utils.IsNil(o.RoleId) {
		toSerialize["RoleId"] = o.RoleId
	}
	return toSerialize, nil
}

func (o *DescribeProjectMembersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"PageNumber",
		"PageSize",
		"ProjectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeProjectMembersRequest := _DescribeProjectMembersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeProjectMembersRequest)

	if err != nil {
		return err
	}

	*o = DescribeProjectMembersRequest(varDescribeProjectMembersRequest)

	return err
}

type NullableDescribeProjectMembersRequest struct {
	value *DescribeProjectMembersRequest
	isSet bool
}

func (v NullableDescribeProjectMembersRequest) Get() *DescribeProjectMembersRequest {
	return v.value
}

func (v *NullableDescribeProjectMembersRequest) Set(val *DescribeProjectMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeProjectMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeProjectMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeProjectMembersRequest(val *DescribeProjectMembersRequest) *NullableDescribeProjectMembersRequest {
	return &NullableDescribeProjectMembersRequest{value: val, isSet: true}
}

func (v NullableDescribeProjectMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeProjectMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


