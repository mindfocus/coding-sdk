/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DepotData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DepotData{}

// DepotData 仓库信息列表
type DepotData struct {
	// 仓库信息列表
	Depots []DepotInfo `json:"Depots,omitempty"`
	Page *PageInfo `json:"Page,omitempty"`
}

// NewDepotData instantiates a new DepotData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepotData() *DepotData {
	this := DepotData{}
	return &this
}

// NewDepotDataWithDefaults instantiates a new DepotData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepotDataWithDefaults() *DepotData {
	this := DepotData{}
	return &this
}

// GetDepots returns the Depots field value if set, zero value otherwise.
func (o *DepotData) GetDepots() []DepotInfo {
	if o == nil || utils.IsNil(o.Depots) {
		var ret []DepotInfo
		return ret
	}
	return o.Depots
}

// GetDepotsOk returns a tuple with the Depots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotData) GetDepotsOk() ([]DepotInfo, bool) {
	if o == nil || utils.IsNil(o.Depots) {
		return nil, false
	}
	return o.Depots, true
}

// HasDepots returns a boolean if a field has been set.
func (o *DepotData) HasDepots() bool {
	if o != nil && !utils.IsNil(o.Depots) {
		return true
	}

	return false
}

// SetDepots gets a reference to the given []DepotInfo and assigns it to the Depots field.
func (o *DepotData) SetDepots(v []DepotInfo) {
	o.Depots = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *DepotData) GetPage() PageInfo {
	if o == nil || utils.IsNil(o.Page) {
		var ret PageInfo
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotData) GetPageOk() (*PageInfo, bool) {
	if o == nil || utils.IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *DepotData) HasPage() bool {
	if o != nil && !utils.IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given PageInfo and assigns it to the Page field.
func (o *DepotData) SetPage(v PageInfo) {
	o.Page = &v
}

func (o DepotData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepotData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Depots) {
		toSerialize["Depots"] = o.Depots
	}
	if !utils.IsNil(o.Page) {
		toSerialize["Page"] = o.Page
	}
	return toSerialize, nil
}

type NullableDepotData struct {
	value *DepotData
	isSet bool
}

func (v NullableDepotData) Get() *DepotData {
	return v.value
}

func (v *NullableDepotData) Set(val *DepotData) {
	v.value = val
	v.isSet = true
}

func (v NullableDepotData) IsSet() bool {
	return v.isSet
}

func (v *NullableDepotData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepotData(val *DepotData) *NullableDepotData {
	return &NullableDepotData{value: val, isSet: true}
}

func (v NullableDepotData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepotData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


