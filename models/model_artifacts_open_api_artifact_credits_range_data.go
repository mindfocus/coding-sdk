/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ArtifactsOpenApiArtifactCreditsRangeData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ArtifactsOpenApiArtifactCreditsRangeData{}

// ArtifactsOpenApiArtifactCreditsRangeData struct for ArtifactsOpenApiArtifactCreditsRangeData
type ArtifactsOpenApiArtifactCreditsRangeData struct {
	Project ArtifactsOpenApiProjectData `json:"Project"`
	RemoteTeam ArtifactsOpenApiRemoteTeamData `json:"RemoteTeam"`
	// 生效范围（TEAM:团队；REMOTE-TEAM:远程团队；PROJECT:项目;REPO:仓库）
	RangeType string `json:"RangeType"`
	Repository ArtifactsOpenApiRepositoryData `json:"Repository"`
	// 适用范围ID
	RangeId int64 `json:"RangeId"`
}

type _ArtifactsOpenApiArtifactCreditsRangeData ArtifactsOpenApiArtifactCreditsRangeData

// NewArtifactsOpenApiArtifactCreditsRangeData instantiates a new ArtifactsOpenApiArtifactCreditsRangeData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactsOpenApiArtifactCreditsRangeData(project ArtifactsOpenApiProjectData, remoteTeam ArtifactsOpenApiRemoteTeamData, rangeType string, repository ArtifactsOpenApiRepositoryData, rangeId int64) *ArtifactsOpenApiArtifactCreditsRangeData {
	this := ArtifactsOpenApiArtifactCreditsRangeData{}
	this.Project = project
	this.RemoteTeam = remoteTeam
	this.RangeType = rangeType
	this.Repository = repository
	this.RangeId = rangeId
	return &this
}

// NewArtifactsOpenApiArtifactCreditsRangeDataWithDefaults instantiates a new ArtifactsOpenApiArtifactCreditsRangeData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactsOpenApiArtifactCreditsRangeDataWithDefaults() *ArtifactsOpenApiArtifactCreditsRangeData {
	this := ArtifactsOpenApiArtifactCreditsRangeData{}
	var rangeType string = ""
	this.RangeType = rangeType
	var rangeId int64 = 0
	this.RangeId = rangeId
	return &this
}

// GetProject returns the Project field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetProject() ArtifactsOpenApiProjectData {
	if o == nil {
		var ret ArtifactsOpenApiProjectData
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetProjectOk() (*ArtifactsOpenApiProjectData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) SetProject(v ArtifactsOpenApiProjectData) {
	o.Project = v
}

// GetRemoteTeam returns the RemoteTeam field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRemoteTeam() ArtifactsOpenApiRemoteTeamData {
	if o == nil {
		var ret ArtifactsOpenApiRemoteTeamData
		return ret
	}

	return o.RemoteTeam
}

// GetRemoteTeamOk returns a tuple with the RemoteTeam field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRemoteTeamOk() (*ArtifactsOpenApiRemoteTeamData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteTeam, true
}

// SetRemoteTeam sets field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) SetRemoteTeam(v ArtifactsOpenApiRemoteTeamData) {
	o.RemoteTeam = v
}

// GetRangeType returns the RangeType field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRangeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RangeType
}

// GetRangeTypeOk returns a tuple with the RangeType field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRangeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangeType, true
}

// SetRangeType sets field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) SetRangeType(v string) {
	o.RangeType = v
}

// GetRepository returns the Repository field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRepository() ArtifactsOpenApiRepositoryData {
	if o == nil {
		var ret ArtifactsOpenApiRepositoryData
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRepositoryOk() (*ArtifactsOpenApiRepositoryData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repository, true
}

// SetRepository sets field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) SetRepository(v ArtifactsOpenApiRepositoryData) {
	o.Repository = v
}

// GetRangeId returns the RangeId field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRangeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RangeId
}

// GetRangeIdOk returns a tuple with the RangeId field value
// and a boolean to check if the value has been set.
func (o *ArtifactsOpenApiArtifactCreditsRangeData) GetRangeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangeId, true
}

// SetRangeId sets field value
func (o *ArtifactsOpenApiArtifactCreditsRangeData) SetRangeId(v int64) {
	o.RangeId = v
}

func (o ArtifactsOpenApiArtifactCreditsRangeData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactsOpenApiArtifactCreditsRangeData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Project"] = o.Project
	toSerialize["RemoteTeam"] = o.RemoteTeam
	toSerialize["RangeType"] = o.RangeType
	toSerialize["Repository"] = o.Repository
	toSerialize["RangeId"] = o.RangeId
	return toSerialize, nil
}

func (o *ArtifactsOpenApiArtifactCreditsRangeData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Project",
		"RemoteTeam",
		"RangeType",
		"Repository",
		"RangeId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArtifactsOpenApiArtifactCreditsRangeData := _ArtifactsOpenApiArtifactCreditsRangeData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArtifactsOpenApiArtifactCreditsRangeData)

	if err != nil {
		return err
	}

	*o = ArtifactsOpenApiArtifactCreditsRangeData(varArtifactsOpenApiArtifactCreditsRangeData)

	return err
}

type NullableArtifactsOpenApiArtifactCreditsRangeData struct {
	value *ArtifactsOpenApiArtifactCreditsRangeData
	isSet bool
}

func (v NullableArtifactsOpenApiArtifactCreditsRangeData) Get() *ArtifactsOpenApiArtifactCreditsRangeData {
	return v.value
}

func (v *NullableArtifactsOpenApiArtifactCreditsRangeData) Set(val *ArtifactsOpenApiArtifactCreditsRangeData) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactsOpenApiArtifactCreditsRangeData) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactsOpenApiArtifactCreditsRangeData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactsOpenApiArtifactCreditsRangeData(val *ArtifactsOpenApiArtifactCreditsRangeData) *NullableArtifactsOpenApiArtifactCreditsRangeData {
	return &NullableArtifactsOpenApiArtifactCreditsRangeData{value: val, isSet: true}
}

func (v NullableArtifactsOpenApiArtifactCreditsRangeData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactsOpenApiArtifactCreditsRangeData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


