/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the ServiceHookLog type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ServiceHookLog{}

// ServiceHookLog Service Hook 发送记录
type ServiceHookLog struct {
	// 创建时间
	CreatedAt utils.NullableInt64 `json:"CreatedAt,omitempty"`
	// 事件名
	Event utils.NullableString `json:"Event,omitempty"`
	// 日志记录编号
	Id *string `json:"Id,omitempty"`
	// 发送请求内容
	RequestContent utils.NullableString `json:"RequestContent,omitempty"`
	// 发送请求头
	RequestHeaders utils.NullableString `json:"RequestHeaders,omitempty"`
	// 发送请求编号
	RequestId utils.NullableString `json:"RequestId,omitempty"`
	// 响应事件
	ResponseAt utils.NullableInt64 `json:"ResponseAt,omitempty"`
	// 响应内容
	ResponseBody utils.NullableString `json:"ResponseBody,omitempty"`
	// 响应头
	ResponseHeaders utils.NullableString `json:"ResponseHeaders,omitempty"`
	// 响应状态码
	ResponseStatus utils.NullableInt64 `json:"ResponseStatus,omitempty"`
	// 发送事件
	SendAt utils.NullableInt64 `json:"SendAt,omitempty"`
	// Service Hook 编号
	ServiceHookId utils.NullableString `json:"ServiceHookId,omitempty"`
	// 发送状态
	Status utils.NullableInt64 `json:"Status,omitempty"`
}

// NewServiceHookLog instantiates a new ServiceHookLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceHookLog() *ServiceHookLog {
	this := ServiceHookLog{}
	var event string = ""
	this.Event = *utils.NewNullableString(&event)
	var id string = ""
	this.Id = &id
	var requestContent string = ""
	this.RequestContent = *utils.NewNullableString(&requestContent)
	var requestHeaders string = ""
	this.RequestHeaders = *utils.NewNullableString(&requestHeaders)
	var requestId string = ""
	this.RequestId = *utils.NewNullableString(&requestId)
	var responseBody string = ""
	this.ResponseBody = *utils.NewNullableString(&responseBody)
	var responseHeaders string = ""
	this.ResponseHeaders = *utils.NewNullableString(&responseHeaders)
	var serviceHookId string = ""
	this.ServiceHookId = *utils.NewNullableString(&serviceHookId)
	return &this
}

// NewServiceHookLogWithDefaults instantiates a new ServiceHookLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceHookLogWithDefaults() *ServiceHookLog {
	this := ServiceHookLog{}
	var event string = ""
	this.Event = *utils.NewNullableString(&event)
	var id string = ""
	this.Id = &id
	var requestContent string = ""
	this.RequestContent = *utils.NewNullableString(&requestContent)
	var requestHeaders string = ""
	this.RequestHeaders = *utils.NewNullableString(&requestHeaders)
	var requestId string = ""
	this.RequestId = *utils.NewNullableString(&requestId)
	var responseBody string = ""
	this.ResponseBody = *utils.NewNullableString(&responseBody)
	var responseHeaders string = ""
	this.ResponseHeaders = *utils.NewNullableString(&responseHeaders)
	var serviceHookId string = ""
	this.ServiceHookId = *utils.NewNullableString(&serviceHookId)
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetCreatedAt() int64 {
	if o == nil || utils.IsNil(o.CreatedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ServiceHookLog) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given utils.NullableInt64 and assigns it to the CreatedAt field.
func (o *ServiceHookLog) SetCreatedAt(v int64) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ServiceHookLog) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ServiceHookLog) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetEvent returns the Event field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetEvent() string {
	if o == nil || utils.IsNil(o.Event.Get()) {
		var ret string
		return ret
	}
	return *o.Event.Get()
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Event.Get(), o.Event.IsSet()
}

// HasEvent returns a boolean if a field has been set.
func (o *ServiceHookLog) HasEvent() bool {
	if o != nil && o.Event.IsSet() {
		return true
	}

	return false
}

// SetEvent gets a reference to the given utils.NullableString and assigns it to the Event field.
func (o *ServiceHookLog) SetEvent(v string) {
	o.Event.Set(&v)
}
// SetEventNil sets the value for Event to be an explicit nil
func (o *ServiceHookLog) SetEventNil() {
	o.Event.Set(nil)
}

// UnsetEvent ensures that no value is present for Event, not even an explicit nil
func (o *ServiceHookLog) UnsetEvent() {
	o.Event.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceHookLog) GetId() string {
	if o == nil || utils.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceHookLog) GetIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceHookLog) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceHookLog) SetId(v string) {
	o.Id = &v
}

// GetRequestContent returns the RequestContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetRequestContent() string {
	if o == nil || utils.IsNil(o.RequestContent.Get()) {
		var ret string
		return ret
	}
	return *o.RequestContent.Get()
}

// GetRequestContentOk returns a tuple with the RequestContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetRequestContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestContent.Get(), o.RequestContent.IsSet()
}

// HasRequestContent returns a boolean if a field has been set.
func (o *ServiceHookLog) HasRequestContent() bool {
	if o != nil && o.RequestContent.IsSet() {
		return true
	}

	return false
}

// SetRequestContent gets a reference to the given utils.NullableString and assigns it to the RequestContent field.
func (o *ServiceHookLog) SetRequestContent(v string) {
	o.RequestContent.Set(&v)
}
// SetRequestContentNil sets the value for RequestContent to be an explicit nil
func (o *ServiceHookLog) SetRequestContentNil() {
	o.RequestContent.Set(nil)
}

// UnsetRequestContent ensures that no value is present for RequestContent, not even an explicit nil
func (o *ServiceHookLog) UnsetRequestContent() {
	o.RequestContent.Unset()
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetRequestHeaders() string {
	if o == nil || utils.IsNil(o.RequestHeaders.Get()) {
		var ret string
		return ret
	}
	return *o.RequestHeaders.Get()
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetRequestHeadersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestHeaders.Get(), o.RequestHeaders.IsSet()
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *ServiceHookLog) HasRequestHeaders() bool {
	if o != nil && o.RequestHeaders.IsSet() {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given utils.NullableString and assigns it to the RequestHeaders field.
func (o *ServiceHookLog) SetRequestHeaders(v string) {
	o.RequestHeaders.Set(&v)
}
// SetRequestHeadersNil sets the value for RequestHeaders to be an explicit nil
func (o *ServiceHookLog) SetRequestHeadersNil() {
	o.RequestHeaders.Set(nil)
}

// UnsetRequestHeaders ensures that no value is present for RequestHeaders, not even an explicit nil
func (o *ServiceHookLog) UnsetRequestHeaders() {
	o.RequestHeaders.Unset()
}

// GetRequestId returns the RequestId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetRequestId() string {
	if o == nil || utils.IsNil(o.RequestId.Get()) {
		var ret string
		return ret
	}
	return *o.RequestId.Get()
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestId.Get(), o.RequestId.IsSet()
}

// HasRequestId returns a boolean if a field has been set.
func (o *ServiceHookLog) HasRequestId() bool {
	if o != nil && o.RequestId.IsSet() {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given utils.NullableString and assigns it to the RequestId field.
func (o *ServiceHookLog) SetRequestId(v string) {
	o.RequestId.Set(&v)
}
// SetRequestIdNil sets the value for RequestId to be an explicit nil
func (o *ServiceHookLog) SetRequestIdNil() {
	o.RequestId.Set(nil)
}

// UnsetRequestId ensures that no value is present for RequestId, not even an explicit nil
func (o *ServiceHookLog) UnsetRequestId() {
	o.RequestId.Unset()
}

// GetResponseAt returns the ResponseAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetResponseAt() int64 {
	if o == nil || utils.IsNil(o.ResponseAt.Get()) {
		var ret int64
		return ret
	}
	return *o.ResponseAt.Get()
}

// GetResponseAtOk returns a tuple with the ResponseAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetResponseAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseAt.Get(), o.ResponseAt.IsSet()
}

// HasResponseAt returns a boolean if a field has been set.
func (o *ServiceHookLog) HasResponseAt() bool {
	if o != nil && o.ResponseAt.IsSet() {
		return true
	}

	return false
}

// SetResponseAt gets a reference to the given utils.NullableInt64 and assigns it to the ResponseAt field.
func (o *ServiceHookLog) SetResponseAt(v int64) {
	o.ResponseAt.Set(&v)
}
// SetResponseAtNil sets the value for ResponseAt to be an explicit nil
func (o *ServiceHookLog) SetResponseAtNil() {
	o.ResponseAt.Set(nil)
}

// UnsetResponseAt ensures that no value is present for ResponseAt, not even an explicit nil
func (o *ServiceHookLog) UnsetResponseAt() {
	o.ResponseAt.Unset()
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetResponseBody() string {
	if o == nil || utils.IsNil(o.ResponseBody.Get()) {
		var ret string
		return ret
	}
	return *o.ResponseBody.Get()
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetResponseBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseBody.Get(), o.ResponseBody.IsSet()
}

// HasResponseBody returns a boolean if a field has been set.
func (o *ServiceHookLog) HasResponseBody() bool {
	if o != nil && o.ResponseBody.IsSet() {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given utils.NullableString and assigns it to the ResponseBody field.
func (o *ServiceHookLog) SetResponseBody(v string) {
	o.ResponseBody.Set(&v)
}
// SetResponseBodyNil sets the value for ResponseBody to be an explicit nil
func (o *ServiceHookLog) SetResponseBodyNil() {
	o.ResponseBody.Set(nil)
}

// UnsetResponseBody ensures that no value is present for ResponseBody, not even an explicit nil
func (o *ServiceHookLog) UnsetResponseBody() {
	o.ResponseBody.Unset()
}

// GetResponseHeaders returns the ResponseHeaders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetResponseHeaders() string {
	if o == nil || utils.IsNil(o.ResponseHeaders.Get()) {
		var ret string
		return ret
	}
	return *o.ResponseHeaders.Get()
}

// GetResponseHeadersOk returns a tuple with the ResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetResponseHeadersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseHeaders.Get(), o.ResponseHeaders.IsSet()
}

// HasResponseHeaders returns a boolean if a field has been set.
func (o *ServiceHookLog) HasResponseHeaders() bool {
	if o != nil && o.ResponseHeaders.IsSet() {
		return true
	}

	return false
}

// SetResponseHeaders gets a reference to the given utils.NullableString and assigns it to the ResponseHeaders field.
func (o *ServiceHookLog) SetResponseHeaders(v string) {
	o.ResponseHeaders.Set(&v)
}
// SetResponseHeadersNil sets the value for ResponseHeaders to be an explicit nil
func (o *ServiceHookLog) SetResponseHeadersNil() {
	o.ResponseHeaders.Set(nil)
}

// UnsetResponseHeaders ensures that no value is present for ResponseHeaders, not even an explicit nil
func (o *ServiceHookLog) UnsetResponseHeaders() {
	o.ResponseHeaders.Unset()
}

// GetResponseStatus returns the ResponseStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetResponseStatus() int64 {
	if o == nil || utils.IsNil(o.ResponseStatus.Get()) {
		var ret int64
		return ret
	}
	return *o.ResponseStatus.Get()
}

// GetResponseStatusOk returns a tuple with the ResponseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetResponseStatusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseStatus.Get(), o.ResponseStatus.IsSet()
}

// HasResponseStatus returns a boolean if a field has been set.
func (o *ServiceHookLog) HasResponseStatus() bool {
	if o != nil && o.ResponseStatus.IsSet() {
		return true
	}

	return false
}

// SetResponseStatus gets a reference to the given utils.NullableInt64 and assigns it to the ResponseStatus field.
func (o *ServiceHookLog) SetResponseStatus(v int64) {
	o.ResponseStatus.Set(&v)
}
// SetResponseStatusNil sets the value for ResponseStatus to be an explicit nil
func (o *ServiceHookLog) SetResponseStatusNil() {
	o.ResponseStatus.Set(nil)
}

// UnsetResponseStatus ensures that no value is present for ResponseStatus, not even an explicit nil
func (o *ServiceHookLog) UnsetResponseStatus() {
	o.ResponseStatus.Unset()
}

// GetSendAt returns the SendAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetSendAt() int64 {
	if o == nil || utils.IsNil(o.SendAt.Get()) {
		var ret int64
		return ret
	}
	return *o.SendAt.Get()
}

// GetSendAtOk returns a tuple with the SendAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetSendAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SendAt.Get(), o.SendAt.IsSet()
}

// HasSendAt returns a boolean if a field has been set.
func (o *ServiceHookLog) HasSendAt() bool {
	if o != nil && o.SendAt.IsSet() {
		return true
	}

	return false
}

// SetSendAt gets a reference to the given utils.NullableInt64 and assigns it to the SendAt field.
func (o *ServiceHookLog) SetSendAt(v int64) {
	o.SendAt.Set(&v)
}
// SetSendAtNil sets the value for SendAt to be an explicit nil
func (o *ServiceHookLog) SetSendAtNil() {
	o.SendAt.Set(nil)
}

// UnsetSendAt ensures that no value is present for SendAt, not even an explicit nil
func (o *ServiceHookLog) UnsetSendAt() {
	o.SendAt.Unset()
}

// GetServiceHookId returns the ServiceHookId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetServiceHookId() string {
	if o == nil || utils.IsNil(o.ServiceHookId.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceHookId.Get()
}

// GetServiceHookIdOk returns a tuple with the ServiceHookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetServiceHookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceHookId.Get(), o.ServiceHookId.IsSet()
}

// HasServiceHookId returns a boolean if a field has been set.
func (o *ServiceHookLog) HasServiceHookId() bool {
	if o != nil && o.ServiceHookId.IsSet() {
		return true
	}

	return false
}

// SetServiceHookId gets a reference to the given utils.NullableString and assigns it to the ServiceHookId field.
func (o *ServiceHookLog) SetServiceHookId(v string) {
	o.ServiceHookId.Set(&v)
}
// SetServiceHookIdNil sets the value for ServiceHookId to be an explicit nil
func (o *ServiceHookLog) SetServiceHookIdNil() {
	o.ServiceHookId.Set(nil)
}

// UnsetServiceHookId ensures that no value is present for ServiceHookId, not even an explicit nil
func (o *ServiceHookLog) UnsetServiceHookId() {
	o.ServiceHookId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHookLog) GetStatus() int64 {
	if o == nil || utils.IsNil(o.Status.Get()) {
		var ret int64
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHookLog) GetStatusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ServiceHookLog) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given utils.NullableInt64 and assigns it to the Status field.
func (o *ServiceHookLog) SetStatus(v int64) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ServiceHookLog) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ServiceHookLog) UnsetStatus() {
	o.Status.Unset()
}

func (o ServiceHookLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceHookLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt.IsSet() {
		toSerialize["CreatedAt"] = o.CreatedAt.Get()
	}
	if o.Event.IsSet() {
		toSerialize["Event"] = o.Event.Get()
	}
	if !utils.IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.RequestContent.IsSet() {
		toSerialize["RequestContent"] = o.RequestContent.Get()
	}
	if o.RequestHeaders.IsSet() {
		toSerialize["RequestHeaders"] = o.RequestHeaders.Get()
	}
	if o.RequestId.IsSet() {
		toSerialize["RequestId"] = o.RequestId.Get()
	}
	if o.ResponseAt.IsSet() {
		toSerialize["ResponseAt"] = o.ResponseAt.Get()
	}
	if o.ResponseBody.IsSet() {
		toSerialize["ResponseBody"] = o.ResponseBody.Get()
	}
	if o.ResponseHeaders.IsSet() {
		toSerialize["ResponseHeaders"] = o.ResponseHeaders.Get()
	}
	if o.ResponseStatus.IsSet() {
		toSerialize["ResponseStatus"] = o.ResponseStatus.Get()
	}
	if o.SendAt.IsSet() {
		toSerialize["SendAt"] = o.SendAt.Get()
	}
	if o.ServiceHookId.IsSet() {
		toSerialize["ServiceHookId"] = o.ServiceHookId.Get()
	}
	if o.Status.IsSet() {
		toSerialize["Status"] = o.Status.Get()
	}
	return toSerialize, nil
}

type NullableServiceHookLog struct {
	value *ServiceHookLog
	isSet bool
}

func (v NullableServiceHookLog) Get() *ServiceHookLog {
	return v.value
}

func (v *NullableServiceHookLog) Set(val *ServiceHookLog) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceHookLog) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceHookLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceHookLog(val *ServiceHookLog) *NullableServiceHookLog {
	return &NullableServiceHookLog{value: val, isSet: true}
}

func (v NullableServiceHookLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceHookLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


