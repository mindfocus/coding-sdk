/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DeleteProjectMemberPrincipalRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DeleteProjectMemberPrincipalRequest{}

// DeleteProjectMemberPrincipalRequest struct for DeleteProjectMemberPrincipalRequest
type DeleteProjectMemberPrincipalRequest struct {
	// 成员主体信息
	Principals []PrincipalDel `json:"Principals"`
	// 项目Id
	ProjectId int32 `json:"ProjectId"`
}

type _DeleteProjectMemberPrincipalRequest DeleteProjectMemberPrincipalRequest

// NewDeleteProjectMemberPrincipalRequest instantiates a new DeleteProjectMemberPrincipalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteProjectMemberPrincipalRequest(principals []PrincipalDel, projectId int32) *DeleteProjectMemberPrincipalRequest {
	this := DeleteProjectMemberPrincipalRequest{}
	this.Principals = principals
	this.ProjectId = projectId
	return &this
}

// NewDeleteProjectMemberPrincipalRequestWithDefaults instantiates a new DeleteProjectMemberPrincipalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteProjectMemberPrincipalRequestWithDefaults() *DeleteProjectMemberPrincipalRequest {
	this := DeleteProjectMemberPrincipalRequest{}
	return &this
}

// GetPrincipals returns the Principals field value
func (o *DeleteProjectMemberPrincipalRequest) GetPrincipals() []PrincipalDel {
	if o == nil {
		var ret []PrincipalDel
		return ret
	}

	return o.Principals
}

// GetPrincipalsOk returns a tuple with the Principals field value
// and a boolean to check if the value has been set.
func (o *DeleteProjectMemberPrincipalRequest) GetPrincipalsOk() ([]PrincipalDel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Principals, true
}

// SetPrincipals sets field value
func (o *DeleteProjectMemberPrincipalRequest) SetPrincipals(v []PrincipalDel) {
	o.Principals = v
}

// GetProjectId returns the ProjectId field value
func (o *DeleteProjectMemberPrincipalRequest) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DeleteProjectMemberPrincipalRequest) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DeleteProjectMemberPrincipalRequest) SetProjectId(v int32) {
	o.ProjectId = v
}

func (o DeleteProjectMemberPrincipalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteProjectMemberPrincipalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Principals"] = o.Principals
	toSerialize["ProjectId"] = o.ProjectId
	return toSerialize, nil
}

func (o *DeleteProjectMemberPrincipalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Principals",
		"ProjectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteProjectMemberPrincipalRequest := _DeleteProjectMemberPrincipalRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteProjectMemberPrincipalRequest)

	if err != nil {
		return err
	}

	*o = DeleteProjectMemberPrincipalRequest(varDeleteProjectMemberPrincipalRequest)

	return err
}

type NullableDeleteProjectMemberPrincipalRequest struct {
	value *DeleteProjectMemberPrincipalRequest
	isSet bool
}

func (v NullableDeleteProjectMemberPrincipalRequest) Get() *DeleteProjectMemberPrincipalRequest {
	return v.value
}

func (v *NullableDeleteProjectMemberPrincipalRequest) Set(val *DeleteProjectMemberPrincipalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteProjectMemberPrincipalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteProjectMemberPrincipalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteProjectMemberPrincipalRequest(val *DeleteProjectMemberPrincipalRequest) *NullableDeleteProjectMemberPrincipalRequest {
	return &NullableDeleteProjectMemberPrincipalRequest{value: val, isSet: true}
}

func (v NullableDeleteProjectMemberPrincipalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteProjectMemberPrincipalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


