/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the PingServiceHookRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PingServiceHookRequest{}

// PingServiceHookRequest struct for PingServiceHookRequest
type PingServiceHookRequest struct {
	// Service Hook 编号
	Id []string `json:"Id"`
	// 项目编号或者研发空间标号
	ProjectId int64 `json:"ProjectId"`
	// 目标数据类型：PROJECT,SPACE_NODE,PROGRAM,默认PROJECT
	TargetType *string `json:"TargetType,omitempty"`
}

type _PingServiceHookRequest PingServiceHookRequest

// NewPingServiceHookRequest instantiates a new PingServiceHookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingServiceHookRequest(id []string, projectId int64) *PingServiceHookRequest {
	this := PingServiceHookRequest{}
	this.Id = id
	this.ProjectId = projectId
	return &this
}

// NewPingServiceHookRequestWithDefaults instantiates a new PingServiceHookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingServiceHookRequestWithDefaults() *PingServiceHookRequest {
	this := PingServiceHookRequest{}
	return &this
}

// GetId returns the Id field value
func (o *PingServiceHookRequest) GetId() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PingServiceHookRequest) GetIdOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id, true
}

// SetId sets field value
func (o *PingServiceHookRequest) SetId(v []string) {
	o.Id = v
}

// GetProjectId returns the ProjectId field value
func (o *PingServiceHookRequest) GetProjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *PingServiceHookRequest) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *PingServiceHookRequest) SetProjectId(v int64) {
	o.ProjectId = v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *PingServiceHookRequest) GetTargetType() string {
	if o == nil || utils.IsNil(o.TargetType) {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingServiceHookRequest) GetTargetTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TargetType) {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *PingServiceHookRequest) HasTargetType() bool {
	if o != nil && !utils.IsNil(o.TargetType) {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *PingServiceHookRequest) SetTargetType(v string) {
	o.TargetType = &v
}

func (o PingServiceHookRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingServiceHookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["ProjectId"] = o.ProjectId
	if !utils.IsNil(o.TargetType) {
		toSerialize["TargetType"] = o.TargetType
	}
	return toSerialize, nil
}

func (o *PingServiceHookRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Id",
		"ProjectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPingServiceHookRequest := _PingServiceHookRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPingServiceHookRequest)

	if err != nil {
		return err
	}

	*o = PingServiceHookRequest(varPingServiceHookRequest)

	return err
}

type NullablePingServiceHookRequest struct {
	value *PingServiceHookRequest
	isSet bool
}

func (v NullablePingServiceHookRequest) Get() *PingServiceHookRequest {
	return v.value
}

func (v *NullablePingServiceHookRequest) Set(val *PingServiceHookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePingServiceHookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePingServiceHookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingServiceHookRequest(val *PingServiceHookRequest) *NullablePingServiceHookRequest {
	return &NullablePingServiceHookRequest{value: val, isSet: true}
}

func (v NullablePingServiceHookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingServiceHookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


