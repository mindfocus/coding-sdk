/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the CdDeployCount type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CdDeployCount{}

// CdDeployCount CdDeployCount 结构
type CdDeployCount struct {
	// 成功发布次数
	SucceedCount *int64 `json:"SucceedCount,omitempty"`
	// 发布总次数
	TotalCount *int64 `json:"TotalCount,omitempty"`
}

// NewCdDeployCount instantiates a new CdDeployCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdDeployCount() *CdDeployCount {
	this := CdDeployCount{}
	return &this
}

// NewCdDeployCountWithDefaults instantiates a new CdDeployCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdDeployCountWithDefaults() *CdDeployCount {
	this := CdDeployCount{}
	return &this
}

// GetSucceedCount returns the SucceedCount field value if set, zero value otherwise.
func (o *CdDeployCount) GetSucceedCount() int64 {
	if o == nil || utils.IsNil(o.SucceedCount) {
		var ret int64
		return ret
	}
	return *o.SucceedCount
}

// GetSucceedCountOk returns a tuple with the SucceedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdDeployCount) GetSucceedCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.SucceedCount) {
		return nil, false
	}
	return o.SucceedCount, true
}

// HasSucceedCount returns a boolean if a field has been set.
func (o *CdDeployCount) HasSucceedCount() bool {
	if o != nil && !utils.IsNil(o.SucceedCount) {
		return true
	}

	return false
}

// SetSucceedCount gets a reference to the given int64 and assigns it to the SucceedCount field.
func (o *CdDeployCount) SetSucceedCount(v int64) {
	o.SucceedCount = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *CdDeployCount) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdDeployCount) GetTotalCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *CdDeployCount) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *CdDeployCount) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o CdDeployCount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdDeployCount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.SucceedCount) {
		toSerialize["SucceedCount"] = o.SucceedCount
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableCdDeployCount struct {
	value *CdDeployCount
	isSet bool
}

func (v NullableCdDeployCount) Get() *CdDeployCount {
	return v.value
}

func (v *NullableCdDeployCount) Set(val *CdDeployCount) {
	v.value = val
	v.isSet = true
}

func (v NullableCdDeployCount) IsSet() bool {
	return v.isSet
}

func (v *NullableCdDeployCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdDeployCount(val *CdDeployCount) *NullableCdDeployCount {
	return &NullableCdDeployCount{value: val, isSet: true}
}

func (v NullableCdDeployCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdDeployCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


