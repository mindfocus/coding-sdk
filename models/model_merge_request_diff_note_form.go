/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the MergeRequestDiffNoteForm type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MergeRequestDiffNoteForm{}

// MergeRequestDiffNoteForm 创建Diff信息行评论表单
type MergeRequestDiffNoteForm struct {
	// 提交Id
	CommitSha string `json:"CommitSha"`
	// Diff信息行数
	Index int32 `json:"Index"`
	// 改动文件路径
	Path string `json:"Path"`
}

type _MergeRequestDiffNoteForm MergeRequestDiffNoteForm

// NewMergeRequestDiffNoteForm instantiates a new MergeRequestDiffNoteForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeRequestDiffNoteForm(commitSha string, index int32, path string) *MergeRequestDiffNoteForm {
	this := MergeRequestDiffNoteForm{}
	this.CommitSha = commitSha
	this.Index = index
	this.Path = path
	return &this
}

// NewMergeRequestDiffNoteFormWithDefaults instantiates a new MergeRequestDiffNoteForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeRequestDiffNoteFormWithDefaults() *MergeRequestDiffNoteForm {
	this := MergeRequestDiffNoteForm{}
	var commitSha string = ""
	this.CommitSha = commitSha
	var path string = ""
	this.Path = path
	return &this
}

// GetCommitSha returns the CommitSha field value
func (o *MergeRequestDiffNoteForm) GetCommitSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommitSha
}

// GetCommitShaOk returns a tuple with the CommitSha field value
// and a boolean to check if the value has been set.
func (o *MergeRequestDiffNoteForm) GetCommitShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommitSha, true
}

// SetCommitSha sets field value
func (o *MergeRequestDiffNoteForm) SetCommitSha(v string) {
	o.CommitSha = v
}

// GetIndex returns the Index field value
func (o *MergeRequestDiffNoteForm) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *MergeRequestDiffNoteForm) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *MergeRequestDiffNoteForm) SetIndex(v int32) {
	o.Index = v
}

// GetPath returns the Path field value
func (o *MergeRequestDiffNoteForm) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *MergeRequestDiffNoteForm) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *MergeRequestDiffNoteForm) SetPath(v string) {
	o.Path = v
}

func (o MergeRequestDiffNoteForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeRequestDiffNoteForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CommitSha"] = o.CommitSha
	toSerialize["Index"] = o.Index
	toSerialize["Path"] = o.Path
	return toSerialize, nil
}

func (o *MergeRequestDiffNoteForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"CommitSha",
		"Index",
		"Path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMergeRequestDiffNoteForm := _MergeRequestDiffNoteForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMergeRequestDiffNoteForm)

	if err != nil {
		return err
	}

	*o = MergeRequestDiffNoteForm(varMergeRequestDiffNoteForm)

	return err
}

type NullableMergeRequestDiffNoteForm struct {
	value *MergeRequestDiffNoteForm
	isSet bool
}

func (v NullableMergeRequestDiffNoteForm) Get() *MergeRequestDiffNoteForm {
	return v.value
}

func (v *NullableMergeRequestDiffNoteForm) Set(val *MergeRequestDiffNoteForm) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeRequestDiffNoteForm) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeRequestDiffNoteForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeRequestDiffNoteForm(val *MergeRequestDiffNoteForm) *NullableMergeRequestDiffNoteForm {
	return &NullableMergeRequestDiffNoteForm{value: val, isSet: true}
}

func (v NullableMergeRequestDiffNoteForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeRequestDiffNoteForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


