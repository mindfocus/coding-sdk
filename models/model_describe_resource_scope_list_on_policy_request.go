/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeResourceScopeListOnPolicyRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeResourceScopeListOnPolicyRequest{}

// DescribeResourceScopeListOnPolicyRequest struct for DescribeResourceScopeListOnPolicyRequest
type DescribeResourceScopeListOnPolicyRequest struct {
	Filter *DescribeResourceScopeListOnPolicyRequestFilter `json:"Filter,omitempty"`
	// 请求页码
	PageNumber int32 `json:"PageNumber"`
	// 请求条数
	PageSize int32 `json:"PageSize"`
	// 权限组 ID
	PolicyId int64 `json:"PolicyId"`
}

type _DescribeResourceScopeListOnPolicyRequest DescribeResourceScopeListOnPolicyRequest

// NewDescribeResourceScopeListOnPolicyRequest instantiates a new DescribeResourceScopeListOnPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeResourceScopeListOnPolicyRequest(pageNumber int32, pageSize int32, policyId int64) *DescribeResourceScopeListOnPolicyRequest {
	this := DescribeResourceScopeListOnPolicyRequest{}
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	this.PolicyId = policyId
	return &this
}

// NewDescribeResourceScopeListOnPolicyRequestWithDefaults instantiates a new DescribeResourceScopeListOnPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeResourceScopeListOnPolicyRequestWithDefaults() *DescribeResourceScopeListOnPolicyRequest {
	this := DescribeResourceScopeListOnPolicyRequest{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *DescribeResourceScopeListOnPolicyRequest) GetFilter() DescribeResourceScopeListOnPolicyRequestFilter {
	if o == nil || utils.IsNil(o.Filter) {
		var ret DescribeResourceScopeListOnPolicyRequestFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceScopeListOnPolicyRequest) GetFilterOk() (*DescribeResourceScopeListOnPolicyRequestFilter, bool) {
	if o == nil || utils.IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *DescribeResourceScopeListOnPolicyRequest) HasFilter() bool {
	if o != nil && !utils.IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given DescribeResourceScopeListOnPolicyRequestFilter and assigns it to the Filter field.
func (o *DescribeResourceScopeListOnPolicyRequest) SetFilter(v DescribeResourceScopeListOnPolicyRequestFilter) {
	o.Filter = &v
}

// GetPageNumber returns the PageNumber field value
func (o *DescribeResourceScopeListOnPolicyRequest) GetPageNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceScopeListOnPolicyRequest) GetPageNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *DescribeResourceScopeListOnPolicyRequest) SetPageNumber(v int32) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *DescribeResourceScopeListOnPolicyRequest) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceScopeListOnPolicyRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *DescribeResourceScopeListOnPolicyRequest) SetPageSize(v int32) {
	o.PageSize = v
}

// GetPolicyId returns the PolicyId field value
func (o *DescribeResourceScopeListOnPolicyRequest) GetPolicyId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceScopeListOnPolicyRequest) GetPolicyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyId, true
}

// SetPolicyId sets field value
func (o *DescribeResourceScopeListOnPolicyRequest) SetPolicyId(v int64) {
	o.PolicyId = v
}

func (o DescribeResourceScopeListOnPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeResourceScopeListOnPolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Filter) {
		toSerialize["Filter"] = o.Filter
	}
	toSerialize["PageNumber"] = o.PageNumber
	toSerialize["PageSize"] = o.PageSize
	toSerialize["PolicyId"] = o.PolicyId
	return toSerialize, nil
}

func (o *DescribeResourceScopeListOnPolicyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"PageNumber",
		"PageSize",
		"PolicyId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeResourceScopeListOnPolicyRequest := _DescribeResourceScopeListOnPolicyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeResourceScopeListOnPolicyRequest)

	if err != nil {
		return err
	}

	*o = DescribeResourceScopeListOnPolicyRequest(varDescribeResourceScopeListOnPolicyRequest)

	return err
}

type NullableDescribeResourceScopeListOnPolicyRequest struct {
	value *DescribeResourceScopeListOnPolicyRequest
	isSet bool
}

func (v NullableDescribeResourceScopeListOnPolicyRequest) Get() *DescribeResourceScopeListOnPolicyRequest {
	return v.value
}

func (v *NullableDescribeResourceScopeListOnPolicyRequest) Set(val *DescribeResourceScopeListOnPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeResourceScopeListOnPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeResourceScopeListOnPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeResourceScopeListOnPolicyRequest(val *DescribeResourceScopeListOnPolicyRequest) *NullableDescribeResourceScopeListOnPolicyRequest {
	return &NullableDescribeResourceScopeListOnPolicyRequest{value: val, isSet: true}
}

func (v NullableDescribeResourceScopeListOnPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeResourceScopeListOnPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


