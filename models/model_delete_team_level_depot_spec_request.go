/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DeleteTeamLevelDepotSpecRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DeleteTeamLevelDepotSpecRequest{}

// DeleteTeamLevelDepotSpecRequest struct for DeleteTeamLevelDepotSpecRequest
type DeleteTeamLevelDepotSpecRequest struct {
	// 仓库规范名字
	DepotSpecName string `json:"DepotSpecName"`
}

type _DeleteTeamLevelDepotSpecRequest DeleteTeamLevelDepotSpecRequest

// NewDeleteTeamLevelDepotSpecRequest instantiates a new DeleteTeamLevelDepotSpecRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteTeamLevelDepotSpecRequest(depotSpecName string) *DeleteTeamLevelDepotSpecRequest {
	this := DeleteTeamLevelDepotSpecRequest{}
	this.DepotSpecName = depotSpecName
	return &this
}

// NewDeleteTeamLevelDepotSpecRequestWithDefaults instantiates a new DeleteTeamLevelDepotSpecRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteTeamLevelDepotSpecRequestWithDefaults() *DeleteTeamLevelDepotSpecRequest {
	this := DeleteTeamLevelDepotSpecRequest{}
	return &this
}

// GetDepotSpecName returns the DepotSpecName field value
func (o *DeleteTeamLevelDepotSpecRequest) GetDepotSpecName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotSpecName
}

// GetDepotSpecNameOk returns a tuple with the DepotSpecName field value
// and a boolean to check if the value has been set.
func (o *DeleteTeamLevelDepotSpecRequest) GetDepotSpecNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotSpecName, true
}

// SetDepotSpecName sets field value
func (o *DeleteTeamLevelDepotSpecRequest) SetDepotSpecName(v string) {
	o.DepotSpecName = v
}

func (o DeleteTeamLevelDepotSpecRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteTeamLevelDepotSpecRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DepotSpecName"] = o.DepotSpecName
	return toSerialize, nil
}

func (o *DeleteTeamLevelDepotSpecRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"DepotSpecName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteTeamLevelDepotSpecRequest := _DeleteTeamLevelDepotSpecRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteTeamLevelDepotSpecRequest)

	if err != nil {
		return err
	}

	*o = DeleteTeamLevelDepotSpecRequest(varDeleteTeamLevelDepotSpecRequest)

	return err
}

type NullableDeleteTeamLevelDepotSpecRequest struct {
	value *DeleteTeamLevelDepotSpecRequest
	isSet bool
}

func (v NullableDeleteTeamLevelDepotSpecRequest) Get() *DeleteTeamLevelDepotSpecRequest {
	return v.value
}

func (v *NullableDeleteTeamLevelDepotSpecRequest) Set(val *DeleteTeamLevelDepotSpecRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteTeamLevelDepotSpecRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteTeamLevelDepotSpecRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteTeamLevelDepotSpecRequest(val *DeleteTeamLevelDepotSpecRequest) *NullableDeleteTeamLevelDepotSpecRequest {
	return &NullableDeleteTeamLevelDepotSpecRequest{value: val, isSet: true}
}

func (v NullableDeleteTeamLevelDepotSpecRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteTeamLevelDepotSpecRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


