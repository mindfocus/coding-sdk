/*
CODING OPEN API

  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the DescribeCdHostServerGroupResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DescribeCdHostServerGroupResponseData{}

// DescribeCdHostServerGroupResponseData DescribeCdHostServerGroupResponseData 结构
type DescribeCdHostServerGroupResponseData struct {
	HostServerGroup *HostServerGroupDetail `json:"HostServerGroup,omitempty"`
}

// NewDescribeCdHostServerGroupResponseData instantiates a new DescribeCdHostServerGroupResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCdHostServerGroupResponseData() *DescribeCdHostServerGroupResponseData {
	this := DescribeCdHostServerGroupResponseData{}
	return &this
}

// NewDescribeCdHostServerGroupResponseDataWithDefaults instantiates a new DescribeCdHostServerGroupResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCdHostServerGroupResponseDataWithDefaults() *DescribeCdHostServerGroupResponseData {
	this := DescribeCdHostServerGroupResponseData{}
	return &this
}

// GetHostServerGroup returns the HostServerGroup field value if set, zero value otherwise.
func (o *DescribeCdHostServerGroupResponseData) GetHostServerGroup() HostServerGroupDetail {
	if o == nil || utils.IsNil(o.HostServerGroup) {
		var ret HostServerGroupDetail
		return ret
	}
	return *o.HostServerGroup
}

// GetHostServerGroupOk returns a tuple with the HostServerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCdHostServerGroupResponseData) GetHostServerGroupOk() (*HostServerGroupDetail, bool) {
	if o == nil || utils.IsNil(o.HostServerGroup) {
		return nil, false
	}
	return o.HostServerGroup, true
}

// HasHostServerGroup returns a boolean if a field has been set.
func (o *DescribeCdHostServerGroupResponseData) HasHostServerGroup() bool {
	if o != nil && !utils.IsNil(o.HostServerGroup) {
		return true
	}

	return false
}

// SetHostServerGroup gets a reference to the given HostServerGroupDetail and assigns it to the HostServerGroup field.
func (o *DescribeCdHostServerGroupResponseData) SetHostServerGroup(v HostServerGroupDetail) {
	o.HostServerGroup = &v
}

func (o DescribeCdHostServerGroupResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCdHostServerGroupResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.HostServerGroup) {
		toSerialize["HostServerGroup"] = o.HostServerGroup
	}
	return toSerialize, nil
}

type NullableDescribeCdHostServerGroupResponseData struct {
	value *DescribeCdHostServerGroupResponseData
	isSet bool
}

func (v NullableDescribeCdHostServerGroupResponseData) Get() *DescribeCdHostServerGroupResponseData {
	return v.value
}

func (v *NullableDescribeCdHostServerGroupResponseData) Set(val *DescribeCdHostServerGroupResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCdHostServerGroupResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCdHostServerGroupResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCdHostServerGroupResponseData(val *DescribeCdHostServerGroupResponseData) *NullableDescribeCdHostServerGroupResponseData {
	return &NullableDescribeCdHostServerGroupResponseData{value: val, isSet: true}
}

func (v NullableDescribeCdHostServerGroupResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCdHostServerGroupResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


