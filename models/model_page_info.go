/*
CODING OPEN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"; "github.com/mindfocus/coding-sdk/utils"
)

// checks if the PageInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PageInfo{}

// PageInfo 页码信息
type PageInfo struct {
	// 页码数量
	PageNumber utils.NullableInt64 `json:"PageNumber,omitempty"`
	// 每页大小
	PageSize utils.NullableInt64 `json:"PageSize,omitempty"`
	// 页码总数量
	TotalPage utils.NullableInt64 `json:"TotalPage,omitempty"`
	// 数据总行数
	TotalRow utils.NullableInt64 `json:"TotalRow,omitempty"`
}

// NewPageInfo instantiates a new PageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageInfo() *PageInfo {
	this := PageInfo{}
	return &this
}

// NewPageInfoWithDefaults instantiates a new PageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageInfoWithDefaults() *PageInfo {
	this := PageInfo{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PageInfo) GetPageNumber() int64 {
	if o == nil || utils.IsNil(o.PageNumber.Get()) {
		var ret int64
		return ret
	}
	return *o.PageNumber.Get()
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageInfo) GetPageNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageNumber.Get(), o.PageNumber.IsSet()
}

// HasPageNumber returns a boolean if a field has been set.
func (o *PageInfo) HasPageNumber() bool {
	if o != nil && o.PageNumber.IsSet() {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given utils.NullableInt64 and assigns it to the PageNumber field.
func (o *PageInfo) SetPageNumber(v int64) {
	o.PageNumber.Set(&v)
}
// SetPageNumberNil sets the value for PageNumber to be an explicit nil
func (o *PageInfo) SetPageNumberNil() {
	o.PageNumber.Set(nil)
}

// UnsetPageNumber ensures that no value is present for PageNumber, not even an explicit nil
func (o *PageInfo) UnsetPageNumber() {
	o.PageNumber.Unset()
}

// GetPageSize returns the PageSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PageInfo) GetPageSize() int64 {
	if o == nil || utils.IsNil(o.PageSize.Get()) {
		var ret int64
		return ret
	}
	return *o.PageSize.Get()
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageInfo) GetPageSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageSize.Get(), o.PageSize.IsSet()
}

// HasPageSize returns a boolean if a field has been set.
func (o *PageInfo) HasPageSize() bool {
	if o != nil && o.PageSize.IsSet() {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given utils.NullableInt64 and assigns it to the PageSize field.
func (o *PageInfo) SetPageSize(v int64) {
	o.PageSize.Set(&v)
}
// SetPageSizeNil sets the value for PageSize to be an explicit nil
func (o *PageInfo) SetPageSizeNil() {
	o.PageSize.Set(nil)
}

// UnsetPageSize ensures that no value is present for PageSize, not even an explicit nil
func (o *PageInfo) UnsetPageSize() {
	o.PageSize.Unset()
}

// GetTotalPage returns the TotalPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PageInfo) GetTotalPage() int64 {
	if o == nil || utils.IsNil(o.TotalPage.Get()) {
		var ret int64
		return ret
	}
	return *o.TotalPage.Get()
}

// GetTotalPageOk returns a tuple with the TotalPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageInfo) GetTotalPageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalPage.Get(), o.TotalPage.IsSet()
}

// HasTotalPage returns a boolean if a field has been set.
func (o *PageInfo) HasTotalPage() bool {
	if o != nil && o.TotalPage.IsSet() {
		return true
	}

	return false
}

// SetTotalPage gets a reference to the given utils.NullableInt64 and assigns it to the TotalPage field.
func (o *PageInfo) SetTotalPage(v int64) {
	o.TotalPage.Set(&v)
}
// SetTotalPageNil sets the value for TotalPage to be an explicit nil
func (o *PageInfo) SetTotalPageNil() {
	o.TotalPage.Set(nil)
}

// UnsetTotalPage ensures that no value is present for TotalPage, not even an explicit nil
func (o *PageInfo) UnsetTotalPage() {
	o.TotalPage.Unset()
}

// GetTotalRow returns the TotalRow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PageInfo) GetTotalRow() int64 {
	if o == nil || utils.IsNil(o.TotalRow.Get()) {
		var ret int64
		return ret
	}
	return *o.TotalRow.Get()
}

// GetTotalRowOk returns a tuple with the TotalRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageInfo) GetTotalRowOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalRow.Get(), o.TotalRow.IsSet()
}

// HasTotalRow returns a boolean if a field has been set.
func (o *PageInfo) HasTotalRow() bool {
	if o != nil && o.TotalRow.IsSet() {
		return true
	}

	return false
}

// SetTotalRow gets a reference to the given utils.NullableInt64 and assigns it to the TotalRow field.
func (o *PageInfo) SetTotalRow(v int64) {
	o.TotalRow.Set(&v)
}
// SetTotalRowNil sets the value for TotalRow to be an explicit nil
func (o *PageInfo) SetTotalRowNil() {
	o.TotalRow.Set(nil)
}

// UnsetTotalRow ensures that no value is present for TotalRow, not even an explicit nil
func (o *PageInfo) UnsetTotalRow() {
	o.TotalRow.Unset()
}

func (o PageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PageNumber.IsSet() {
		toSerialize["PageNumber"] = o.PageNumber.Get()
	}
	if o.PageSize.IsSet() {
		toSerialize["PageSize"] = o.PageSize.Get()
	}
	if o.TotalPage.IsSet() {
		toSerialize["TotalPage"] = o.TotalPage.Get()
	}
	if o.TotalRow.IsSet() {
		toSerialize["TotalRow"] = o.TotalRow.Get()
	}
	return toSerialize, nil
}

type NullablePageInfo struct {
	value *PageInfo
	isSet bool
}

func (v NullablePageInfo) Get() *PageInfo {
	return v.value
}

func (v *NullablePageInfo) Set(val *PageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageInfo(val *PageInfo) *NullablePageInfo {
	return &NullablePageInfo{value: val, isSet: true}
}

func (v NullablePageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


